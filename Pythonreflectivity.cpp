/* Generated by Cython 0.22 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "D:\\Python_Anaconda\\lib\\site-packages\\numpy\\core\\include\\numpy\\ufuncobject.h", 
            "D:\\Python_Anaconda\\lib\\site-packages\\numpy\\core\\include\\numpy\\arrayobject.h"
        ], 
        "language": "c++", 
        "include_dirs": [
            "D:\\Python_Anaconda\\lib\\site-packages\\numpy\\core\\include"
        ]
    }
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03020000)
    #error Cython requires Python 2.6+ or Python 3.2+.
#else
#define CYTHON_ABI "0_22"
#include <stddef.h>
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
#define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyType_Type
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x030400a1 && !defined(Py_TPFLAGS_HAVE_FINALIZE)
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
  #define __Pyx_PyFrozenSet_Size(s)         PyObject_Size(s)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ? \
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
  #define __Pyx_PyFrozenSet_Size(s)         PySet_Size(s)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None)) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#define __Pyx_void_to_None(void_result) (void_result, Py_INCREF(Py_None), Py_None)
#ifdef __cplusplus
template<typename T>
void __Pyx_call_destructor(T* x) {
    x->~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(T& ref) : ptr(&ref) { }
    T *operator->() { return ptr; }
    operator T&() { return *ptr; }
  private:
    T *ptr;
};
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__Pythonreflectivity
#define __PYX_HAVE_API__Pythonreflectivity
#include "string.h"
#include "stdlib.h"
#include "stdio.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "math.h"
#include "complexobject.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (    \
    (sizeof(type) < sizeof(Py_ssize_t))  ||             \
    (sizeof(type) > sizeof(Py_ssize_t) &&               \
          likely(v < (type)PY_SSIZE_T_MAX ||            \
                 v == (type)PY_SSIZE_T_MAX)  &&         \
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||       \
                                v == (type)PY_SSIZE_T_MIN)))  ||  \
    (sizeof(type) == sizeof(Py_ssize_t) &&              \
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||        \
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "Pythonreflectivity.pyx",
  "__init__.pxd",
  "type.pxd",
};

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":726
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":727
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":728
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":729
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":733
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":734
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":735
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":736
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":740
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":741
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":750
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":751
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":752
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":754
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":755
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":756
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":758
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":759
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":761
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":762
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":763
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_18Pythonreflectivity_Lowestlayer;
struct __pyx_obj_18Pythonreflectivity_Layer;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":765
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":766
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":767
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":769
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;
struct __pyx_t_18Pythonreflectivity_CLayer;
struct __pyx_t_18Pythonreflectivity_Heterostructure;

/* "Pythonreflectivity.pyx":18
 * 
 * 
 * cdef struct CLayer:             # <<<<<<<<<<<<<<
 *     double Thickness, Roughness
 *     double complex ex, ey, ez, eg
 */
struct __pyx_t_18Pythonreflectivity_CLayer {
  double Thickness;
  double Roughness;
  __pyx_t_double_complex ex;
  __pyx_t_double_complex ey;
  __pyx_t_double_complex ez;
  __pyx_t_double_complex eg;
  int type;
  int magdir;
};

/* "Pythonreflectivity.pyx":27
 * cdef double deg_to_rad=0.017453292522222223
 * 
 * cdef struct Heterostructure:             # <<<<<<<<<<<<<<
 *     int NLayers
 *     int NLayers_types
 */
struct __pyx_t_18Pythonreflectivity_Heterostructure {
  int NLayers;
  int NLayers_types;
  int *MLLENGTH;
  int *MLREP;
  int **MLCOMP;
  struct __pyx_t_18Pythonreflectivity_CLayer *LR;
};

/* "Pythonreflectivity.pyx":37
 * 
 * 
 * cdef class Lowestlayer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef Heterostructure Mother
 */
struct __pyx_obj_18Pythonreflectivity_Lowestlayer {
  PyObject_HEAD
  struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer *__pyx_vtab;
  struct __pyx_t_18Pythonreflectivity_CLayer Layercontent;
  struct __pyx_t_18Pythonreflectivity_Heterostructure Mother;
  int islowestlayer;
};


/* "Pythonreflectivity.pyx":260
 * #        self.islowestlayer==x[8]
 * 
 * cdef class Layer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 */
struct __pyx_obj_18Pythonreflectivity_Layer {
  PyObject_HEAD
  struct __pyx_vtabstruct_18Pythonreflectivity_Layer *__pyx_vtab;
  struct __pyx_t_18Pythonreflectivity_CLayer Layercontent;
  int islowestlayer;
};



/* "Pythonreflectivity.pyx":37
 * 
 * 
 * cdef class Lowestlayer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef Heterostructure Mother
 */

struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer {
  int (*isthisthelowestlayer)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  long (*layercontentpointer)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  long (*motherpointer)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  double (*d)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  PyObject *(*setd)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch);
  double (*sigma)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  PyObject *(*setsigma)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsxx)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsyy)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epszz)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*eg)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch);
  int (*GetType)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *);
  int (*dir)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *);
};
static struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer *__pyx_vtabptr_18Pythonreflectivity_Lowestlayer;


/* "Pythonreflectivity.pyx":260
 * #        self.islowestlayer==x[8]
 * 
 * cdef class Layer:             # <<<<<<<<<<<<<<
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 */

struct __pyx_vtabstruct_18Pythonreflectivity_Layer {
  int (*isthisthelowestlayer)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  long (*layercontentpointer)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  double (*d)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  PyObject *(*setd)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch);
  double (*sigma)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  PyObject *(*setsigma)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsxx)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsyy)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epszz)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  __pyx_t_double_complex (*epsg)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch);
  int (*GetType)(struct __pyx_obj_18Pythonreflectivity_Layer *);
  int (*dir)(struct __pyx_obj_18Pythonreflectivity_Layer *);
};
static struct __pyx_vtabstruct_18Pythonreflectivity_Layer *__pyx_vtabptr_18Pythonreflectivity_Layer;

/* --- Runtime support code (head) --- */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {                            \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_XDECREF(tmp);                              \
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {                             \
        PyObject *tmp = (PyObject *) r;                         \
        r = v; __Pyx_DECREF(tmp);                               \
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name);

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name);

#include <string.h>

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) : \
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) : \
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback);

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name);

#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

static CYTHON_INLINE long __Pyx_mod_long(long, long); /* proto */

static CYTHON_INLINE long __Pyx_div_long(long, long); /* proto */

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck) \
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ? \
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) : \
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) : \
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            PyObject* args = PyTuple_Pack(1, key);
            if (likely(args))
                PyErr_SetObject(PyExc_KeyError, args);
            Py_XDECREF(args);
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#else
    #define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

static int __Pyx_SetVtable(PyObject *dict, void *vtable);

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if (defined(_WIN32) || defined(__clang__)) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject*);

#define __pyx_PyComplex_FromComplex(z) \
        PyComplex_FromDoubles((double)__Pyx_CREAL(z), \
                              (double)__Pyx_CIMAG(z))

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static int __pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_GetType(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_dir(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static long __pyx_f_18Pythonreflectivity_5Layer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch); /* proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_GetType(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_dir(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto*/

/* Module declarations from 'cython' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'libc.math' */

/* Module declarations from 'Pythonreflectivity' */
static PyTypeObject *__pyx_ptype_18Pythonreflectivity_Lowestlayer = 0;
static PyTypeObject *__pyx_ptype_18Pythonreflectivity_Layer = 0;
static double __pyx_v_18Pythonreflectivity_two_times_pi;
static double __pyx_v_18Pythonreflectivity_deg_to_rad;
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cquadr(__pyx_t_double_complex); /*proto*/
static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_quadr(double); /*proto*/
static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_t_double_complex); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cconj(__pyx_t_double_complex); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZsigma(double, __pyx_t_double_complex); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi(double, __pyx_t_double_complex, __pyx_t_double_complex); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi_m(double, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer(__pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, int); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_ipow(__pyx_t_double_complex, int); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, double, double, double, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex *); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Elimination_4x4(__pyx_t_double_complex (*)[4][4], __pyx_t_double_complex (*)[4]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_rt(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_PHI_to_PSI(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_MagneticPhi(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_NormalPhi(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_ANXBN(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Invert2x2(__pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_FillC0(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices(__pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_rootfunc2(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex); /*proto*/
static void __pyx_f_18Pythonreflectivity_MagneticPhi_z(__pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex *, __pyx_t_double_complex *, __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_PHI_to_PSI_z(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], int); /*proto*/
static void __pyx_f_18Pythonreflectivity_Calculate_rt_z(__pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[4], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], __pyx_t_double_complex (*)[2][2], int, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, __pyx_t_double_complex, double, double); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *, double, double, __pyx_t_double_complex (*)[2][2]); /*proto*/
static int __pyx_f_18Pythonreflectivity_FindLayerNumber(PyObject *, PyObject *); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_MakeConsistencyCheck(PyObject *, struct __pyx_t_18Pythonreflectivity_Heterostructure *, PyObject *); /*proto*/
#define __Pyx_MODULE_NAME "Pythonreflectivity"
int __pyx_module_is_main_Pythonreflectivity = 0;

/* Implementation of 'Pythonreflectivity' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_Exception;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static int __pyx_pf_18Pythonreflectivity_11Lowestlayer___cinit__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma, PyObject *__pyx_v_MLstructure, int __pyx_v_NL_types); /* proto */
static void __pyx_pf_18Pythonreflectivity_11Lowestlayer_2__dealloc__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_4isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_6layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_8motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_10d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_12setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_14sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_16setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_18seteps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_epsilon); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_20eps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_wl); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_22epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_24epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_26epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_28eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_30setmag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_dir); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_32mag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_34setepsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_36setepsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_38setepszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_40setepsg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static int __pyx_pf_18Pythonreflectivity_5Layer___cinit__(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_2isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_4layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_6d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_8setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_10sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_12setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_14seteps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_epsilon); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_16eps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_18epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_20epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_22epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_24epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_26setmag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_dir); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_28mag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_30setepsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_32setepsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_34setepszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_36setepsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_Generate_structure(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_NLayers_types, PyObject *__pyx_v_MLstructure); /* proto */
static PyObject *__pyx_pf_18Pythonreflectivity_2Reflectivity(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_HS, PyObject *__pyx_v_th, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_MultipleScattering, PyObject *__pyx_v_MagneticCutoff, PyObject *__pyx_v_Output); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static PyObject *__pyx_tp_new_18Pythonreflectivity_Lowestlayer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_18Pythonreflectivity_Layer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_[] = ",";
static char __pyx_k_0[] = "0";
static char __pyx_k_A[] = "A";
static char __pyx_k_B[] = "B";
static char __pyx_k_H[] = "H";
static char __pyx_k_I[] = "I";
static char __pyx_k_L[] = "L";
static char __pyx_k_O[] = "O";
static char __pyx_k_P[] = "P";
static char __pyx_k_Q[] = "Q";
static char __pyx_k_S[] = "S";
static char __pyx_k_T[] = "T";
static char __pyx_k_a[] = "a";
static char __pyx_k_b[] = "b";
static char __pyx_k_d[] = "d";
static char __pyx_k_f[] = "f";
static char __pyx_k_g[] = "g";
static char __pyx_k_h[] = "h";
static char __pyx_k_i[] = "i";
static char __pyx_k_l[] = "l";
static char __pyx_k_p[] = "p";
static char __pyx_k_q[] = "q";
static char __pyx_k_s[] = "s";
static char __pyx_k_t[] = "t";
static char __pyx_k_x[] = "x";
static char __pyx_k_y[] = "y";
static char __pyx_k_z[] = "z";
static char __pyx_k_HS[] = "HS";
static char __pyx_k_Zd[] = "Zd";
static char __pyx_k_Zf[] = "Zf";
static char __pyx_k_Zg[] = "Zg";
static char __pyx_k__3[] = "(";
static char __pyx_k__5[] = "*(";
static char __pyx_k__7[] = ")";
static char __pyx_k_eg[] = "eg";
static char __pyx_k_np[] = "np";
static char __pyx_k_th[] = "th";
static char __pyx_k_wl[] = "wl";
static char __pyx_k_len[] = "__len__";
static char __pyx_k_rpp[] = "rpp";
static char __pyx_k_rss[] = "rss";
static char __pyx_k_allx[] = "allx";
static char __pyx_k_ally[] = "ally";
static char __pyx_k_allz[] = "allz";
static char __pyx_k_epsg[] = "epsg";
static char __pyx_k_find[] = "find";
static char __pyx_k_main[] = "__main__";
static char __pyx_k_rmat[] = "rmat";
static char __pyx_k_setd[] = "setd";
static char __pyx_k_test[] = "__test__";
static char __pyx_k_Layer[] = "Layer ";
static char __pyx_k_array[] = "array";
static char __pyx_k_dtype[] = "dtype";
static char __pyx_k_epsxx[] = "epsxx";
static char __pyx_k_epsyy[] = "epsyy";
static char __pyx_k_epszz[] = "epszz";
static char __pyx_k_numpy[] = "numpy";
static char __pyx_k_range[] = "range";
static char __pyx_k_routl[] = "routl";
static char __pyx_k_routp[] = "routp";
static char __pyx_k_routr[] = "routr";
static char __pyx_k_routs[] = "routs";
static char __pyx_k_sigma[] = "sigma";
static char __pyx_k_split[] = "split";
static char __pyx_k_zeros[] = "zeros";
static char __pyx_k_Output[] = "Output";
static char __pyx_k_ctypes[] = "ctypes";
static char __pyx_k_import[] = "__import__";
static char __pyx_k_rempty[] = "rempty";
static char __pyx_k_NAngles[] = "NAngles";
static char __pyx_k_NLayers[] = "NLayers";
static char __pyx_k_default[] = "default";
static char __pyx_k_NL_types[] = "NL_types";
static char __pyx_k_Setting1[] = "Setting1";
static char __pyx_k_Setting2[] = "Setting2";
static char __pyx_k_Setting3[] = "Setting3";
static char __pyx_k_setsigma[] = "setsigma";
static char __pyx_k_Exception[] = "Exception";
static char __pyx_k_Cutoffquad[] = "Cutoffquad";
static char __pyx_k_ValueError[] = "ValueError";
static char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static char __pyx_k_wavelength[] = "wavelength";
static char __pyx_k_MLstructure[] = "MLstructure";
static char __pyx_k_Reflectivity[] = "Reflectivity";
static char __pyx_k_RuntimeError[] = "RuntimeError";
static char __pyx_k_NLayers_types[] = "NLayers_types";
static char __pyx_k_motherpointer[] = "motherpointer";
static char __pyx_k_MagneticCutoff[] = "MagneticCutoff";
static char __pyx_k_Generate_structure[] = "Generate_structure";
static char __pyx_k_MultipleScattering[] = "MultipleScattering";
static char __pyx_k_Pythonreflectivity[] = "Pythonreflectivity";
static char __pyx_k_layercontentpointer[] = "layercontentpointer";
static char __pyx_k_isthisthelowestlayer[] = "isthisthelowestlayer";
static char __pyx_k_This_layer_is_not_magnetic[] = "This layer is not magnetic";
static char __pyx_k_ndarray_is_not_C_contiguous[] = "ndarray is not C contiguous";
static char __pyx_k_No_magnetization_has_been_set[] = "No magnetization has been set";
static char __pyx_k_in_Multilayer_structure_string[] = " in Multilayer structure string is not defined";
static char __pyx_k_Allowed_input_for_setmag_is_x_y[] = "Allowed input for setmag is 'x', 'y', 'z' or '0'";
static char __pyx_k_unknown_dtype_code_in_numpy_pxd[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_Brackets_inside_Brackets_are_not[] = "Brackets inside Brackets are not supported.";
static char __pyx_k_D_Cygwin_home_mz5_Pythonreflecti[] = "D:\\Cygwin\\home\\mz5\\Pythonreflectivity_v1.0\\Pythonreflectivity.pyx";
static char __pyx_k_Epsilon_must_be_a_number_or_an_a[] = "Epsilon must be a number or an array of length 1, 3 or 4";
static char __pyx_k_Exception_Magnetic_heterostructu[] = "Exception! Magnetic heterostructures must have \"t\" or \"T\" as an output parameter";
static char __pyx_k_Exception_Multiple_magnetization[] = "Exception! Multiple magnetization directions are so far not supported!";
static char __pyx_k_Format_string_allocated_too_shor[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_Magnetized_along_the_x_direction[] = "Magnetized along the x direction";
static char __pyx_k_Magnetized_along_the_y_direction[] = "Magnetized along the y direction";
static char __pyx_k_Magnetized_along_the_z_direction[] = "Magnetized along the z direction";
static char __pyx_k_Non_native_byte_order_not_suppor[] = "Non-native byte order not supported";
static char __pyx_k_Please_generate_at_least_one_lay[] = "Please generate at least one layer!";
static char __pyx_k_Please_use_setmag_to_set_a_magne[] = "Please use setmag to set a magnetization direction for this layer before you set a gyrotropy";
static char __pyx_k_Something_is_wrong_with_the_Mult[] = "Something is wrong with the Multilayer brackets";
static char __pyx_k_Substrate_as_Multilayer_is_ill_d[] = "Substrate as Multilayer is ill-defined";
static char __pyx_k_Theta_must_be_in_the_range_0_the[] = "Theta must be in the range 0<theta<=90";
static char __pyx_k_Underlying_structure_not_initial[] = "Underlying structure not initialized. Please generate the layer list with Generate_Structure!";
static char __pyx_k_ndarray_is_not_Fortran_contiguou[] = "ndarray is not Fortran contiguous";
static char __pyx_k_Format_string_allocated_too_shor_2[] = "Format string allocated too short.";
static char __pyx_k_Theta_must_be_in_the_range_0_the_2[] = "Theta must be in the range 0<=theta<=90";
static char __pyx_k_Theta_must_be_in_the_range_0_the_3[] = "Theta must be in the range 0<theta<90";
static PyObject *__pyx_kp_s_;
static PyObject *__pyx_kp_s_0;
static PyObject *__pyx_n_s_A;
static PyObject *__pyx_kp_s_Allowed_input_for_setmag_is_x_y;
static PyObject *__pyx_n_s_B;
static PyObject *__pyx_kp_s_Brackets_inside_Brackets_are_not;
static PyObject *__pyx_n_s_Cutoffquad;
static PyObject *__pyx_kp_s_D_Cygwin_home_mz5_Pythonreflecti;
static PyObject *__pyx_kp_s_Epsilon_must_be_a_number_or_an_a;
static PyObject *__pyx_n_s_Exception;
static PyObject *__pyx_kp_s_Exception_Magnetic_heterostructu;
static PyObject *__pyx_kp_s_Exception_Multiple_magnetization;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor;
static PyObject *__pyx_kp_u_Format_string_allocated_too_shor_2;
static PyObject *__pyx_n_s_Generate_structure;
static PyObject *__pyx_n_s_HS;
static PyObject *__pyx_kp_s_Layer;
static PyObject *__pyx_n_s_MLstructure;
static PyObject *__pyx_n_s_MagneticCutoff;
static PyObject *__pyx_kp_s_Magnetized_along_the_x_direction;
static PyObject *__pyx_kp_s_Magnetized_along_the_y_direction;
static PyObject *__pyx_kp_s_Magnetized_along_the_z_direction;
static PyObject *__pyx_n_s_MultipleScattering;
static PyObject *__pyx_n_s_NAngles;
static PyObject *__pyx_n_s_NL_types;
static PyObject *__pyx_n_s_NLayers;
static PyObject *__pyx_n_s_NLayers_types;
static PyObject *__pyx_kp_s_No_magnetization_has_been_set;
static PyObject *__pyx_kp_u_Non_native_byte_order_not_suppor;
static PyObject *__pyx_n_s_Output;
static PyObject *__pyx_n_s_P;
static PyObject *__pyx_kp_s_Please_generate_at_least_one_lay;
static PyObject *__pyx_kp_s_Please_use_setmag_to_set_a_magne;
static PyObject *__pyx_n_s_Pythonreflectivity;
static PyObject *__pyx_n_s_Reflectivity;
static PyObject *__pyx_n_s_RuntimeError;
static PyObject *__pyx_n_s_S;
static PyObject *__pyx_n_s_Setting1;
static PyObject *__pyx_n_s_Setting2;
static PyObject *__pyx_n_s_Setting3;
static PyObject *__pyx_kp_s_Something_is_wrong_with_the_Mult;
static PyObject *__pyx_kp_s_Substrate_as_Multilayer_is_ill_d;
static PyObject *__pyx_n_s_T;
static PyObject *__pyx_kp_s_Theta_must_be_in_the_range_0_the;
static PyObject *__pyx_kp_s_Theta_must_be_in_the_range_0_the_2;
static PyObject *__pyx_kp_s_Theta_must_be_in_the_range_0_the_3;
static PyObject *__pyx_kp_s_This_layer_is_not_magnetic;
static PyObject *__pyx_kp_s_Underlying_structure_not_initial;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_s__3;
static PyObject *__pyx_kp_s__5;
static PyObject *__pyx_kp_s__7;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_allx;
static PyObject *__pyx_n_s_ally;
static PyObject *__pyx_n_s_allz;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_ctypes;
static PyObject *__pyx_n_s_d;
static PyObject *__pyx_n_s_default;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_eg;
static PyObject *__pyx_n_s_epsg;
static PyObject *__pyx_n_s_epsxx;
static PyObject *__pyx_n_s_epsyy;
static PyObject *__pyx_n_s_epszz;
static PyObject *__pyx_n_s_find;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_kp_s_in_Multilayer_structure_string;
static PyObject *__pyx_n_s_isthisthelowestlayer;
static PyObject *__pyx_n_s_layercontentpointer;
static PyObject *__pyx_n_s_len;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_motherpointer;
static PyObject *__pyx_kp_u_ndarray_is_not_C_contiguous;
static PyObject *__pyx_kp_u_ndarray_is_not_Fortran_contiguou;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_n_s_p;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rempty;
static PyObject *__pyx_n_s_rmat;
static PyObject *__pyx_n_s_routl;
static PyObject *__pyx_n_s_routp;
static PyObject *__pyx_n_s_routr;
static PyObject *__pyx_n_s_routs;
static PyObject *__pyx_n_s_rpp;
static PyObject *__pyx_n_s_rss;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_n_s_setd;
static PyObject *__pyx_n_s_setsigma;
static PyObject *__pyx_n_s_sigma;
static PyObject *__pyx_n_s_split;
static PyObject *__pyx_n_s_t;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_th;
static PyObject *__pyx_kp_u_unknown_dtype_code_in_numpy_pxd;
static PyObject *__pyx_n_s_wavelength;
static PyObject *__pyx_n_s_wl;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_s_z;
static PyObject *__pyx_n_s_zeros;
static PyObject *__pyx_float_0_5;
static PyObject *__pyx_float_1_0Eneg_6;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__33;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_codeobj__52;
static PyObject *__pyx_codeobj__54;

/* "Pythonreflectivity.pyx":41
 *     cdef Heterostructure Mother
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma, MLstructure, int NL_types):             # <<<<<<<<<<<<<<
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d
 */

/* Python wrapper */
static int __pyx_pw_18Pythonreflectivity_11Lowestlayer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_18Pythonreflectivity_11Lowestlayer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_d;
  double __pyx_v_sigma;
  PyObject *__pyx_v_MLstructure = 0;
  int __pyx_v_NL_types;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,&__pyx_n_s_sigma,&__pyx_n_s_MLstructure,&__pyx_n_s_NL_types,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_d)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sigma)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_MLstructure)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_NL_types)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_sigma = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_MLstructure = values[2];
    __pyx_v_NL_types = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_NL_types == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 41; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer___cinit__(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_d, __pyx_v_sigma, __pyx_v_MLstructure, __pyx_v_NL_types);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_18Pythonreflectivity_11Lowestlayer___cinit__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma, PyObject *__pyx_v_MLstructure, int __pyx_v_NL_types) {
  int __pyx_v_NLayers;
  int *__pyx_v_MLLENGTH;
  int *__pyx_v_MLREP;
  int **__pyx_v_MLCOMP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_SaveNumbers = NULL;
  PyObject *__pyx_v_a = NULL;
  Py_ssize_t __pyx_v_N;
  PyObject *__pyx_v_j = NULL;
  int __pyx_v_IsInBracket;
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_v_b = NULL;
  PyObject *__pyx_v_l = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  size_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "Pythonreflectivity.pyx":43
 *     def __cinit__(self, double d, double sigma, MLstructure, int NL_types):
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":44
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma             # <<<<<<<<<<<<<<
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":45
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 */
  __pyx_v_self->Layercontent.type = 1;

  /* "Pythonreflectivity.pyx":46
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 */
  __pyx_v_self->Layercontent.magdir = 0;

  /* "Pythonreflectivity.pyx":47
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 */
  __pyx_v_self->Layercontent.ex = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":48
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 */
  __pyx_v_self->Layercontent.ey = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":49
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=0
 *         self.islowestlayer=1
 */
  __pyx_v_self->Layercontent.ez = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":50
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *         self.islowestlayer=1
 *         cdef int NLayers
 */
  __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":51
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 *         self.islowestlayer=1             # <<<<<<<<<<<<<<
 *         cdef int NLayers
 *         cdef int *MLLENGTH
 */
  __pyx_v_self->islowestlayer = 1;

  /* "Pythonreflectivity.pyx":57
 *         cdef int **MLCOMP
 *         cdef CLayer *LR
 *         NLayers=FindLayerNumber(MLstructure, NL_types)             # <<<<<<<<<<<<<<
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NL_types); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_NLayers = __pyx_f_18Pythonreflectivity_FindLayerNumber(__pyx_v_MLstructure, __pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":58
 *         cdef CLayer *LR
 *         NLayers=FindLayerNumber(MLstructure, NL_types)
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))             # <<<<<<<<<<<<<<
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))
 */
  __pyx_v_MLLENGTH = ((int *)malloc((__pyx_v_NLayers * (sizeof(int)))));

  /* "Pythonreflectivity.pyx":59
 *         NLayers=FindLayerNumber(MLstructure, NL_types)
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))
 *         MLREP = <int*>malloc( NLayers* sizeof(int))             # <<<<<<<<<<<<<<
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 */
  __pyx_v_MLREP = ((int *)malloc((__pyx_v_NLayers * (sizeof(int)))));

  /* "Pythonreflectivity.pyx":60
 *         MLLENGTH = <int*>malloc( NLayers* sizeof(int))
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))             # <<<<<<<<<<<<<<
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 * 
 */
  __pyx_v_MLCOMP = ((int **)malloc((__pyx_v_NLayers * (sizeof(int *)))));

  /* "Pythonreflectivity.pyx":61
 *         MLREP = <int*>malloc( NLayers* sizeof(int))
 *         MLCOMP = <int**>malloc( NLayers* sizeof(int*))
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )             # <<<<<<<<<<<<<<
 * 
 *         if(MLstructure=="default"):
 */
  __pyx_v_LR = ((struct __pyx_t_18Pythonreflectivity_CLayer *)malloc((__pyx_v_NL_types * (sizeof(struct __pyx_t_18Pythonreflectivity_CLayer)))));

  /* "Pythonreflectivity.pyx":63
 *         LR=<CLayer*>malloc( NL_types* sizeof(CLayer) )
 * 
 *         if(MLstructure=="default"):             # <<<<<<<<<<<<<<
 *             for i in range(NL_types):
 *                 MLREP[i]=1
 */
  __pyx_t_2 = (__Pyx_PyString_Equals(__pyx_v_MLstructure, __pyx_n_s_default, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":64
 * 
 *         if(MLstructure=="default"):
 *             for i in range(NL_types):             # <<<<<<<<<<<<<<
 *                 MLREP[i]=1
 *                 MLLENGTH[i]=1
 */
    __pyx_t_3 = __pyx_v_NL_types;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_i = __pyx_t_4;

      /* "Pythonreflectivity.pyx":65
 *         if(MLstructure=="default"):
 *             for i in range(NL_types):
 *                 MLREP[i]=1             # <<<<<<<<<<<<<<
 *                 MLLENGTH[i]=1
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))
 */
      (__pyx_v_MLREP[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":66
 *             for i in range(NL_types):
 *                 MLREP[i]=1
 *                 MLLENGTH[i]=1             # <<<<<<<<<<<<<<
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))
 *                 MLCOMP[i][0]=i
 */
      (__pyx_v_MLLENGTH[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":67
 *                 MLREP[i]=1
 *                 MLLENGTH[i]=1
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *                 MLCOMP[i][0]=i
 *         else:
 */
      (__pyx_v_MLCOMP[__pyx_v_i]) = ((int *)malloc((sizeof(int))));

      /* "Pythonreflectivity.pyx":68
 *                 MLLENGTH[i]=1
 *                 MLCOMP[i]= <int*>malloc(sizeof(int))
 *                 MLCOMP[i][0]=i             # <<<<<<<<<<<<<<
 *         else:
 *             SaveNumbers=[]
 */
      ((__pyx_v_MLCOMP[__pyx_v_i])[0]) = __pyx_v_i;
    }
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":70
 *                 MLCOMP[i][0]=i
 *         else:
 *             SaveNumbers=[]             # <<<<<<<<<<<<<<
 * 
 *             a=MLstructure.split(",")
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_SaveNumbers = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "Pythonreflectivity.pyx":72
 *             SaveNumbers=[]
 * 
 *             a=MLstructure.split(",")             # <<<<<<<<<<<<<<
 * 
 *             N=len(a)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_MLstructure, __pyx_n_s_split); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_a = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "Pythonreflectivity.pyx":74
 *             a=MLstructure.split(",")
 * 
 *             N=len(a)             # <<<<<<<<<<<<<<
 *             j=0
 *             IsInBracket=False
 */
    __pyx_t_4 = PyObject_Length(__pyx_v_a); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_N = __pyx_t_4;

    /* "Pythonreflectivity.pyx":75
 * 
 *             N=len(a)
 *             j=0             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *             k=0
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_j = __pyx_int_0;

    /* "Pythonreflectivity.pyx":76
 *             N=len(a)
 *             j=0
 *             IsInBracket=False             # <<<<<<<<<<<<<<
 *             k=0
 *             for i in range(N):
 */
    __pyx_v_IsInBracket = 0;

    /* "Pythonreflectivity.pyx":77
 *             j=0
 *             IsInBracket=False
 *             k=0             # <<<<<<<<<<<<<<
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_v_k = __pyx_int_0;

    /* "Pythonreflectivity.pyx":78
 *             IsInBracket=False
 *             k=0
 *             for i in range(N):             # <<<<<<<<<<<<<<
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')
 */
    __pyx_t_4 = __pyx_v_N;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_4; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "Pythonreflectivity.pyx":79
 *             k=0
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_find); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_5, __pyx_int_neg_1, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_2) {

        /* "Pythonreflectivity.pyx":80
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')             # <<<<<<<<<<<<<<
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":81
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])             # <<<<<<<<<<<<<<
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 *                     IsInBracket=True
 */
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        (__pyx_v_MLREP[__pyx_t_7]) = __pyx_t_3;

        /* "Pythonreflectivity.pyx":82
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]             # <<<<<<<<<<<<<<
 *                     IsInBracket=True
 *                     k=1
 */
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_b, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 82; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_1));
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":83
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 *                     IsInBracket=True             # <<<<<<<<<<<<<<
 *                     k=1
 *                 elif (a[i].find(')')!=-1):
 */
        __pyx_v_IsInBracket = 1;

        /* "Pythonreflectivity.pyx":84
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 *                     IsInBracket=True
 *                     k=1             # <<<<<<<<<<<<<<
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')
 */
        __Pyx_INCREF(__pyx_int_1);
        __Pyx_DECREF_SET(__pyx_v_k, __pyx_int_1);
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":85
 *                     IsInBracket=True
 *                     k=1
 *                 elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 */
      __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_1, __pyx_int_neg_1, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_2) {

        /* "Pythonreflectivity.pyx":86
 *                     k=1
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')             # <<<<<<<<<<<<<<
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False
 */
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "Pythonreflectivity.pyx":87
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]             # <<<<<<<<<<<<<<
 *                     IsInBracket=False
 *                     k=k+1
 */
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_1));
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":88
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False             # <<<<<<<<<<<<<<
 *                     k=k+1
 *                     MLLENGTH[j]=k
 */
        __pyx_v_IsInBracket = 0;

        /* "Pythonreflectivity.pyx":89
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False
 *                     k=k+1             # <<<<<<<<<<<<<<
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 */
        __pyx_t_1 = PyNumber_Add(__pyx_v_k, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF_SET(__pyx_v_k, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Pythonreflectivity.pyx":90
 *                     IsInBracket=False
 *                     k=k+1
 *                     MLLENGTH[j]=k             # <<<<<<<<<<<<<<
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):
 */
        __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_v_k); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 90; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        (__pyx_v_MLLENGTH[__pyx_t_7]) = __pyx_t_3;

        /* "Pythonreflectivity.pyx":91
 *                     k=k+1
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))             # <<<<<<<<<<<<<<
 *                     for l in range(MLLENGTH[j]):
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 */
        __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_1 = __Pyx_PyInt_From_int((__pyx_v_MLLENGTH[__pyx_t_7])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyInt_FromSize_t((sizeof(int))); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_t_8); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 91; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        (__pyx_v_MLCOMP[__pyx_t_7]) = ((int *)malloc(__pyx_t_9));

        /* "Pythonreflectivity.pyx":92
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):             # <<<<<<<<<<<<<<
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]
 */
        __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_8 = __Pyx_PyInt_From_int((__pyx_v_MLLENGTH[__pyx_t_7])); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_5, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
          __pyx_t_5 = __pyx_t_8; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
          __pyx_t_10 = NULL;
        } else {
          __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        for (;;) {
          if (likely(!__pyx_t_10)) {
            if (likely(PyList_CheckExact(__pyx_t_5))) {
              if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_8 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_8); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              #else
              __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              #endif
            } else {
              if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_8); __pyx_t_7++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              #else
              __pyx_t_8 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              #endif
            }
          } else {
            __pyx_t_8 = __pyx_t_10(__pyx_t_5);
            if (unlikely(!__pyx_t_8)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(exc_type == PyExc_StopIteration || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 92; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_8);
          }
          __Pyx_XDECREF_SET(__pyx_v_l, __pyx_t_8);
          __pyx_t_8 = 0;

          /* "Pythonreflectivity.pyx":93
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):
 *                         MLCOMP[j][l]=int(SaveNumbers[l])             # <<<<<<<<<<<<<<
 *                     SaveNumbers=[]
 *                     j=j+1
 */
          __pyx_t_8 = PyObject_GetItem(__pyx_v_SaveNumbers, __pyx_v_l); if (unlikely(__pyx_t_8 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_8);
          __pyx_t_1 = PyNumber_Int(__pyx_t_8); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
          __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_11 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_11 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_l); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          ((__pyx_v_MLCOMP[__pyx_t_11])[__pyx_t_12]) = __pyx_t_3;

          /* "Pythonreflectivity.pyx":92
 *                     MLLENGTH[j]=k
 *                     MLCOMP[j]= <int*>malloc(int(MLLENGTH[j])*sizeof(int))
 *                     for l in range(MLLENGTH[j]):             # <<<<<<<<<<<<<<
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]
 */
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "Pythonreflectivity.pyx":94
 *                     for l in range(MLLENGTH[j]):
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]             # <<<<<<<<<<<<<<
 *                     j=j+1
 *                 else:
 */
        __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 94; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "Pythonreflectivity.pyx":95
 *                         MLCOMP[j][l]=int(SaveNumbers[l])
 *                     SaveNumbers=[]
 *                     j=j+1             # <<<<<<<<<<<<<<
 *                 else:
 *                     if(IsInBracket):
 */
        __pyx_t_5 = PyNumber_Add(__pyx_v_j, __pyx_int_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_5);
        __pyx_t_5 = 0;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":97
 *                     j=j+1
 *                 else:
 *                     if(IsInBracket):             # <<<<<<<<<<<<<<
 *                         k=k+1
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 */
        __pyx_t_2 = (__pyx_v_IsInBracket != 0);
        if (__pyx_t_2) {

          /* "Pythonreflectivity.pyx":98
 *                 else:
 *                     if(IsInBracket):
 *                         k=k+1             # <<<<<<<<<<<<<<
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 *                     else:
 */
          __pyx_t_5 = PyNumber_Add(__pyx_v_k, __pyx_int_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 98; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF_SET(__pyx_v_k, __pyx_t_5);
          __pyx_t_5 = 0;

          /* "Pythonreflectivity.pyx":99
 *                     if(IsInBracket):
 *                         k=k+1
 *                         SaveNumbers=SaveNumbers+[int(a[i])]             # <<<<<<<<<<<<<<
 *                     else:
 *                         MLREP[j]=1
 */
          __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_1 = PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_1));
          __pyx_t_1 = 0;
          goto __pyx_L11;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":101
 *                         SaveNumbers=SaveNumbers+[int(a[i])]
 *                     else:
 *                         MLREP[j]=1             # <<<<<<<<<<<<<<
 *                         MLLENGTH[j]=1
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 */
          __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          (__pyx_v_MLREP[__pyx_t_7]) = 1;

          /* "Pythonreflectivity.pyx":102
 *                     else:
 *                         MLREP[j]=1
 *                         MLLENGTH[j]=1             # <<<<<<<<<<<<<<
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 *                         MLCOMP[j][0]=int(a[i])
 */
          __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          (__pyx_v_MLLENGTH[__pyx_t_7]) = 1;

          /* "Pythonreflectivity.pyx":103
 *                         MLREP[j]=1
 *                         MLLENGTH[j]=1
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *                         MLCOMP[j][0]=int(a[i])
 *                         j=j+1
 */
          __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          (__pyx_v_MLCOMP[__pyx_t_7]) = ((int *)malloc((sizeof(int))));

          /* "Pythonreflectivity.pyx":104
 *                         MLLENGTH[j]=1
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 *                         MLCOMP[j][0]=int(a[i])             # <<<<<<<<<<<<<<
 *                         j=j+1
 * 
 */
          __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_5 = PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          ((__pyx_v_MLCOMP[__pyx_t_7])[0]) = __pyx_t_3;

          /* "Pythonreflectivity.pyx":105
 *                         MLCOMP[j]= <int*>malloc(sizeof(int))
 *                         MLCOMP[j][0]=int(a[i])
 *                         j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_t_5 = PyNumber_Add(__pyx_v_j, __pyx_int_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_5);
          __pyx_t_5 = 0;
        }
        __pyx_L11:;
      }
      __pyx_L8:;
    }
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":110
 * 
 * 
 *         self.Mother.MLLENGTH=MLLENGTH             # <<<<<<<<<<<<<<
 *         self.Mother.MLREP=MLREP
 *         self.Mother.MLCOMP=MLCOMP
 */
  __pyx_v_self->Mother.MLLENGTH = __pyx_v_MLLENGTH;

  /* "Pythonreflectivity.pyx":111
 * 
 *         self.Mother.MLLENGTH=MLLENGTH
 *         self.Mother.MLREP=MLREP             # <<<<<<<<<<<<<<
 *         self.Mother.MLCOMP=MLCOMP
 *         self.Mother.NLayers=NLayers
 */
  __pyx_v_self->Mother.MLREP = __pyx_v_MLREP;

  /* "Pythonreflectivity.pyx":112
 *         self.Mother.MLLENGTH=MLLENGTH
 *         self.Mother.MLREP=MLREP
 *         self.Mother.MLCOMP=MLCOMP             # <<<<<<<<<<<<<<
 *         self.Mother.NLayers=NLayers
 *         self.Mother.NLayers_types=NL_types
 */
  __pyx_v_self->Mother.MLCOMP = __pyx_v_MLCOMP;

  /* "Pythonreflectivity.pyx":113
 *         self.Mother.MLREP=MLREP
 *         self.Mother.MLCOMP=MLCOMP
 *         self.Mother.NLayers=NLayers             # <<<<<<<<<<<<<<
 *         self.Mother.NLayers_types=NL_types
 *         self.Mother.LR=LR
 */
  __pyx_v_self->Mother.NLayers = __pyx_v_NLayers;

  /* "Pythonreflectivity.pyx":114
 *         self.Mother.MLCOMP=MLCOMP
 *         self.Mother.NLayers=NLayers
 *         self.Mother.NLayers_types=NL_types             # <<<<<<<<<<<<<<
 *         self.Mother.LR=LR
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 */
  __pyx_v_self->Mother.NLayers_types = __pyx_v_NL_types;

  /* "Pythonreflectivity.pyx":115
 *         self.Mother.NLayers=NLayers
 *         self.Mother.NLayers_types=NL_types
 *         self.Mother.LR=LR             # <<<<<<<<<<<<<<
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 * 
 */
  __pyx_v_self->Mother.LR = __pyx_v_LR;

  /* "Pythonreflectivity.pyx":116
 *         self.Mother.NLayers_types=NL_types
 *         self.Mother.LR=LR
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_NL_types); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_MakeConsistencyCheck(__pyx_v_MLstructure, (&__pyx_v_self->Mother), __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 116; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":41
 *     cdef Heterostructure Mother
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma, MLstructure, int NL_types):             # <<<<<<<<<<<<<<
 *       #  print "init is called"
 *         self.Layercontent.Thickness = d
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_SaveNumbers);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":118
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):
 */

/* Python wrapper */
static void __pyx_pw_18Pythonreflectivity_11Lowestlayer_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_18Pythonreflectivity_11Lowestlayer_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_18Pythonreflectivity_11Lowestlayer_2__dealloc__(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_18Pythonreflectivity_11Lowestlayer_2__dealloc__(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  int __pyx_v_i;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "Pythonreflectivity.pyx":120
 *     def __dealloc__(self):
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):             # <<<<<<<<<<<<<<
 *             free(self.Mother.MLCOMP[i])
 *         free(self.Mother.MLCOMP)
 */
  __pyx_t_1 = __pyx_v_self->Mother.NLayers;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "Pythonreflectivity.pyx":121
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):
 *             free(self.Mother.MLCOMP[i])             # <<<<<<<<<<<<<<
 *         free(self.Mother.MLCOMP)
 *         free(self.Mother.MLLENGTH)
 */
    free((__pyx_v_self->Mother.MLCOMP[__pyx_v_i]));
  }

  /* "Pythonreflectivity.pyx":122
 *         for i in range(self.Mother.NLayers):
 *             free(self.Mother.MLCOMP[i])
 *         free(self.Mother.MLCOMP)             # <<<<<<<<<<<<<<
 *         free(self.Mother.MLLENGTH)
 *         free(self.Mother.MLREP)
 */
  free(__pyx_v_self->Mother.MLCOMP);

  /* "Pythonreflectivity.pyx":123
 *             free(self.Mother.MLCOMP[i])
 *         free(self.Mother.MLCOMP)
 *         free(self.Mother.MLLENGTH)             # <<<<<<<<<<<<<<
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 */
  free(__pyx_v_self->Mother.MLLENGTH);

  /* "Pythonreflectivity.pyx":124
 *         free(self.Mother.MLCOMP)
 *         free(self.Mother.MLLENGTH)
 *         free(self.Mother.MLREP)             # <<<<<<<<<<<<<<
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):
 */
  free(__pyx_v_self->Mother.MLREP);

  /* "Pythonreflectivity.pyx":125
 *         free(self.Mother.MLLENGTH)
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)             # <<<<<<<<<<<<<<
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 */
  free(__pyx_v_self->Mother.LR);

  /* "Pythonreflectivity.pyx":118
 *         MakeConsistencyCheck(MLstructure, &(self.Mother), NL_types)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *     #    print "dealloc is called"
 *         for i in range(self.Mother.NLayers):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":126
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isthisthelowestlayer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":127
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer             # <<<<<<<<<<<<<<
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 */
  __pyx_r = __pyx_v_self->islowestlayer;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":126
 *         free(self.Mother.MLREP)
 *         free(self.Mother.LR)
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isthisthelowestlayer (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_4isthisthelowestlayer(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_4isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 126; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":128
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  long __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_layercontentpointer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_5 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":129
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))             # <<<<<<<<<<<<<<
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 */
  __pyx_r = ((long)(&__pyx_v_self->Layercontent));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":128
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("layercontentpointer (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_6layercontentpointer(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_6layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":130
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static long __pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  long __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("motherpointer", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_motherpointer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_5 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":131
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))             # <<<<<<<<<<<<<<
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 */
  __pyx_r = ((long)(&__pyx_v_self->Mother));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":130
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef long motherpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.motherpointer", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("motherpointer (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_8motherpointer(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_8motherpointer(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("motherpointer", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 130; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.motherpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":132
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_d); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":133
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness             # <<<<<<<<<<<<<<
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 */
  __pyx_r = __pyx_v_self->Layercontent.Thickness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":132
 *     cpdef long motherpointer(self):
 *         return <long>(&(self.Mother))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.d", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("d (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_10d(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_10d(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_11Lowestlayer_d(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":134
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd(PyObject *__pyx_v_self, PyObject *__pyx_arg_d); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_d); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":135
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)             # <<<<<<<<<<<<<<
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":134
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd(PyObject *__pyx_v_self, PyObject *__pyx_arg_d); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd(PyObject *__pyx_v_self, PyObject *__pyx_arg_d) {
  double __pyx_v_d;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setd (wrapper)", 0);
  assert(__pyx_arg_d); {
    __pyx_v_d = __pyx_PyFloat_AsDouble(__pyx_arg_d); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_12setd(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((double)__pyx_v_d));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_12setd(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_setd(__pyx_v_self, __pyx_v_d, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":136
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_18Pythonreflectivity_11Lowestlayer_sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sigma); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":137
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness             # <<<<<<<<<<<<<<
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 */
  __pyx_r = __pyx_v_self->Layercontent.Roughness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":136
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sigma (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_14sigma(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_14sigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_11Lowestlayer_sigma(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 136; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":138
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma(PyObject *__pyx_v_self, PyObject *__pyx_arg_sigma); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setsigma); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_sigma); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":139
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)             # <<<<<<<<<<<<<<
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":138
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma(PyObject *__pyx_v_self, PyObject *__pyx_arg_sigma); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma(PyObject *__pyx_v_self, PyObject *__pyx_arg_sigma) {
  double __pyx_v_sigma;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setsigma (wrapper)", 0);
  assert(__pyx_arg_sigma); {
    __pyx_v_sigma = __pyx_PyFloat_AsDouble(__pyx_arg_sigma); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_16setsigma(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((double)__pyx_v_sigma));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_16setsigma(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, double __pyx_v_sigma) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma(__pyx_v_self, __pyx_v_sigma, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":140
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps(PyObject *__pyx_v_self, PyObject *__pyx_v_epsilon); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps(PyObject *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("seteps (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_18seteps(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((PyObject *)__pyx_v_epsilon));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_18seteps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("seteps", 0);

  /* "Pythonreflectivity.pyx":141
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):             # <<<<<<<<<<<<<<
 *             if(len(epsilon) in (1,3,4)):
 * 
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_epsilon, __pyx_n_s_len); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":142
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):             # <<<<<<<<<<<<<<
 * 
 *                 if(len(epsilon)==1):
 */
    __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = ((__pyx_t_3 == 1) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_t_3 == 3) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_t_3 == 4) != 0);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L5_bool_binop_done:;
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":144
 *             if(len(epsilon) in (1,3,4)):
 * 
 *                 if(len(epsilon)==1):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 */
      __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((__pyx_t_3 == 1) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":145
 * 
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 */
        __pyx_v_self->Layercontent.type = 1;

        /* "Pythonreflectivity.pyx":147
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":148
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":149
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":150
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":151
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 */
        __pyx_v_self->Layercontent.magdir = 0;
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":152
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((__pyx_t_3 == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":153
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 2;

        /* "Pythonreflectivity.pyx":154
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 154; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":155
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":156
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 156; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":157
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":158
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 */
        __pyx_v_self->Layercontent.magdir = 0;
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":159
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((__pyx_t_3 == 4) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":160
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 3;

        /* "Pythonreflectivity.pyx":161
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":162
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":163
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":164
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):             # <<<<<<<<<<<<<<
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_4, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":165
 *                     self.Layercontent.ez=epsilon[2]
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 */
          __pyx_v_self->Layercontent.magdir = 0;

          /* "Pythonreflectivity.pyx":166
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
          __pyx_v_self->Layercontent.type = 2;
          goto __pyx_L9;
        }

        /* "Pythonreflectivity.pyx":167
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *                     self.Layercontent.eg=epsilon[3]
 */
        __pyx_t_1 = ((__pyx_v_self->Layercontent.magdir == 0) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":168
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=epsilon[3]
 * 
 */
          __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_Raise(__pyx_t_6, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_L9:;

        /* "Pythonreflectivity.pyx":169
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *                     self.Layercontent.eg=epsilon[3]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_6 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_6); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_v_self->Layercontent.eg = __pyx_t_5;
        goto __pyx_L8;
      }
      __pyx_L8:;
      goto __pyx_L4;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":174
 * 
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":176
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 *         else:
 *             self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 */
    __pyx_v_self->Layercontent.type = 1;

    /* "Pythonreflectivity.pyx":177
 *         else:
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->Layercontent.ex = __pyx_t_5;

    /* "Pythonreflectivity.pyx":178
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->Layercontent.ey = __pyx_t_5;

    /* "Pythonreflectivity.pyx":179
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon             # <<<<<<<<<<<<<<
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 179; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->Layercontent.ez = __pyx_t_5;
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":140
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.seteps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":180
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_wl = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eps (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wl,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_int_neg_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_wl);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "eps") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_wl = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("eps", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_20eps(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), __pyx_v_wl);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_20eps(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_wl) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eps", 0);

  /* "Pythonreflectivity.pyx":183
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):             # <<<<<<<<<<<<<<
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 */
  switch (__pyx_v_self->Layercontent.type) {

    /* "Pythonreflectivity.pyx":181
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):             # <<<<<<<<<<<<<<
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 */
    case 1:

    /* "Pythonreflectivity.pyx":182
 *     def eps(self, wl=-1):
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;

    /* "Pythonreflectivity.pyx":183
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):             # <<<<<<<<<<<<<<
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 */
    case 2:

    /* "Pythonreflectivity.pyx":184
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])             # <<<<<<<<<<<<<<
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
    default:

    /* "Pythonreflectivity.pyx":186
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])             # <<<<<<<<<<<<<<
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.eg); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyList_SET_ITEM(__pyx_t_7, 2, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyList_SET_ITEM(__pyx_t_7, 3, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_3 = 0;
    __pyx_t_6 = 0;
    __pyx_t_5 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_2) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
  }

  /* "Pythonreflectivity.pyx":180
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self, wl=-1):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":187
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsxx); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":188
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 */
  __pyx_r = __pyx_v_self->Layercontent.ex;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":187
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsxx (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_22epsxx(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_22epsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":189
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsyy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":190
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey             # <<<<<<<<<<<<<<
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 */
  __pyx_r = __pyx_v_self->Layercontent.ey;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":189
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsyy (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_24epsyy(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_24epsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":191
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epszz); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":192
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez             # <<<<<<<<<<<<<<
 *     cpdef double complex eg(self):
 *         return self.Layercontent.eg
 */
  __pyx_r = __pyx_v_self->Layercontent.ez;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":191
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epszz (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_26epszz(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_26epszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_epszz(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":193
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_11Lowestlayer_eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eg", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_eg); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":194
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):
 *         return self.Layercontent.eg             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_self->Layercontent.eg;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":193
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex eg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Lowestlayer.eg", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eg (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_28eg(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_28eg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eg", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_11Lowestlayer_eg(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 193; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.eg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":199
 * 
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag(PyObject *__pyx_v_self, PyObject *__pyx_v_dir); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag(PyObject *__pyx_v_self, PyObject *__pyx_v_dir) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setmag (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_30setmag(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((PyObject *)__pyx_v_dir));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_30setmag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_dir) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setmag", 0);

  /* "Pythonreflectivity.pyx":200
 * 
 *     def setmag(self, dir):
 *         if(dir=='x'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_x, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 200; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":201
 *     def setmag(self, dir):
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1             # <<<<<<<<<<<<<<
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 */
    __pyx_v_self->Layercontent.magdir = 1;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":202
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_y, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":203
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2             # <<<<<<<<<<<<<<
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 */
    __pyx_v_self->Layercontent.magdir = 2;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":204
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_z, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":205
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3             # <<<<<<<<<<<<<<
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0
 */
    __pyx_v_self->Layercontent.magdir = 3;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":206
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *         else:
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_kp_s_0, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":207
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 */
    __pyx_v_self->Layercontent.magdir = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":209
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":199
 * 
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":210
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mag (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_32mag(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_32mag(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("mag", 0);

  /* "Pythonreflectivity.pyx":211
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):
 *         if(self.Layercontent.type==3):             # <<<<<<<<<<<<<<
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 */
  __pyx_t_1 = ((__pyx_v_self->Layercontent.type == 3) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":216
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the z direction"
 *             else:
 */
    switch (__pyx_v_self->Layercontent.magdir) {

      /* "Pythonreflectivity.pyx":212
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 */
      case 1:

      /* "Pythonreflectivity.pyx":213
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_x_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_x_direction;
      goto __pyx_L0;
      break;

      /* "Pythonreflectivity.pyx":214
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 */
      case 2:

      /* "Pythonreflectivity.pyx":215
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_y_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_y_direction;
      goto __pyx_L0;
      break;

      /* "Pythonreflectivity.pyx":216
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the z direction"
 *             else:
 */
      case 3:

      /* "Pythonreflectivity.pyx":217
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"             # <<<<<<<<<<<<<<
 *             else:
 *                 return "No magnetization has been set"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_z_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_z_direction;
      goto __pyx_L0;
      break;
      default:

      /* "Pythonreflectivity.pyx":219
 *                 return "Magnetized along the z direction"
 *             else:
 *                 return "No magnetization has been set"             # <<<<<<<<<<<<<<
 *         else:
 *             return "This layer is not magnetic"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_No_magnetization_has_been_set);
      __pyx_r = __pyx_kp_s_No_magnetization_has_been_set;
      goto __pyx_L0;
      break;
    }
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":221
 *                 return "No magnetization has been set"
 *         else:
 *             return "This layer is not magnetic"             # <<<<<<<<<<<<<<
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_s_This_layer_is_not_magnetic);
    __pyx_r = __pyx_kp_s_This_layer_is_not_magnetic;
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":210
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":222
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

static int __pyx_f_18Pythonreflectivity_11Lowestlayer_GetType(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetType", 0);

  /* "Pythonreflectivity.pyx":223
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):
 *         return self.Layercontent.type             # <<<<<<<<<<<<<<
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 */
  __pyx_r = __pyx_v_self->Layercontent.type;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":222
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":224
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

static int __pyx_f_18Pythonreflectivity_11Lowestlayer_dir(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dir", 0);

  /* "Pythonreflectivity.pyx":225
 *         return self.Layercontent.type
 *     cdef int dir(self):
 *         return self.Layercontent.magdir             # <<<<<<<<<<<<<<
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 */
  __pyx_r = __pyx_v_self->Layercontent.magdir;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":224
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":226
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsxx (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_34setepsxx(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_34setepsxx(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsxx", 0);

  /* "Pythonreflectivity.pyx":227
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x             # <<<<<<<<<<<<<<
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.ex = __pyx_t_1;

  /* "Pythonreflectivity.pyx":226
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":228
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsyy (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_36setepsyy(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_36setepsyy(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsyy", 0);

  /* "Pythonreflectivity.pyx":229
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x             # <<<<<<<<<<<<<<
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.ey = __pyx_t_1;

  /* "Pythonreflectivity.pyx":228
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":230
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepszz (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_38setepszz(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_38setepszz(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepszz", 0);

  /* "Pythonreflectivity.pyx":231
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x             # <<<<<<<<<<<<<<
 *     def setepsg(self,  x):
 *         if(x==0):
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.ez = __pyx_t_1;

  /* "Pythonreflectivity.pyx":230
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":232
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsg (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_11Lowestlayer_40setepsg(((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_11Lowestlayer_40setepsg(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsg", 0);

  /* "Pythonreflectivity.pyx":233
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 *         if(x==0):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_x, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":234
 *     def setepsg(self,  x):
 *         if(x==0):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 */
    __pyx_v_self->Layercontent.magdir = 0;

    /* "Pythonreflectivity.pyx":235
 *         if(x==0):
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
    __pyx_v_self->Layercontent.type = 2;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":236
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x
 */
  __pyx_t_2 = ((__pyx_v_self->Layercontent.magdir == 0) != 0);
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":237
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=x
 * #    def __getstate__(self):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":238
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x             # <<<<<<<<<<<<<<
 * #    def __getstate__(self):
 * #        return list([self.Layercontent.Thickness, \
 */
  __pyx_t_3 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 238; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.eg = __pyx_t_3;

  /* "Pythonreflectivity.pyx":232
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Lowestlayer.setepsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":263
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma=0):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 */

/* Python wrapper */
static int __pyx_pw_18Pythonreflectivity_5Layer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_18Pythonreflectivity_5Layer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_d;
  double __pyx_v_sigma;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_d,&__pyx_n_s_sigma,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_d)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_sigma);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_d = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[1]) {
      __pyx_v_sigma = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {
      __pyx_v_sigma = ((double)0.0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 263; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer___cinit__(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), __pyx_v_d, __pyx_v_sigma);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_18Pythonreflectivity_5Layer___cinit__(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, double __pyx_v_sigma) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "Pythonreflectivity.pyx":264
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma=0):
 *         self.Layercontent.Thickness = d             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":265
 *     def __cinit__(self, double d, double sigma=0):
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma             # <<<<<<<<<<<<<<
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":266
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 */
  __pyx_v_self->Layercontent.type = 1;

  /* "Pythonreflectivity.pyx":267
 *         self.Layercontent.Roughness = sigma
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 */
  __pyx_v_self->Layercontent.magdir = 0;

  /* "Pythonreflectivity.pyx":268
 *         self.Layercontent.type=1
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 */
  __pyx_v_self->Layercontent.ex = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":269
 *         self.Layercontent.magdir = 0
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 */
  __pyx_v_self->Layercontent.ey = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":270
 *         self.Layercontent.ex=1
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 */
  __pyx_v_self->Layercontent.ez = __pyx_t_double_complex_from_parts(1, 0);

  /* "Pythonreflectivity.pyx":271
 *         self.Layercontent.ey=1
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):
 */
  __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":272
 *         self.Layercontent.ez=1
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0             # <<<<<<<<<<<<<<
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 */
  __pyx_v_self->islowestlayer = 0;

  /* "Pythonreflectivity.pyx":263
 *     cdef CLayer Layercontent
 *     cdef int islowestlayer
 *     def __cinit__(self, double d, double sigma=0):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness = d
 *         self.Layercontent.Roughness = sigma
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":273
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_isthisthelowestlayer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":274
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer             # <<<<<<<<<<<<<<
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 */
  __pyx_r = __pyx_v_self->islowestlayer;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":273
 *         self.Layercontent.eg=0
 *         self.islowestlayer=0
 *     cpdef int isthisthelowestlayer(self):             # <<<<<<<<<<<<<<
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("isthisthelowestlayer (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_2isthisthelowestlayer(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_2isthisthelowestlayer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("isthisthelowestlayer", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 273; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.isthisthelowestlayer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":275
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static long __pyx_f_18Pythonreflectivity_5Layer_layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  long __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  long __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_layercontentpointer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_5 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":276
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))             # <<<<<<<<<<<<<<
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 */
  __pyx_r = ((long)(&__pyx_v_self->Layercontent));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":275
 *     cpdef int isthisthelowestlayer(self):
 *         return self.islowestlayer
 *     cpdef long layercontentpointer(self):             # <<<<<<<<<<<<<<
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("layercontentpointer (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_4layercontentpointer(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_4layercontentpointer(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("layercontentpointer", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_f_18Pythonreflectivity_5Layer_layercontentpointer(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.layercontentpointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":277
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_7d(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_d); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_7d)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":278
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness             # <<<<<<<<<<<<<<
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 */
  __pyx_r = __pyx_v_self->Layercontent.Thickness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":277
 *     cpdef long layercontentpointer(self):
 *         return <long>(&(self.Layercontent))
 *     cpdef double d(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.d", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_7d(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_7d(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("d (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_6d(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_6d(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("d", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_5Layer_d(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":279
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_9setd(PyObject *__pyx_v_self, PyObject *__pyx_arg_d); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setd); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_9setd)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_d); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":280
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)             # <<<<<<<<<<<<<<
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 */
  __pyx_v_self->Layercontent.Thickness = __pyx_v_d;

  /* "Pythonreflectivity.pyx":279
 *     cpdef double d(self):
 *         return self.Layercontent.Thickness
 *     cpdef setd(self, double d):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_9setd(PyObject *__pyx_v_self, PyObject *__pyx_arg_d); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_9setd(PyObject *__pyx_v_self, PyObject *__pyx_arg_d) {
  double __pyx_v_d;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setd (wrapper)", 0);
  assert(__pyx_arg_d); {
    __pyx_v_d = __pyx_PyFloat_AsDouble(__pyx_arg_d); if (unlikely((__pyx_v_d == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_8setd(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((double)__pyx_v_d));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_8setd(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setd", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_setd(__pyx_v_self, __pyx_v_d, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":281
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_11sigma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static double __pyx_f_18Pythonreflectivity_5Layer_sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_sigma); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_11sigma)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":282
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness             # <<<<<<<<<<<<<<
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 */
  __pyx_r = __pyx_v_self->Layercontent.Roughness;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":281
 *     cpdef setd(self, double d):
 *         self.Layercontent.Thickness=float(d)
 *     cpdef double sigma(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_11sigma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_11sigma(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("sigma (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_10sigma(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_10sigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("sigma", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_5Layer_sigma(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 281; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":283
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_13setsigma(PyObject *__pyx_v_self, PyObject *__pyx_arg_sigma); /*proto*/
static PyObject *__pyx_f_18Pythonreflectivity_5Layer_setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setsigma); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_13setsigma)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyFloat_FromDouble(__pyx_v_sigma); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      if (!__pyx_t_5) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else {
        __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
        PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":284
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)             # <<<<<<<<<<<<<<
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 */
  __pyx_v_self->Layercontent.Roughness = __pyx_v_sigma;

  /* "Pythonreflectivity.pyx":283
 *     cpdef double sigma(self):
 *         return self.Layercontent.Roughness
 *     cpdef setsigma(self, double sigma):             # <<<<<<<<<<<<<<
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_13setsigma(PyObject *__pyx_v_self, PyObject *__pyx_arg_sigma); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_13setsigma(PyObject *__pyx_v_self, PyObject *__pyx_arg_sigma) {
  double __pyx_v_sigma;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setsigma (wrapper)", 0);
  assert(__pyx_arg_sigma); {
    __pyx_v_sigma = __pyx_PyFloat_AsDouble(__pyx_arg_sigma); if (unlikely((__pyx_v_sigma == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_12setsigma(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((double)__pyx_v_sigma));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_12setsigma(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, double __pyx_v_sigma) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setsigma", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_setsigma(__pyx_v_self, __pyx_v_sigma, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setsigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":285
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_15seteps(PyObject *__pyx_v_self, PyObject *__pyx_v_epsilon); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_15seteps(PyObject *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("seteps (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_14seteps(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((PyObject *)__pyx_v_epsilon));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_14seteps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("seteps", 0);

  /* "Pythonreflectivity.pyx":286
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):             # <<<<<<<<<<<<<<
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):
 */
  __pyx_t_1 = PyObject_HasAttr(__pyx_v_epsilon, __pyx_n_s_len); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":287
 *     def seteps(self, epsilon):
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):             # <<<<<<<<<<<<<<
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1
 */
    __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = ((__pyx_t_3 == 1) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_t_3 == 3) != 0);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_t_3 == 4) != 0);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L5_bool_binop_done:;
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":288
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 */
      __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((__pyx_t_3 == 1) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":289
 *             if(len(epsilon) in (1,3,4)):
 *                 if(len(epsilon)==1):
 *                     self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 */
        __pyx_v_self->Layercontent.type = 1;

        /* "Pythonreflectivity.pyx":291
 *                     self.Layercontent.type=1
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 291; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":292
 *                     #self.Layercontent.eps[0]=epsilon[0]
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":293
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":294
 *                     self.Layercontent.ey=epsilon[0]
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":295
 *                     self.Layercontent.ez=epsilon[0]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 */
        __pyx_v_self->Layercontent.magdir = 0;
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":296
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((__pyx_t_3 == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":297
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 2;

        /* "Pythonreflectivity.pyx":298
 *                 elif(len(epsilon)==3):
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 298; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":299
 *                     self.Layercontent.type=2
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":300
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":301
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0             # <<<<<<<<<<<<<<
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 */
        __pyx_v_self->Layercontent.eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":302
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 */
        __pyx_v_self->Layercontent.magdir = 0;
        goto __pyx_L8;
      }

      /* "Pythonreflectivity.pyx":303
 *                     self.Layercontent.eg=0
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):             # <<<<<<<<<<<<<<
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 */
      __pyx_t_3 = PyObject_Length(__pyx_v_epsilon); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_1 = ((__pyx_t_3 == 4) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":304
 *                     self.Layercontent.magdir=0
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 */
        __pyx_v_self->Layercontent.type = 3;

        /* "Pythonreflectivity.pyx":305
 *                 elif(len(epsilon)==4):
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 305; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ex = __pyx_t_5;

        /* "Pythonreflectivity.pyx":306
 *                     self.Layercontent.type=3
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 306; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ey = __pyx_t_5;

        /* "Pythonreflectivity.pyx":307
 *                     self.Layercontent.ex=epsilon[0]
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.ez = __pyx_t_5;

        /* "Pythonreflectivity.pyx":308
 *                     self.Layercontent.ey=epsilon[1]
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]             # <<<<<<<<<<<<<<
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_4); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 308; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_v_self->Layercontent.eg = __pyx_t_5;

        /* "Pythonreflectivity.pyx":309
 *                     self.Layercontent.ez=epsilon[2]
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):             # <<<<<<<<<<<<<<
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 */
        __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_epsilon, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = PyObject_RichCompare(__pyx_t_4, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":310
 *                     self.Layercontent.eg=epsilon[3]
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 */
          __pyx_v_self->Layercontent.magdir = 0;

          /* "Pythonreflectivity.pyx":311
 *                     if(epsilon[3]==0):
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
          __pyx_v_self->Layercontent.type = 2;
          goto __pyx_L9;
        }

        /* "Pythonreflectivity.pyx":312
 *                         self.Layercontent.magdir=0
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *             else:
 */
        __pyx_t_1 = ((__pyx_v_self->Layercontent.magdir == 0) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":313
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 */
          __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_Raise(__pyx_t_6, 0, 0, 0);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_L9:;
        goto __pyx_L8;
      }
      __pyx_L8:;
      goto __pyx_L4;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":315
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L4:;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":317
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 *         else:
 *             self.Layercontent.type=1             # <<<<<<<<<<<<<<
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 */
    __pyx_v_self->Layercontent.type = 1;

    /* "Pythonreflectivity.pyx":318
 *         else:
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->Layercontent.ex = __pyx_t_5;

    /* "Pythonreflectivity.pyx":319
 *             self.Layercontent.type=1
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon             # <<<<<<<<<<<<<<
 *             self.Layercontent.ez=epsilon
 *     def eps(self):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->Layercontent.ey = __pyx_t_5;

    /* "Pythonreflectivity.pyx":320
 *             self.Layercontent.ex=epsilon
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon             # <<<<<<<<<<<<<<
 *     def eps(self):
 *         if(self.Layercontent.type==1):
 */
    __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_epsilon); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_self->Layercontent.ez = __pyx_t_5;
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":285
 *     cpdef setsigma(self, double sigma):
 *         self.Layercontent.Roughness=float(sigma)
 *     def seteps(self, epsilon):             # <<<<<<<<<<<<<<
 *         if(hasattr(epsilon, "__len__")):
 *             if(len(epsilon) in (1,3,4)):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.seteps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":321
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_17eps(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_17eps(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eps (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_16eps(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_16eps(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eps", 0);

  /* "Pythonreflectivity.pyx":324
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):             # <<<<<<<<<<<<<<
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 */
  switch (__pyx_v_self->Layercontent.type) {

    /* "Pythonreflectivity.pyx":322
 *             self.Layercontent.ez=epsilon
 *     def eps(self):
 *         if(self.Layercontent.type==1):             # <<<<<<<<<<<<<<
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 */
    case 1:

    /* "Pythonreflectivity.pyx":323
 *     def eps(self):
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;

    /* "Pythonreflectivity.pyx":324
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):             # <<<<<<<<<<<<<<
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 */
    case 2:

    /* "Pythonreflectivity.pyx":325
 *             return self.Layercontent.ex
 *         elif(self.Layercontent.type==2):
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])             # <<<<<<<<<<<<<<
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyList_New(3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyList_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyList_SET_ITEM(__pyx_t_6, 1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_6, 2, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    if (!__pyx_t_5) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_4 = PyTuple_New(1+1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __Pyx_GIVEREF(__pyx_t_5); __pyx_t_5 = NULL;
      PyTuple_SET_ITEM(__pyx_t_4, 0+1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
    default:

    /* "Pythonreflectivity.pyx":327
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez ])
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])             # <<<<<<<<<<<<<<
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ex); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ey); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.ez); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_self->Layercontent.eg); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = PyList_New(4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    PyList_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyList_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyList_SET_ITEM(__pyx_t_7, 2, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyList_SET_ITEM(__pyx_t_7, 3, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __pyx_t_3 = 0;
    __pyx_t_6 = 0;
    __pyx_t_5 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    if (!__pyx_t_2) {
      __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else {
      __pyx_t_5 = PyTuple_New(1+1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
      PyTuple_SET_ITEM(__pyx_t_5, 0+1, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;
    break;
  }

  /* "Pythonreflectivity.pyx":321
 *             self.Layercontent.ey=epsilon
 *             self.Layercontent.ez=epsilon
 *     def eps(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==1):
 *             return self.Layercontent.ex
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.eps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":328
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_19epsxx(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsxx); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_19epsxx)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":329
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex             # <<<<<<<<<<<<<<
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 */
  __pyx_r = __pyx_v_self->Layercontent.ex;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":328
 *         else:
 *             return np.array([ self.Layercontent.ex, self.Layercontent.ey, self.Layercontent.ez , self.Layercontent.eg ])
 *     cpdef double complex epsxx(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_19epsxx(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_19epsxx(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsxx (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_18epsxx(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_18epsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsxx", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epsxx(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":330
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_21epsyy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsyy); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_21epsyy)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":331
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey             # <<<<<<<<<<<<<<
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 */
  __pyx_r = __pyx_v_self->Layercontent.ey;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":330
 *     cpdef double complex epsxx(self):
 *         return self.Layercontent.ex
 *     cpdef double complex epsyy(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_21epsyy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_21epsyy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsyy (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_20epsyy(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_20epsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsyy", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epsyy(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":332
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_23epszz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epszz); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_23epszz)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":333
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez             # <<<<<<<<<<<<<<
 *     cpdef double complex epsg(self):
 *         return self.Layercontent.eg
 */
  __pyx_r = __pyx_v_self->Layercontent.ez;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":332
 *     cpdef double complex epsyy(self):
 *         return self.Layercontent.ey
 *     cpdef double complex epszz(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_23epszz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_23epszz(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epszz (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_22epszz(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_22epszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epszz", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epszz(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":334
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_25epsg(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_5Layer_epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, int __pyx_skip_dispatch) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __pyx_t_double_complex __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsg", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_epsg); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_25epsg)) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
      if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      if (__pyx_t_4) {
        __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      } else {
        __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_5 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_t_2); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_5;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Pythonreflectivity.pyx":335
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):
 *         return self.Layercontent.eg             # <<<<<<<<<<<<<<
 * 
 *     def setmag(self, dir):
 */
  __pyx_r = __pyx_v_self->Layercontent.eg;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":334
 *     cpdef double complex epszz(self):
 *         return self.Layercontent.ez
 *     cpdef double complex epsg(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.eg
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.Layer.epsg", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_25epsg(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_25epsg(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("epsg (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_24epsg(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_24epsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("epsg", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_5Layer_epsg(__pyx_v_self, 1);
  __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 334; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.epsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":337
 *         return self.Layercontent.eg
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_27setmag(PyObject *__pyx_v_self, PyObject *__pyx_v_dir); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_27setmag(PyObject *__pyx_v_self, PyObject *__pyx_v_dir) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setmag (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_26setmag(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((PyObject *)__pyx_v_dir));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_26setmag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_dir) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setmag", 0);

  /* "Pythonreflectivity.pyx":338
 * 
 *     def setmag(self, dir):
 *         if(dir=='x'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_x, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":339
 *     def setmag(self, dir):
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1             # <<<<<<<<<<<<<<
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 */
    __pyx_v_self->Layercontent.magdir = 1;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":340
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_y, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":341
 *             self.Layercontent.magdir=1
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2             # <<<<<<<<<<<<<<
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 */
    __pyx_v_self->Layercontent.magdir = 2;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":342
 *         elif(dir=='y'):
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_n_s_z, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":343
 *             self.Layercontent.magdir=2
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3             # <<<<<<<<<<<<<<
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0
 */
    __pyx_v_self->Layercontent.magdir = 3;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":344
 *         elif(dir=='z'):
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *         else:
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_dir, __pyx_kp_s_0, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":345
 *             self.Layercontent.magdir=3
 *         elif(dir=='0'):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 */
    __pyx_v_self->Layercontent.magdir = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":347
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":337
 *         return self.Layercontent.eg
 * 
 *     def setmag(self, dir):             # <<<<<<<<<<<<<<
 *         if(dir=='x'):
 *             self.Layercontent.magdir=1
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":348
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_29mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_29mag(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("mag (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_28mag(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_28mag(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("mag", 0);

  /* "Pythonreflectivity.pyx":349
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):
 *         if(self.Layercontent.type==3):             # <<<<<<<<<<<<<<
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 */
  __pyx_t_1 = ((__pyx_v_self->Layercontent.type == 3) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":354
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the z direction"
 *             else:
 */
    switch (__pyx_v_self->Layercontent.magdir) {

      /* "Pythonreflectivity.pyx":350
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 */
      case 1:

      /* "Pythonreflectivity.pyx":351
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_x_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_x_direction;
      goto __pyx_L0;
      break;

      /* "Pythonreflectivity.pyx":352
 *             if(self.Layercontent.magdir==1):
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 */
      case 2:

      /* "Pythonreflectivity.pyx":353
 *                 return "Magnetized along the x direction"
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"             # <<<<<<<<<<<<<<
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_y_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_y_direction;
      goto __pyx_L0;
      break;

      /* "Pythonreflectivity.pyx":354
 *             elif(self.Layercontent.magdir==2):
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):             # <<<<<<<<<<<<<<
 *                 return "Magnetized along the z direction"
 *             else:
 */
      case 3:

      /* "Pythonreflectivity.pyx":355
 *                 return "Magnetized along the y direction"
 *             elif(self.Layercontent.magdir==3):
 *                 return "Magnetized along the z direction"             # <<<<<<<<<<<<<<
 *             else:
 *                 return "No magnetization has been set"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_Magnetized_along_the_z_direction);
      __pyx_r = __pyx_kp_s_Magnetized_along_the_z_direction;
      goto __pyx_L0;
      break;
      default:

      /* "Pythonreflectivity.pyx":357
 *                 return "Magnetized along the z direction"
 *             else:
 *                 return "No magnetization has been set"             # <<<<<<<<<<<<<<
 *         else:
 *             return "This layer is not magnetic"
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_kp_s_No_magnetization_has_been_set);
      __pyx_r = __pyx_kp_s_No_magnetization_has_been_set;
      goto __pyx_L0;
      break;
    }
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":359
 *                 return "No magnetization has been set"
 *         else:
 *             return "This layer is not magnetic"             # <<<<<<<<<<<<<<
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_kp_s_This_layer_is_not_magnetic);
    __pyx_r = __pyx_kp_s_This_layer_is_not_magnetic;
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":348
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")
 *     def mag(self):             # <<<<<<<<<<<<<<
 *         if(self.Layercontent.type==3):
 *             if(self.Layercontent.magdir==1):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":360
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

static int __pyx_f_18Pythonreflectivity_5Layer_GetType(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("GetType", 0);

  /* "Pythonreflectivity.pyx":361
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):
 *         return self.Layercontent.type             # <<<<<<<<<<<<<<
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 */
  __pyx_r = __pyx_v_self->Layercontent.type;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":360
 *         else:
 *             return "This layer is not magnetic"
 *     cdef int GetType(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.type
 *     cdef int dir(self):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":362
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

static int __pyx_f_18Pythonreflectivity_5Layer_dir(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("dir", 0);

  /* "Pythonreflectivity.pyx":363
 *         return self.Layercontent.type
 *     cdef int dir(self):
 *         return self.Layercontent.magdir             # <<<<<<<<<<<<<<
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 */
  __pyx_r = __pyx_v_self->Layercontent.magdir;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":362
 *     cdef int GetType(self):
 *         return self.Layercontent.type
 *     cdef int dir(self):             # <<<<<<<<<<<<<<
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":364
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsxx (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_30setepsxx(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_30setepsxx(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsxx", 0);

  /* "Pythonreflectivity.pyx":365
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x             # <<<<<<<<<<<<<<
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.ex = __pyx_t_1;

  /* "Pythonreflectivity.pyx":364
 *     cdef int dir(self):
 *         return self.Layercontent.magdir
 *     def setepsxx(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsxx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":366
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsyy (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_32setepsyy(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_32setepsyy(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsyy", 0);

  /* "Pythonreflectivity.pyx":367
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x             # <<<<<<<<<<<<<<
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.ey = __pyx_t_1;

  /* "Pythonreflectivity.pyx":366
 *     def setepsxx(self, x):
 *         self.Layercontent.ex=x
 *     def setepsyy(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsyy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":368
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_35setepszz(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_35setepszz(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepszz (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_34setepszz(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_34setepszz(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepszz", 0);

  /* "Pythonreflectivity.pyx":369
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x             # <<<<<<<<<<<<<<
 *     def setepsg(self,  x):
 *         if(x==0):
 */
  __pyx_t_1 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.ez = __pyx_t_1;

  /* "Pythonreflectivity.pyx":368
 *     def setepsyy(self, x):
 *         self.Layercontent.ey=x
 *     def setepszz(self, x):             # <<<<<<<<<<<<<<
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepszz", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":370
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_37setepsg(PyObject *__pyx_v_self, PyObject *__pyx_v_x); /*proto*/
static PyObject *__pyx_pw_18Pythonreflectivity_5Layer_37setepsg(PyObject *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setepsg (wrapper)", 0);
  __pyx_r = __pyx_pf_18Pythonreflectivity_5Layer_36setepsg(((struct __pyx_obj_18Pythonreflectivity_Layer *)__pyx_v_self), ((PyObject *)__pyx_v_x));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_5Layer_36setepsg(struct __pyx_obj_18Pythonreflectivity_Layer *__pyx_v_self, PyObject *__pyx_v_x) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setepsg", 0);

  /* "Pythonreflectivity.pyx":371
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):
 *         if(x==0):             # <<<<<<<<<<<<<<
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_x, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 371; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":372
 *     def setepsg(self,  x):
 *         if(x==0):
 *             self.Layercontent.magdir=0             # <<<<<<<<<<<<<<
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 */
    __pyx_v_self->Layercontent.magdir = 0;

    /* "Pythonreflectivity.pyx":373
 *         if(x==0):
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2             # <<<<<<<<<<<<<<
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 */
    __pyx_v_self->Layercontent.type = 2;
    goto __pyx_L3;
  }

  /* "Pythonreflectivity.pyx":374
 *             self.Layercontent.magdir=0
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):             # <<<<<<<<<<<<<<
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x
 */
  __pyx_t_2 = ((__pyx_v_self->Layercontent.magdir == 0) != 0);
  if (__pyx_t_2) {

    /* "Pythonreflectivity.pyx":375
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=x
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":376
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *         self.Layercontent.eg=x             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyComplex_As___pyx_t_double_complex(__pyx_v_x); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->Layercontent.eg = __pyx_t_3;

  /* "Pythonreflectivity.pyx":370
 *     def setepszz(self, x):
 *         self.Layercontent.ez=x
 *     def setepsg(self,  x):             # <<<<<<<<<<<<<<
 *         if(x==0):
 *             self.Layercontent.magdir=0
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("Pythonreflectivity.Layer.setepsg", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":386
 * 
 * 
 * cdef inline double complex cquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double quadr(double x):
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cquadr(__pyx_t_double_complex __pyx_v_x) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cquadr", 0);

  /* "Pythonreflectivity.pyx":387
 * 
 * cdef inline double complex cquadr(double complex x):
 *     return x*x             # <<<<<<<<<<<<<<
 * cdef inline double quadr(double x):
 *     return x*x
 */
  __pyx_r = __Pyx_c_prod(__pyx_v_x, __pyx_v_x);
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":386
 * 
 * 
 * cdef inline double complex cquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double quadr(double x):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":388
 * cdef inline double complex cquadr(double complex x):
 *     return x*x
 * cdef inline double quadr(double x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double cabsquadr(double complex x):
 */

static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_quadr(double __pyx_v_x) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("quadr", 0);

  /* "Pythonreflectivity.pyx":389
 *     return x*x
 * cdef inline double quadr(double x):
 *     return x*x             # <<<<<<<<<<<<<<
 * cdef inline double cabsquadr(double complex x):
 *     return quadr(x.real)+quadr(x.imag)
 */
  __pyx_r = (__pyx_v_x * __pyx_v_x);
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":388
 * cdef inline double complex cquadr(double complex x):
 *     return x*x
 * cdef inline double quadr(double x):             # <<<<<<<<<<<<<<
 *     return x*x
 * cdef inline double cabsquadr(double complex x):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":390
 * cdef inline double quadr(double x):
 *     return x*x
 * cdef inline double cabsquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return quadr(x.real)+quadr(x.imag)
 * 
 */

static CYTHON_INLINE double __pyx_f_18Pythonreflectivity_cabsquadr(__pyx_t_double_complex __pyx_v_x) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cabsquadr", 0);

  /* "Pythonreflectivity.pyx":391
 *     return x*x
 * cdef inline double cabsquadr(double complex x):
 *     return quadr(x.real)+quadr(x.imag)             # <<<<<<<<<<<<<<
 * 
 * cdef double complex cconj(double complex x):
 */
  __pyx_r = (__pyx_f_18Pythonreflectivity_quadr(__Pyx_CREAL(__pyx_v_x)) + __pyx_f_18Pythonreflectivity_quadr(__Pyx_CIMAG(__pyx_v_x)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":390
 * cdef inline double quadr(double x):
 *     return x*x
 * cdef inline double cabsquadr(double complex x):             # <<<<<<<<<<<<<<
 *     return quadr(x.real)+quadr(x.imag)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":393
 *     return quadr(x.real)+quadr(x.imag)
 * 
 * cdef double complex cconj(double complex x):             # <<<<<<<<<<<<<<
 *     return x.real -1j*x.imag
 * 
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_cconj(__pyx_t_double_complex __pyx_v_x) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cconj", 0);

  /* "Pythonreflectivity.pyx":394
 * 
 * cdef double complex cconj(double complex x):
 *     return x.real -1j*x.imag             # <<<<<<<<<<<<<<
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):
 */
  __pyx_r = __Pyx_c_diff(__pyx_t_double_complex_from_parts(__Pyx_CREAL(__pyx_v_x), 0), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__Pyx_CIMAG(__pyx_v_x), 0)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":393
 *     return quadr(x.real)+quadr(x.imag)
 * 
 * cdef double complex cconj(double complex x):             # <<<<<<<<<<<<<<
 *     return x.real -1j*x.imag
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":396
 *     return x.real -1j*x.imag
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):             # <<<<<<<<<<<<<<
 *     return sqrt(ex-vyvy)
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZsigma(double __pyx_v_vyvy, __pyx_t_double_complex __pyx_v_ex) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("CalculateVZsigma", 0);

  /* "Pythonreflectivity.pyx":397
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):
 *     return sqrt(ex-vyvy)             # <<<<<<<<<<<<<<
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):
 */
  __pyx_r = sqrt(__Pyx_c_diff(__pyx_v_ex, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":396
 *     return x.real -1j*x.imag
 * 
 * cdef inline double complex CalculateVZsigma(double vyvy, double complex ex):             # <<<<<<<<<<<<<<
 *     return sqrt(ex-vyvy)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":399
 *     return sqrt(ex-vyvy)
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi(double __pyx_v_vyvy, __pyx_t_double_complex __pyx_v_ey, __pyx_t_double_complex __pyx_v_ez) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CalculateVZpi", 0);

  /* "Pythonreflectivity.pyx":400
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):
 *     return sqrt((1.-vyvy/ez)*ey)             # <<<<<<<<<<<<<<
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_ez))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = sqrt(__Pyx_c_prod(__Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot(__pyx_t_1, __pyx_v_ez)), __pyx_v_ey));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":399
 *     return sqrt(ex-vyvy)
 * 
 * cdef inline double complex CalculateVZpi(double vyvy, double complex ey, double complex ez):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.CalculateVZpi", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":402
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey+eg*eg/ez)
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_CalculateVZpi_m(double __pyx_v_vyvy, __pyx_t_double_complex __pyx_v_ey, __pyx_t_double_complex __pyx_v_ez, __pyx_t_double_complex __pyx_v_eg) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("CalculateVZpi_m", 0);

  /* "Pythonreflectivity.pyx":403
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):
 *     return sqrt((1.-vyvy/ez)*ey+eg*eg/ez)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_ez))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __Pyx_c_prod(__pyx_v_eg, __pyx_v_eg);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_ez))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = sqrt(__Pyx_c_sum(__Pyx_c_prod(__Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot(__pyx_t_1, __pyx_v_ez)), __pyx_v_ey), __Pyx_c_quot(__pyx_t_2, __pyx_v_ez)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":402
 *     return sqrt((1.-vyvy/ez)*ey)
 * 
 * cdef inline double complex CalculateVZpi_m(double vyvy, double complex ey, double complex ez, double complex eg):             # <<<<<<<<<<<<<<
 *     return sqrt((1.-vyvy/ez)*ey+eg*eg/ez)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.CalculateVZpi_m", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":406
 * 
 * 
 * cdef void Calculate_Multilayer(double complex *t_comp1_up, double complex *t_comp2_up, double complex *t_comp1_do, double complex *t_comp2_do, double complex *r_ML_in1, double complex *r_ML_in2, double complex *r_ML_ba1, double complex *r_ML_ba2, int N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex rres1, rres2, tres_up, tres_do, MLfac
 */

static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer(__pyx_t_double_complex *__pyx_v_t_comp1_up, __pyx_t_double_complex *__pyx_v_t_comp2_up, __pyx_t_double_complex *__pyx_v_t_comp1_do, __pyx_t_double_complex *__pyx_v_t_comp2_do, __pyx_t_double_complex *__pyx_v_r_ML_in1, __pyx_t_double_complex *__pyx_v_r_ML_in2, __pyx_t_double_complex *__pyx_v_r_ML_ba1, __pyx_t_double_complex *__pyx_v_r_ML_ba2, int __pyx_v_N) {
  __pyx_t_double_complex __pyx_v_rres1;
  __pyx_t_double_complex __pyx_v_rres2;
  __pyx_t_double_complex __pyx_v_tres_up;
  __pyx_t_double_complex __pyx_v_tres_do;
  __pyx_t_double_complex __pyx_v_MLfac;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  __pyx_t_double_complex __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Calculate_Multilayer", 0);

  /* "Pythonreflectivity.pyx":410
 *     cdef double complex rres1, rres2, tres_up, tres_do, MLfac
 * 
 *     rres1=r_ML_in1[0]             # <<<<<<<<<<<<<<
 *     rres2=r_ML_ba1[0]
 *     tres_up=t_comp1_up[0]
 */
  __pyx_v_rres1 = (__pyx_v_r_ML_in1[0]);

  /* "Pythonreflectivity.pyx":411
 * 
 *     rres1=r_ML_in1[0]
 *     rres2=r_ML_ba1[0]             # <<<<<<<<<<<<<<
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]
 */
  __pyx_v_rres2 = (__pyx_v_r_ML_ba1[0]);

  /* "Pythonreflectivity.pyx":412
 *     rres1=r_ML_in1[0]
 *     rres2=r_ML_ba1[0]
 *     tres_up=t_comp1_up[0]             # <<<<<<<<<<<<<<
 *     tres_do=t_comp1_do[0]
 *     if(N==0):
 */
  __pyx_v_tres_up = (__pyx_v_t_comp1_up[0]);

  /* "Pythonreflectivity.pyx":413
 *     rres2=r_ML_ba1[0]
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]             # <<<<<<<<<<<<<<
 *     if(N==0):
 *         t_comp2_up[0]=1
 */
  __pyx_v_tres_do = (__pyx_v_t_comp1_do[0]);

  /* "Pythonreflectivity.pyx":414
 *     tres_up=t_comp1_up[0]
 *     tres_do=t_comp1_do[0]
 *     if(N==0):             # <<<<<<<<<<<<<<
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1
 */
  __pyx_t_1 = ((__pyx_v_N == 0) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":415
 *     tres_do=t_comp1_do[0]
 *     if(N==0):
 *         t_comp2_up[0]=1             # <<<<<<<<<<<<<<
 *         t_comp2_do[0]=1
 *         r_ML_in2[0]=0
 */
    (__pyx_v_t_comp2_up[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":416
 *     if(N==0):
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1             # <<<<<<<<<<<<<<
 *         r_ML_in2[0]=0
 *         r_ML_ba2[0]=0
 */
    (__pyx_v_t_comp2_do[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":417
 *         t_comp2_up[0]=1
 *         t_comp2_do[0]=1
 *         r_ML_in2[0]=0             # <<<<<<<<<<<<<<
 *         r_ML_ba2[0]=0
 *         return
 */
    (__pyx_v_r_ML_in2[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":418
 *         t_comp2_do[0]=1
 *         r_ML_in2[0]=0
 *         r_ML_ba2[0]=0             # <<<<<<<<<<<<<<
 *         return
 *     N=N-1
 */
    (__pyx_v_r_ML_ba2[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":419
 *         r_ML_in2[0]=0
 *         r_ML_ba2[0]=0
 *         return             # <<<<<<<<<<<<<<
 *     N=N-1
 * 
 */
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":420
 *         r_ML_ba2[0]=0
 *         return
 *     N=N-1             # <<<<<<<<<<<<<<
 * 
 *     while(N):
 */
  __pyx_v_N = (__pyx_v_N - 1);

  /* "Pythonreflectivity.pyx":422
 *     N=N-1
 * 
 *     while(N):             # <<<<<<<<<<<<<<
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_N != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":423
 * 
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure             # <<<<<<<<<<<<<<
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 */
    __pyx_t_1 = (__Pyx_mod_long(__pyx_v_N, 2) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":424
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])             # <<<<<<<<<<<<<<
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 */
      __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
      __pyx_t_3 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__pyx_v_rres1, (__pyx_v_r_ML_ba1[0])));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_3))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_MLfac = __Pyx_c_quot(__pyx_t_2, __pyx_t_3);

      /* "Pythonreflectivity.pyx":425
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac             # <<<<<<<<<<<<<<
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 * 
 */
      __pyx_v_rres1 = __Pyx_c_sum((__pyx_v_r_ML_in1[0]), __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod((__pyx_v_t_comp1_up[0]), (__pyx_v_t_comp1_do[0])), __pyx_v_rres1), __pyx_v_MLfac));

      /* "Pythonreflectivity.pyx":426
 *             MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac             # <<<<<<<<<<<<<<
 * 
 *             tres_up=t_comp1_up[0]*tres_up*MLfac
 */
      __pyx_v_rres2 = __Pyx_c_sum(__pyx_v_rres2, __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_tres_up, __pyx_v_tres_do), (__pyx_v_r_ML_ba1[0])), __pyx_v_MLfac));

      /* "Pythonreflectivity.pyx":428
 *             rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 * 
 *             tres_up=t_comp1_up[0]*tres_up*MLfac             # <<<<<<<<<<<<<<
 *             tres_do=t_comp1_do[0]*tres_do*MLfac
 * 
 */
      __pyx_v_tres_up = __Pyx_c_prod(__Pyx_c_prod((__pyx_v_t_comp1_up[0]), __pyx_v_tres_up), __pyx_v_MLfac);

      /* "Pythonreflectivity.pyx":429
 * 
 *             tres_up=t_comp1_up[0]*tres_up*MLfac
 *             tres_do=t_comp1_do[0]*tres_do*MLfac             # <<<<<<<<<<<<<<
 * 
 *         N=N/2
 */
      __pyx_v_tres_do = __Pyx_c_prod(__Pyx_c_prod((__pyx_v_t_comp1_do[0]), __pyx_v_tres_do), __pyx_v_MLfac);
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "Pythonreflectivity.pyx":431
 *             tres_do=t_comp1_do[0]*tres_do*MLfac
 * 
 *         N=N/2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_N = __Pyx_div_long(__pyx_v_N, 2);

    /* "Pythonreflectivity.pyx":435
 * 
 *         #Doubling the heterostructure:
 *         MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])             # <<<<<<<<<<<<<<
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 */
    __pyx_t_3 = __pyx_t_double_complex_from_parts(1.0, 0);
    __pyx_t_2 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod((__pyx_v_r_ML_in1[0]), (__pyx_v_r_ML_ba1[0])));
    if (unlikely(__Pyx_c_is_zero(__pyx_t_2))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_MLfac = __Pyx_c_quot(__pyx_t_3, __pyx_t_2);

    /* "Pythonreflectivity.pyx":436
 *         #Doubling the heterostructure:
 *         MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac             # <<<<<<<<<<<<<<
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 */
    (__pyx_v_r_ML_in1[0]) = __Pyx_c_sum((__pyx_v_r_ML_in1[0]), __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod((__pyx_v_t_comp1_up[0]), (__pyx_v_t_comp1_do[0])), (__pyx_v_r_ML_in1[0])), __pyx_v_MLfac));

    /* "Pythonreflectivity.pyx":437
 *         MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac             # <<<<<<<<<<<<<<
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 */
    (__pyx_v_r_ML_ba1[0]) = __Pyx_c_sum((__pyx_v_r_ML_ba1[0]), __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod((__pyx_v_t_comp1_up[0]), (__pyx_v_t_comp1_do[0])), (__pyx_v_r_ML_ba1[0])), __pyx_v_MLfac));

    /* "Pythonreflectivity.pyx":438
 *         r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac             # <<<<<<<<<<<<<<
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 */
    (__pyx_v_t_comp1_up[0]) = __Pyx_c_prod(__pyx_f_18Pythonreflectivity_cquadr((__pyx_v_t_comp1_up[0])), __pyx_v_MLfac);

    /* "Pythonreflectivity.pyx":439
 *         r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 *         t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac             # <<<<<<<<<<<<<<
 * 
 *     t_comp2_up[0]=tres_up
 */
    (__pyx_v_t_comp1_do[0]) = __Pyx_c_prod(__pyx_f_18Pythonreflectivity_cquadr((__pyx_v_t_comp1_do[0])), __pyx_v_MLfac);
  }

  /* "Pythonreflectivity.pyx":441
 *         t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 *     t_comp2_up[0]=tres_up             # <<<<<<<<<<<<<<
 *     t_comp2_do[0]=tres_do
 *     r_ML_in2[0]=rres1
 */
  (__pyx_v_t_comp2_up[0]) = __pyx_v_tres_up;

  /* "Pythonreflectivity.pyx":442
 * 
 *     t_comp2_up[0]=tres_up
 *     t_comp2_do[0]=tres_do             # <<<<<<<<<<<<<<
 *     r_ML_in2[0]=rres1
 *     r_ML_ba2[0]=rres2
 */
  (__pyx_v_t_comp2_do[0]) = __pyx_v_tres_do;

  /* "Pythonreflectivity.pyx":443
 *     t_comp2_up[0]=tres_up
 *     t_comp2_do[0]=tres_do
 *     r_ML_in2[0]=rres1             # <<<<<<<<<<<<<<
 *     r_ML_ba2[0]=rres2
 * 
 */
  (__pyx_v_r_ML_in2[0]) = __pyx_v_rres1;

  /* "Pythonreflectivity.pyx":444
 *     t_comp2_do[0]=tres_do
 *     r_ML_in2[0]=rres1
 *     r_ML_ba2[0]=rres2             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (__pyx_v_r_ML_ba2[0]) = __pyx_v_rres2;

  /* "Pythonreflectivity.pyx":406
 * 
 * 
 * cdef void Calculate_Multilayer(double complex *t_comp1_up, double complex *t_comp2_up, double complex *t_comp1_do, double complex *t_comp2_do, double complex *r_ML_in1, double complex *r_ML_in2, double complex *r_ML_ba1, double complex *r_ML_ba2, int N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex rres1, rres2, tres_up, tres_do, MLfac
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.Calculate_Multilayer", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":448
 * 
 * 
 * cdef double complex ipow(double complex base, int exp):             # <<<<<<<<<<<<<<
 *     cdef double complex result = 1.
 *     while (exp):
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_ipow(__pyx_t_double_complex __pyx_v_base, int __pyx_v_exp) {
  __pyx_t_double_complex __pyx_v_result;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("ipow", 0);

  /* "Pythonreflectivity.pyx":449
 * 
 * cdef double complex ipow(double complex base, int exp):
 *     cdef double complex result = 1.             # <<<<<<<<<<<<<<
 *     while (exp):
 *         if (exp%2): #If exp is Uneven
 */
  __pyx_v_result = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":450
 * cdef double complex ipow(double complex base, int exp):
 *     cdef double complex result = 1.
 *     while (exp):             # <<<<<<<<<<<<<<
 *         if (exp%2): #If exp is Uneven
 *             result *= base
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_exp != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":451
 *     cdef double complex result = 1.
 *     while (exp):
 *         if (exp%2): #If exp is Uneven             # <<<<<<<<<<<<<<
 *             result *= base
 *         exp=exp/2 #exp halbieren
 */
    __pyx_t_1 = (__Pyx_mod_long(__pyx_v_exp, 2) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":452
 *     while (exp):
 *         if (exp%2): #If exp is Uneven
 *             result *= base             # <<<<<<<<<<<<<<
 *         exp=exp/2 #exp halbieren
 *         base=base*base
 */
      __pyx_v_result = __Pyx_c_prod(__pyx_v_result, __pyx_v_base);
      goto __pyx_L5;
    }
    __pyx_L5:;

    /* "Pythonreflectivity.pyx":453
 *         if (exp%2): #If exp is Uneven
 *             result *= base
 *         exp=exp/2 #exp halbieren             # <<<<<<<<<<<<<<
 *         base=base*base
 *     return result
 */
    __pyx_v_exp = __Pyx_div_long(__pyx_v_exp, 2);

    /* "Pythonreflectivity.pyx":454
 *             result *= base
 *         exp=exp/2 #exp halbieren
 *         base=base*base             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_v_base = __Pyx_c_prod(__pyx_v_base, __pyx_v_base);
  }

  /* "Pythonreflectivity.pyx":455
 *         exp=exp/2 #exp halbieren
 *         base=base*base
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":448
 * 
 * 
 * cdef double complex ipow(double complex base, int exp):             # <<<<<<<<<<<<<<
 *     cdef double complex result = 1.
 *     while (exp):
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":459
 * 
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_r_ML_1;
  __pyx_t_double_complex __pyx_v_r_ML_2;
  __pyx_t_double_complex __pyx_v_ptot;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_v_rough;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Sigma", 0);

  /* "Pythonreflectivity.pyx":460
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th > 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":461
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":464
 * 
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":465
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":466
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th)));

  /* "Pythonreflectivity.pyx":469
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":470
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":471
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":472
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 * 
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":473
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":479
 *     cdef int i,j
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":488
 *     cdef int Lower, Upper
 *     cdef double complex rough, groundrough
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_roughfak = (-2. * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0));

  /* "Pythonreflectivity.pyx":492
 * 
 * 
 *     vzlower=CalculateVZsigma(vyvy, LR[ MLCOMP[0][0] ].ex )             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex);

  /* "Pythonreflectivity.pyx":498
 *   #  print NLAYERS
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":499
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZsigma(vyvy,   LR[ MLCOMP[1][0] ].ex  )
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":501
 *         vzupper=sintheta
 *     else:
 *         vzupper=CalculateVZsigma(vyvy,   LR[ MLCOMP[1][0] ].ex  )             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex);
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":504
 * 
 * 
 *     rough=exp(vzlower*vzupper*quadr(   LR[ MLCOMP[0][0] ].Roughness )*roughfak)             # <<<<<<<<<<<<<<
 *   #  print "all:", MLCOMP[0][0], MLCOMP[1][0], LR[ MLCOMP[0][0] ].ex, LR[ MLCOMP[1][0] ].ex, vzupper, vzlower
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
  __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

  /* "Pythonreflectivity.pyx":506
 *     rough=exp(vzlower*vzupper*quadr(   LR[ MLCOMP[0][0] ].Roughness )*roughfak)
 *   #  print "all:", MLCOMP[0][0], MLCOMP[1][0], LR[ MLCOMP[0][0] ].ex, LR[ MLCOMP[1][0] ].ex, vzupper, vzlower
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 *   #  print rtot
 *     i=1
 */
  __pyx_t_7 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
  __pyx_t_8 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_rtot = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);

  /* "Pythonreflectivity.pyx":508
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *   #  print rtot
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":509
 *   #  print rtot
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":511
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":512
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":513
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":514
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 *             else:
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":515
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )             # <<<<<<<<<<<<<<
 *             else:
 *                 vzupper=sintheta
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":517
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex  )
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][0]
 * 
 */
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":518
 *             else:
 *                 vzupper=sintheta
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 * 
 *             rough=exp(roughfak*vzlower*vzupper*quadr(   LR[ Lower ].Roughness  ))
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":520
 *             Lower=MLCOMP[i][0]
 * 
 *             rough=exp(roughfak*vzlower*vzupper*quadr(   LR[ Lower ].Roughness  ))             # <<<<<<<<<<<<<<
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

      /* "Pythonreflectivity.pyx":522
 *             rough=exp(roughfak*vzlower*vzupper*quadr(   LR[ Lower ].Roughness  ))
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 *             pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
      __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":524
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 *             pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *           #  print pquad, rprime
 *            # No Multiple scattering:
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":527
 *           #  print pquad, rprime
 *            # No Multiple scattering:
 *             rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      goto __pyx_L7;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":531
 *         else:
 * 
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))             # <<<<<<<<<<<<<<
 * 
 *             vzlower=vzupper
 */
      __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

      /* "Pythonreflectivity.pyx":533
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZsigma(vyvy, LR[ MLCOMP[i][1] ].ex)
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":534
 * 
 *             vzlower=vzupper
 *             vzupper=CalculateVZsigma(vyvy, LR[ MLCOMP[i][1] ].ex)             # <<<<<<<<<<<<<<
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 */
      __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ex);

      /* "Pythonreflectivity.pyx":535
 *             vzlower=vzupper
 *             vzupper=CalculateVZsigma(vyvy, LR[ MLCOMP[i][1] ].ex)
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_7 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_8 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 535; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":538
 * 
 * 
 *             r_ML_1=rprime             # <<<<<<<<<<<<<<
 *            # print "2"
 * 
 */
      __pyx_v_r_ML_1 = __pyx_v_rprime;

      /* "Pythonreflectivity.pyx":541
 *            # print "2"
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             p=1.
 * 
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":542
 * 
 *             j=1
 *             p=1.             # <<<<<<<<<<<<<<
 * 
 *            # print MLLENGTH[i]
 */
      __pyx_v_p = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":545
 * 
 *            # print MLLENGTH[i]
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *               #  print "3 ", j
 *                 vzlower=vzupper
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":547
 *             while j<MLLENGTH[i]:
 *               #  print "3 ", j
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 p*=pquad
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":548
 *               #  print "3 ", j
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 p*=pquad
 *              #   print pquad, p
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":549
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 p*=pquad             # <<<<<<<<<<<<<<
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):
 */
        __pyx_v_p = __Pyx_c_prod(__pyx_v_p, __pyx_v_pquad);

        /* "Pythonreflectivity.pyx":551
 *                 p*=pquad
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][0]
 *                 else:
 */
        __pyx_t_1 = ((__pyx_v_j == ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":552
 *              #   print pquad, p
 *                 if(j==(MLLENGTH[i]-1)):
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
          goto __pyx_L11;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":554
 *                     Upper=MLCOMP[i][0]
 *                 else:
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 * 
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":555
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )             # <<<<<<<<<<<<<<
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);

        /* "Pythonreflectivity.pyx":557
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))             # <<<<<<<<<<<<<<
 * 
 *                 rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":559
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))
 * 
 *                 rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_1=rprime+r_ML_1*pquad
 */
        __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":561
 *                 rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 *                 r_ML_1=rprime+r_ML_1*pquad             # <<<<<<<<<<<<<<
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 */
        __pyx_v_r_ML_1 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_r_ML_1, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":564
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 *                 j+=1             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":565
 *              #   print "new rml", r_ML_1
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             p*=pquad
 *           #  print pquad, p
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":566
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad             # <<<<<<<<<<<<<<
 *           #  print pquad, p
 *           #  print "6 "
 */
      __pyx_v_p = __Pyx_c_prod(__pyx_v_p, __pyx_v_pquad);

      /* "Pythonreflectivity.pyx":570
 *           #  print "6 "
 * 
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
      __pyx_t_1 = (((__pyx_v_MLREP[__pyx_v_i]) <= 1) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":571
 * 
 *             if(MLREP[i]<=1):
 *                 ptot=1             # <<<<<<<<<<<<<<
 *                 r_ML_2=0
 *             else:
 */
        __pyx_v_ptot = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":572
 *             if(MLREP[i]<=1):
 *                 ptot=1
 *                 r_ML_2=0             # <<<<<<<<<<<<<<
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 */
        __pyx_v_r_ML_2 = __pyx_t_double_complex_from_parts(0, 0);
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":574
 *                 r_ML_2=0
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 */
        __pyx_v_ptot = __pyx_f_18Pythonreflectivity_ipow(__pyx_v_p, ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":575
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)             # <<<<<<<<<<<<<<
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_r_ML_1, __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_ptot));
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_p);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_r_ML_2 = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":577
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot             # <<<<<<<<<<<<<<
 * 
 *             j=0
 */
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r_ML_2, __Pyx_c_prod(__pyx_v_ptot, __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":579
 *             rtot=r_ML_2+ptot*rtot
 * 
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":580
 * 
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":581
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":582
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":583
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":584
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);

        /* "Pythonreflectivity.pyx":585
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":586
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":587
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1
 */
        __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":588
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":589
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":591
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":592
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":593
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":596
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":597
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":599
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);

        /* "Pythonreflectivity.pyx":600
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":601
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 *             else:
 */
        __pyx_t_7 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_8 = __Pyx_c_sum(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":602
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        goto __pyx_L15;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":605
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":606
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":607
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 *         i=i+1
 */
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":608
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 *         i=i+1
 *     return rtot
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      }
      __pyx_L15:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":609
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=rprime+rtot*pquad
 *         i=i+1             # <<<<<<<<<<<<<<
 *     return rtot
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":610
 *                 rtot=rprime+rtot*pquad
 *         i=i+1
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":459
 * 
 * 
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Sigma", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":613
 * 
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_r_ML_1;
  __pyx_t_double_complex __pyx_v_r_ML_2;
  __pyx_t_double_complex __pyx_v_ptot;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_v_rough;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi", 0);

  /* "Pythonreflectivity.pyx":614
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th > 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":615
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":617
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":618
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":619
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th)));

  /* "Pythonreflectivity.pyx":621
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":622
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":623
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":624
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":625
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 * 
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":628
 *     cdef int i,j
 * 
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":637
 *     cdef int Lower, Upper
 *     cdef double complex rough, groundrough
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 * 
 *     #rough=1.
 */
  __pyx_v_roughfak = (-2. * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0));

  /* "Pythonreflectivity.pyx":641
 *     #rough=1.
 * 
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez);

  /* "Pythonreflectivity.pyx":644
 * 
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":645
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":646
 *     if(NLAYERS==1):
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 */
    __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":647
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
    __pyx_t_7 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_rtot = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":649
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness )*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 */
    __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

    /* "Pythonreflectivity.pyx":650
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness )*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 * 
 */
    __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":651
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness )*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_rtot = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":655
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":656
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":658
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":659
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":660
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":661
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 Lower=MLCOMP[i][0]
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":662
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":663
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":664
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":665
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *             else:
 *                 Lower=MLCOMP[i][0]
 */
        __pyx_t_7 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":667
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*sintheta*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":668
 *             else:
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*sintheta*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 * 
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0)), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":669
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*sintheta*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":674
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *            # No Multiple scattering:
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":677
 * 
 *            # No Multiple scattering:
 *             rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      goto __pyx_L7;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":680
 * 
 *         else:
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))             # <<<<<<<<<<<<<<
 * 
 *             vzlower=vzupper
 */
      __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

      /* "Pythonreflectivity.pyx":682
 *             rough=exp(roughfak*vzlower*vzupper*quadr(  ( LR[ MLCOMP[i][0] ] ).Roughness ))
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi(vyvy, LR[ MLCOMP[i][1] ].ey, LR[ MLCOMP[i][1] ].ez)
 *            # rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":683
 * 
 *             vzlower=vzupper
 *             vzupper=CalculateVZpi(vyvy, LR[ MLCOMP[i][1] ].ey, LR[ MLCOMP[i][1] ].ez)             # <<<<<<<<<<<<<<
 *            # rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *             r_ML_1=(vzupper*LR[MLCOMP[i][0]].ey-vzlower*LR[MLCOMP[i][1]].ey)/(vzupper*LR[MLCOMP[i][0]].ey+vzlower*LR[MLCOMP[i][1]].ey)*rough
 */
      __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ez);

      /* "Pythonreflectivity.pyx":685
 *             vzupper=CalculateVZpi(vyvy, LR[ MLCOMP[i][1] ].ey, LR[ MLCOMP[i][1] ].ez)
 *            # rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *             r_ML_1=(vzupper*LR[MLCOMP[i][0]].ey-vzlower*LR[MLCOMP[i][1]].ey)/(vzupper*LR[MLCOMP[i][0]].ey+vzlower*LR[MLCOMP[i][1]].ey)*rough             # <<<<<<<<<<<<<<
 * 
 *            # print "2"
 */
      __pyx_t_7 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey));
      __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_r_ML_1 = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":689
 *            # print "2"
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             p=1.
 * 
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":690
 * 
 *             j=1
 *             p=1.             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_p = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":693
 * 
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *               #  print "3 ", j
 *                 vzlower=vzupper
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":695
 *             while j<MLLENGTH[i]:
 *               #  print "3 ", j
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 * 
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":696
 *               #  print "3 ", j
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 p*=pquad
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":698
 *                 pquad=exp(2j*k0* LR[MLCOMP[i][j]].Thickness*vzlower)
 * 
 *                 p*=pquad             # <<<<<<<<<<<<<<
 * 
 *                 if(j==(MLLENGTH[i]-1)):
 */
        __pyx_v_p = __Pyx_c_prod(__pyx_v_p, __pyx_v_pquad);

        /* "Pythonreflectivity.pyx":700
 *                 p*=pquad
 * 
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][0]
 *                 else:
 */
        __pyx_t_1 = ((__pyx_v_j == ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":701
 * 
 *                 if(j==(MLLENGTH[i]-1)):
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
          goto __pyx_L11;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":703
 *                     Upper=MLCOMP[i][0]
 *                 else:
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 * 
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":704
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)             # <<<<<<<<<<<<<<
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":706
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 * 
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ MLCOMP[i][j] ].Roughness))             # <<<<<<<<<<<<<<
 * 
 *               #  rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":709
 * 
 *               #  rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *                 rprime=(vzupper*LR[MLCOMP[i][j]].ey-vzlower*LR[Upper].ey)/(vzupper*LR[MLCOMP[i][j]].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 r_ML_1=rprime+r_ML_1*pquad
 *               #  print "5 ", j
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":710
 *               #  rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *                 rprime=(vzupper*LR[MLCOMP[i][j]].ey-vzlower*LR[Upper].ey)/(vzupper*LR[MLCOMP[i][j]].ey+vzlower*LR[Upper].ey)*rough
 *                 r_ML_1=rprime+r_ML_1*pquad             # <<<<<<<<<<<<<<
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 */
        __pyx_v_r_ML_1 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_r_ML_1, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":713
 *               #  print "5 ", j
 *              #   print "new rml", r_ML_1
 *                 j+=1             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":714
 *              #   print "new rml", r_ML_1
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             p*=pquad
 *           #  print "6 "
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":715
 *                 j+=1
 *             pquad=exp(2j*k0* LR[Upper].Thickness*vzupper)
 *             p*=pquad             # <<<<<<<<<<<<<<
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 */
      __pyx_v_p = __Pyx_c_prod(__pyx_v_p, __pyx_v_pquad);

      /* "Pythonreflectivity.pyx":717
 *             p*=pquad
 *           #  print "6 "
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
      __pyx_t_1 = (((__pyx_v_MLREP[__pyx_v_i]) <= 1) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":718
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 *                 ptot=1             # <<<<<<<<<<<<<<
 *                 r_ML_2=0
 *             else:
 */
        __pyx_v_ptot = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":719
 *             if(MLREP[i]<=1):
 *                 ptot=1
 *                 r_ML_2=0             # <<<<<<<<<<<<<<
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 */
        __pyx_v_r_ML_2 = __pyx_t_double_complex_from_parts(0, 0);
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":721
 *                 r_ML_2=0
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 */
        __pyx_v_ptot = __pyx_f_18Pythonreflectivity_ipow(__pyx_v_p, ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":722
 *             else:
 *                 ptot=ipow(p, MLREP[i]-1)
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)             # <<<<<<<<<<<<<<
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_r_ML_1, __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_ptot));
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_p);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_r_ML_2 = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":724
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p)
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot             # <<<<<<<<<<<<<<
 * 
 *             j=0
 */
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r_ML_2, __Pyx_c_prod(__pyx_v_ptot, __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":726
 *             rtot=r_ML_2+ptot*rtot
 * 
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":727
 * 
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":728
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":729
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":730
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":731
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":732
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":733
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":734
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":735
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":736
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":738
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":739
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":740
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":743
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":744
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":746
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":747
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":748
 *                 vzupper=CalculateVZpi(vyvy, LR[ Upper ].ey, LR[ Upper ].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 *             else:
 */
        __pyx_t_7 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":749
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        goto __pyx_L15;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":752
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":753
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=rprime+rtot*pquad
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":754
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *                 rtot=rprime+rtot*pquad
 * 
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":755
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=rprime+rtot*pquad             # <<<<<<<<<<<<<<
 * 
 *         i=i+1
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      }
      __pyx_L15:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":757
 *                 rtot=rprime+rtot*pquad
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 *     return rtot
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":758
 * 
 *         i=i+1
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":613
 * 
 * 
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":760
 *     return rtot
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_v_rough;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_MSfac;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_t_comp1_down;
  __pyx_t_double_complex __pyx_v_t_comp1_up;
  __pyx_t_double_complex __pyx_v_t_comp2_down;
  __pyx_t_double_complex __pyx_v_t_comp2_up;
  __pyx_t_double_complex __pyx_v_r_ML_in_1;
  __pyx_t_double_complex __pyx_v_r_ML_in_2;
  __pyx_t_double_complex __pyx_v_r_ML_back_1;
  __pyx_t_double_complex __pyx_v_r_ML_back_2;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Sigma_MS", 0);

  /* "Pythonreflectivity.pyx":761
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 */
  __pyx_t_1 = (((__pyx_v_th < 0.0) | (__pyx_v_th > 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":762
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":763
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):             # <<<<<<<<<<<<<<
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_t_1 = ((__pyx_v_th == 0.0) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":764
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 *         return 1.0             # <<<<<<<<<<<<<<
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 */
    __pyx_r = __pyx_t_double_complex_from_parts(1.0, 0);
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":765
 *     if(th==0):
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 765; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":766
 *         return 1.0
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":767
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th)));

  /* "Pythonreflectivity.pyx":769
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":770
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":771
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":772
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":773
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":775
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1
 */
  __pyx_v_roughfak = (-2. * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0));

  /* "Pythonreflectivity.pyx":777
 *     cdef double roughfak=-2.*quadr(k0)
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":790
 *     cdef int Lower, Upper
 * 
 *     vzlower=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 * 
 *     if(NLAYERS==1):
 */
  __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex);

  /* "Pythonreflectivity.pyx":792
 *     vzlower=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":793
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);
    goto __pyx_L5;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":795
 *         vzupper=sintheta
 *     else:
 *         vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 * 
 *     rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness))
 */
    __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex);
  }
  __pyx_L5:;

  /* "Pythonreflectivity.pyx":797
 *         vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 * 
 *     rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0)));

  /* "Pythonreflectivity.pyx":800
 * 
 * 
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 *     i=1
 */
  __pyx_t_7 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
  __pyx_t_8 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 800; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_rtot = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);

  /* "Pythonreflectivity.pyx":802
 *     rtot=(vzupper-vzlower)/(vzupper+vzlower)*rough
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":803
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":804
 *     i=1
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":805
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":806
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":807
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *             else:
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":808
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)             # <<<<<<<<<<<<<<
 *             else:
 *                 vzupper=sintheta
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);
        goto __pyx_L9;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":810
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][0]
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);
      }
      __pyx_L9:;

      /* "Pythonreflectivity.pyx":811
 *             else:
 *                 vzupper=sintheta
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 * 
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":812
 *                 vzupper=sintheta
 *             Lower=MLCOMP[i][0]
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 */
      __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

      /* "Pythonreflectivity.pyx":814
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *            # if(MultipleScattering):
 */
      __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

      /* "Pythonreflectivity.pyx":815
 * 
 *             rprime=(vzupper-vzlower)/(vzupper+vzlower)*rough
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":817
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *            # else:
 *             #    rtot=rprime+rtot*pquad
 */
      __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      goto __pyx_L8;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":822
 * 
 *         else:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[i][1]].ex)
 * 
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":823
 *         else:
 *             vzlower=vzupper
 *             vzupper=CalculateVZsigma(vyvy, LR[MLCOMP[i][1]].ex)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ex);

      /* "Pythonreflectivity.pyx":826
 * 
 * 
 *             r_ML_in_1=(vzupper-vzlower)/(vzupper+vzlower)             # <<<<<<<<<<<<<<
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough
 */
      __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
      __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_r_ML_in_1 = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

      /* "Pythonreflectivity.pyx":827
 * 
 *             r_ML_in_1=(vzupper-vzlower)/(vzupper+vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *             r_ML_in_1*=rough
 * 
 */
      __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

      /* "Pythonreflectivity.pyx":828
 *             r_ML_in_1=(vzupper-vzlower)/(vzupper+vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough             # <<<<<<<<<<<<<<
 * 
 *             t_comp1_up=1-r_ML_in_1
 */
      __pyx_v_r_ML_in_1 = __Pyx_c_prod(__pyx_v_r_ML_in_1, __pyx_v_rough);

      /* "Pythonreflectivity.pyx":830
 *             r_ML_in_1*=rough
 * 
 *             t_comp1_up=1-r_ML_in_1             # <<<<<<<<<<<<<<
 * 
 *             j=1
 */
      __pyx_v_t_comp1_up = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_in_1);

      /* "Pythonreflectivity.pyx":832
 *             t_comp1_up=1-r_ML_in_1
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":833
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":834
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
        __pyx_t_1 = (((__pyx_v_j + 1) < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":835
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][0]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
          goto __pyx_L12;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":837
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
        }
        __pyx_L12:;

        /* "Pythonreflectivity.pyx":838
 *                 else:
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":839
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":840
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);

        /* "Pythonreflectivity.pyx":841
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)
 * 
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":842
 *                 vzupper=CalculateVZsigma(vyvy, LR[Upper].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_rough, __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower));
        __pyx_t_8 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":844
 *                 rprime=rough*(vzupper-vzlower)/(vzupper+vzlower)
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 */
        __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":845
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 */
        __pyx_v_pquad = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p);

        /* "Pythonreflectivity.pyx":846
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 */
        __pyx_t_8 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_7 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_r_ML_in_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 846; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_MSfac = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":847
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 */
        __pyx_v_t = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":848
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 */
        __pyx_v_t_comp1_up = __Pyx_c_prod(__pyx_v_t_comp1_up, __Pyx_c_prod(__Pyx_c_prod(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":849
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_v_r_ML_in_1 = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_r_ML_in_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":850
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":851
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             t_comp1_up*=p
 * 
 */
      __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":852
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p             # <<<<<<<<<<<<<<
 * 
 *             r_ML_back_1=-rprime
 */
      __pyx_v_t_comp1_up = __Pyx_c_prod(__pyx_v_t_comp1_up, __pyx_v_p);

      /* "Pythonreflectivity.pyx":854
 *             t_comp1_up*=p
 * 
 *             r_ML_back_1=-rprime             # <<<<<<<<<<<<<<
 *             t_comp1_down=1-r_ML_back_1
 *             j=MLLENGTH[i]-2
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_neg(__pyx_v_rprime);

      /* "Pythonreflectivity.pyx":855
 * 
 *             r_ML_back_1=-rprime
 *             t_comp1_down=1-r_ML_back_1             # <<<<<<<<<<<<<<
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 */
      __pyx_v_t_comp1_down = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_back_1);

      /* "Pythonreflectivity.pyx":856
 *             r_ML_back_1=-rprime
 *             t_comp1_down=1-r_ML_back_1
 *             j=MLLENGTH[i]-2             # <<<<<<<<<<<<<<
 *             while j>=0:
 *                 vzupper=vzlower
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 2);

      /* "Pythonreflectivity.pyx":857
 *             t_comp1_down=1-r_ML_back_1
 *             j=MLLENGTH[i]-2
 *             while j>=0:             # <<<<<<<<<<<<<<
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j >= 0) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":858
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 *                 vzupper=vzlower             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzupper = __pyx_v_vzlower;

        /* "Pythonreflectivity.pyx":859
 *             while j>=0:
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":860
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":861
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 */
        __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ex);

        /* "Pythonreflectivity.pyx":862
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZsigma(vyvy, LR[Lower].ex)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 * 
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":864
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_rough, __Pyx_c_diff(__pyx_v_vzlower, __pyx_v_vzupper));
        __pyx_t_8 = __Pyx_c_sum(__pyx_v_vzupper, __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":865
 * 
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)
 */
        __pyx_v_t = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":866
 *                 rprime=rough*(vzlower-vzupper)/(vzupper+vzlower)
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

        /* "Pythonreflectivity.pyx":867
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 */
        __pyx_v_pquad = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p);

        /* "Pythonreflectivity.pyx":869
 *                 pquad=cquadr(p)
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)             # <<<<<<<<<<<<<<
 *                 t_comp1_down*=p*t*MSfac
 * 
 */
        __pyx_t_8 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_7 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_r_ML_back_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 869; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_MSfac = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":870
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 *                 t_comp1_down*=p*t*MSfac             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 */
        __pyx_v_t_comp1_down = __Pyx_c_prod(__pyx_v_t_comp1_down, __Pyx_c_prod(__Pyx_c_prod(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":872
 *                 t_comp1_down*=p*t*MSfac
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_v_r_ML_back_1 = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_r_ML_back_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":873
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":874
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)
 */
      __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":875
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p             # <<<<<<<<<<<<<<
 *             r_ML_back_1*=cquadr(p)
 * 
 */
      __pyx_v_t_comp1_down = __Pyx_c_prod(__pyx_v_t_comp1_down, __pyx_v_p);

      /* "Pythonreflectivity.pyx":876
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_prod(__pyx_v_r_ML_back_1, __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p));

      /* "Pythonreflectivity.pyx":879
 * 
 * 
 *             Calculate_Multilayer(&t_comp1_up, &t_comp2_up,&t_comp1_down, &t_comp2_down, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer((&__pyx_v_t_comp1_up), (&__pyx_v_t_comp2_up), (&__pyx_v_t_comp1_down), (&__pyx_v_t_comp2_down), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

      /* "Pythonreflectivity.pyx":883
 * 
 * 
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 */
      __pyx_t_7 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_t_comp2_up, __pyx_v_t_comp2_down), __pyx_v_rtot);
      __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__pyx_v_r_ML_back_2, __pyx_v_rtot));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 883; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r_ML_in_2, __Pyx_c_quot(__pyx_t_7, __pyx_t_8));

      /* "Pythonreflectivity.pyx":885
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)             # <<<<<<<<<<<<<<
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 */
      __pyx_v_vzupper = __pyx_v_vzlower;

      /* "Pythonreflectivity.pyx":886
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":887
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":888
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":889
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":890
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":891
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);

        /* "Pythonreflectivity.pyx":892
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":893
 *                 vzupper=CalculateVZsigma(vyvy,  LR[ Upper ].ex )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":894
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1
 */
        __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 894; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":895
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 895; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":896
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":898
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":899
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":900
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":903
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":904
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":906
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ex);

        /* "Pythonreflectivity.pyx":907
 * 
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":908
 *                 vzupper=CalculateVZsigma(vyvy,LR[ Upper ].ex  )
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *             else:
 */
        __pyx_t_8 = __Pyx_c_diff(__pyx_v_vzupper, __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzlower, __pyx_v_vzupper);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 908; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":909
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper-vzlower)/(vzlower+vzupper)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 909; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
        goto __pyx_L17;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":912
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":913
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":914
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 * 
 */
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 914; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":915
 *                 rough=exp(roughfak*sintheta*vzlower*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta-vzlower)/(vzlower+sintheta)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      }
      __pyx_L17:;
    }
    __pyx_L8:;

    /* "Pythonreflectivity.pyx":918
 * 
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":921
 * 
 * 
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":760
 *     return rtot
 * 
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Sigma_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":924
 * 
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  double __pyx_v_roughfak;
  __pyx_t_double_complex __pyx_v_rough;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_MSfac;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_t_comp1_down;
  __pyx_t_double_complex __pyx_v_t_comp1_up;
  __pyx_t_double_complex __pyx_v_t_comp2_down;
  __pyx_t_double_complex __pyx_v_t_comp2_up;
  __pyx_t_double_complex __pyx_v_r_ML_in_1;
  __pyx_t_double_complex __pyx_v_r_ML_in_2;
  __pyx_t_double_complex __pyx_v_r_ML_back_1;
  __pyx_t_double_complex __pyx_v_r_ML_back_2;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi_MS", 0);

  /* "Pythonreflectivity.pyx":925
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 */
  __pyx_t_1 = (((__pyx_v_th < 0.0) | (__pyx_v_th > 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":926
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":927
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):             # <<<<<<<<<<<<<<
 *         return 1.0
 * 
 */
  __pyx_t_1 = ((__pyx_v_th == 0.0) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":928
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 *     if(th==0):
 *         return 1.0             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_r = __pyx_t_double_complex_from_parts(1.0, 0);
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":930
 *         return 1.0
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 930; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":931
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))
 * 
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":932
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vyvy=quadr(cos(deg_to_rad*th))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th)));

  /* "Pythonreflectivity.pyx":935
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":936
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":937
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":938
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":939
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":941
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 *     cdef double roughfak=-2.*quadr(k0)             # <<<<<<<<<<<<<<
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1
 */
  __pyx_v_roughfak = (-2. * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0));

  /* "Pythonreflectivity.pyx":943
 *     cdef double roughfak=-2.*quadr(k0)
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz, p,t,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":956
 *     cdef int Lower, Upper
 * 
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 * 
 *     if(NLAYERS==1):
 */
  __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez);

  /* "Pythonreflectivity.pyx":958
 *     vzlower=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":959
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":960
 *     if(NLAYERS==1):
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 */
    __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":961
 *         vzupper=sintheta
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
    __pyx_t_7 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __pyx_v_vzlower);
    if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_rtot = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);
    goto __pyx_L5;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":963
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower)*rough
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 */
    __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

    /* "Pythonreflectivity.pyx":964
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)             # <<<<<<<<<<<<<<
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough
 * 
 */
    __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_vzlower, __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0)), __pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0)));

    /* "Pythonreflectivity.pyx":965
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *         rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         rtot=(vzupper*LR[MLCOMP[0][0]].ey-vzlower*LR[MLCOMP[1][0]].ey)/(vzupper*LR[MLCOMP[0][0]].ey+vzlower*LR[MLCOMP[1][0]].ey)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
    if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_rtot = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);
  }
  __pyx_L5:;

  /* "Pythonreflectivity.pyx":969
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":970
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":971
 *     i=1
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":972
 *     while i<NLAYERS:
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":973
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":974
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":975
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":976
 *                 Upper=MLCOMP[i+1][0]
 *                 Lower=MLCOMP[i][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":977
 *                 Lower=MLCOMP[i][0]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":978
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *             else:
 *                 vzupper=sintheta
 */
        __pyx_t_7 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), __pyx_v_rough);
        goto __pyx_L9;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":980
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":981
 *             else:
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower)/(vzupper*LR[Lower].ey+vzlower)*rough
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":982
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower)/(vzupper*LR[Lower].ey+vzlower)*rough
 * 
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":983
 *                 Lower=MLCOMP[i][0]
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 rprime=(vzupper*LR[Lower].ey-vzlower)/(vzupper*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 983; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);
      }
      __pyx_L9:;

      /* "Pythonreflectivity.pyx":988
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":990
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *            # if(MultipleScattering):
 *             rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *            # else:
 *             #    rtot=rprime+rtot*pquad
 */
      __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 990; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      goto __pyx_L8;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":996
 *         else:
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi(vyvy, LR[MLCOMP[i][1]].ey, LR[MLCOMP[i][1]].ez )
 * 
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":997
 * 
 *             vzlower=vzupper
 *             vzupper=CalculateVZpi(vyvy, LR[MLCOMP[i][1]].ey, LR[MLCOMP[i][1]].ez )             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ez);

      /* "Pythonreflectivity.pyx":1000
 * 
 * 
 *             r_ML_in_1=(vzupper*LR[MLCOMP[i][0]].ey-LR[MLCOMP[i][1]].ey*vzlower)/(vzupper*LR[MLCOMP[i][0]].ey+LR[MLCOMP[i][1]].ey*vzlower)             # <<<<<<<<<<<<<<
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough
 */
      __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, __pyx_v_vzlower));
      __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).ey), __Pyx_c_prod((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[1])]).ey, __pyx_v_vzlower));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1000; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_r_ML_in_1 = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

      /* "Pythonreflectivity.pyx":1001
 * 
 *             r_ML_in_1=(vzupper*LR[MLCOMP[i][0]].ey-LR[MLCOMP[i][1]].ey*vzlower)/(vzupper*LR[MLCOMP[i][0]].ey+LR[MLCOMP[i][1]].ey*vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))             # <<<<<<<<<<<<<<
 *             r_ML_in_1*=rough
 * 
 */
      __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness), 0)));

      /* "Pythonreflectivity.pyx":1002
 *             r_ML_in_1=(vzupper*LR[MLCOMP[i][0]].ey-LR[MLCOMP[i][1]].ey*vzlower)/(vzupper*LR[MLCOMP[i][0]].ey+LR[MLCOMP[i][1]].ey*vzlower)
 *             rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *             r_ML_in_1*=rough             # <<<<<<<<<<<<<<
 * 
 *             t_comp1_up=1-r_ML_in_1
 */
      __pyx_v_r_ML_in_1 = __Pyx_c_prod(__pyx_v_r_ML_in_1, __pyx_v_rough);

      /* "Pythonreflectivity.pyx":1004
 *             r_ML_in_1*=rough
 * 
 *             t_comp1_up=1-r_ML_in_1             # <<<<<<<<<<<<<<
 *             j=1
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_t_comp1_up = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_in_1);

      /* "Pythonreflectivity.pyx":1005
 * 
 *             t_comp1_up=1-r_ML_in_1
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":1006
 *             t_comp1_up=1-r_ML_in_1
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1007
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
        __pyx_t_1 = (((__pyx_v_j + 1) < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":1008
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][0]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
          goto __pyx_L12;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":1010
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
        }
        __pyx_L12:;

        /* "Pythonreflectivity.pyx":1011
 *                 else:
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1012
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1013
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":1014
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 * 
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":1015
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)             # <<<<<<<<<<<<<<
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_rough, __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey)));
        __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1017
 *                 rprime=rough*(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 */
        __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1018
 * 
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 */
        __pyx_v_pquad = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p);

        /* "Pythonreflectivity.pyx":1019
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 */
        __pyx_t_8 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_7 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_r_ML_in_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1019; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_MSfac = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":1020
 *                 pquad=cquadr(p)
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 */
        __pyx_v_t = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":1021
 *                 MSfac=1.0/(1+rprime*r_ML_in_1*pquad)
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 */
        __pyx_v_t_comp1_up = __Pyx_c_prod(__pyx_v_t_comp1_up, __Pyx_c_prod(__Pyx_c_prod(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1022
 *                 t=1-rprime
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_v_r_ML_in_1 = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_r_ML_in_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":1023
 *                 t_comp1_up*=p*t*MSfac
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1024
 *                 r_ML_in_1=(rprime+r_ML_in_1*pquad)*MSfac
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             t_comp1_up*=p
 * 
 */
      __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":1025
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_comp1_up*=p             # <<<<<<<<<<<<<<
 * 
 *             r_ML_back_1=-rprime
 */
      __pyx_v_t_comp1_up = __Pyx_c_prod(__pyx_v_t_comp1_up, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1027
 *             t_comp1_up*=p
 * 
 *             r_ML_back_1=-rprime             # <<<<<<<<<<<<<<
 *             t_comp1_down=1-r_ML_back_1
 * 
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_neg(__pyx_v_rprime);

      /* "Pythonreflectivity.pyx":1028
 * 
 *             r_ML_back_1=-rprime
 *             t_comp1_down=1-r_ML_back_1             # <<<<<<<<<<<<<<
 * 
 *             j=MLLENGTH[i]-2
 */
      __pyx_v_t_comp1_down = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_r_ML_back_1);

      /* "Pythonreflectivity.pyx":1030
 *             t_comp1_down=1-r_ML_back_1
 * 
 *             j=MLLENGTH[i]-2             # <<<<<<<<<<<<<<
 *             while j>=0:
 *                 vzupper=vzlower
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 2);

      /* "Pythonreflectivity.pyx":1031
 * 
 *             j=MLLENGTH[i]-2
 *             while j>=0:             # <<<<<<<<<<<<<<
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j >= 0) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1032
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 *                 vzupper=vzlower             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzupper = __pyx_v_vzlower;

        /* "Pythonreflectivity.pyx":1033
 *             while j>=0:
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1034
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1035
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 */
        __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez);

        /* "Pythonreflectivity.pyx":1036
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi(vyvy, LR[Lower].ey , LR[Lower].ez)
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))             # <<<<<<<<<<<<<<
 * 
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzupper), __pyx_v_vzlower), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":1038
 *                 rough=exp(roughfak*vzupper*vzlower*quadr(LR[Lower].Roughness))
 * 
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)             # <<<<<<<<<<<<<<
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_rough, __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey), __Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey)));
        __pyx_t_8 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1038; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1039
 * 
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 *                 t=1-rprime             # <<<<<<<<<<<<<<
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)
 */
        __pyx_v_t = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_v_rprime);

        /* "Pythonreflectivity.pyx":1040
 *                 rprime=rough*(vzlower*LR[Upper].ey-vzupper*LR[Lower].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

        /* "Pythonreflectivity.pyx":1041
 *                 t=1-rprime
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 */
        __pyx_v_pquad = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p);

        /* "Pythonreflectivity.pyx":1043
 *                 pquad=cquadr(p)
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)             # <<<<<<<<<<<<<<
 *                 t_comp1_down*=p*t*MSfac
 * 
 */
        __pyx_t_8 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_7 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_r_ML_back_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_MSfac = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":1044
 * 
 *                 MSfac=1.0/(1+rprime*r_ML_back_1*pquad)
 *                 t_comp1_down*=p*t*MSfac             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 */
        __pyx_v_t_comp1_down = __Pyx_c_prod(__pyx_v_t_comp1_down, __Pyx_c_prod(__Pyx_c_prod(__pyx_v_p, __pyx_v_t), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1046
 *                 t_comp1_down*=p*t*MSfac
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac             # <<<<<<<<<<<<<<
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_v_r_ML_back_1 = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_r_ML_back_1, __pyx_v_pquad)), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":1047
 * 
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":1048
 *                 r_ML_back_1=(rprime+r_ML_back_1*pquad)*MSfac
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)
 */
      __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1049
 *                 j-=1
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p             # <<<<<<<<<<<<<<
 *             r_ML_back_1*=cquadr(p)
 * 
 */
      __pyx_v_t_comp1_down = __Pyx_c_prod(__pyx_v_t_comp1_down, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1050
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_comp1_down*=p
 *             r_ML_back_1*=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_prod(__pyx_v_r_ML_back_1, __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p));

      /* "Pythonreflectivity.pyx":1053
 * 
 * 
 *             Calculate_Multilayer(&t_comp1_up, &t_comp2_up,&t_comp1_down, &t_comp2_down, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer((&__pyx_v_t_comp1_up), (&__pyx_v_t_comp2_up), (&__pyx_v_t_comp1_down), (&__pyx_v_t_comp2_down), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

      /* "Pythonreflectivity.pyx":1057
 * 
 * 
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 */
      __pyx_t_7 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_t_comp2_up, __pyx_v_t_comp2_down), __pyx_v_rtot);
      __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__pyx_v_r_ML_back_2, __pyx_v_rtot));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r_ML_in_2, __Pyx_c_quot(__pyx_t_7, __pyx_t_8));

      /* "Pythonreflectivity.pyx":1059
 *             rtot=r_ML_in_2+t_comp2_up*t_comp2_down*rtot/(1.-r_ML_back_2*rtot)
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)             # <<<<<<<<<<<<<<
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 */
      __pyx_v_vzupper = __pyx_v_vzlower;

      /* "Pythonreflectivity.pyx":1060
 *             #Now the next layer begins:
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":1061
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1062
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1063
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1064
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1065
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":1066
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":1067
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1068
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":1069
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1070
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1072
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1073
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1074
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1077
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1078
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1080
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez);

        /* "Pythonreflectivity.pyx":1081
 * 
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfak, 0), __pyx_v_vzlower), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":1082
 *                 vzupper=CalculateVZpi(vyvy, LR[Upper].ey , LR[Upper].ez)
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 *             else:
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vzupper, (__pyx_v_LR[__pyx_v_Lower]).ey), __Pyx_c_prod(__pyx_v_vzlower, (__pyx_v_LR[__pyx_v_Upper]).ey));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":1083
 *                 rough=exp(roughfak*vzlower*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(vzupper*LR[Lower].ey-vzlower*LR[Upper].ey)/(vzupper*LR[Lower].ey+vzlower*LR[Upper].ey)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1083; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
        goto __pyx_L17;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1086
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1087
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )             # <<<<<<<<<<<<<<
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 */
        __pyx_v_rough = exp(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((__pyx_v_roughfak * __pyx_v_sintheta), 0), __pyx_v_vzupper), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[__pyx_v_Lower]).Roughness), 0)));

        /* "Pythonreflectivity.pyx":1088
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough             # <<<<<<<<<<<<<<
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)
 * 
 */
        __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[__pyx_v_Lower]).ey), __pyx_v_vzlower);
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rprime = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), __pyx_v_rough);

        /* "Pythonreflectivity.pyx":1089
 *                 rough=exp(roughfak*sintheta*vzupper*quadr(  LR[ Lower ].Roughness )  )
 *                 rprime=(sintheta*LR[Lower].ey-vzlower)/(sintheta*LR[Lower].ey+vzlower)*rough
 *                 rtot=(rprime+rtot*pquad)/(1+rprime*rtot*pquad)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_7 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        __pyx_t_8 = __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_rtot), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1089; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      }
      __pyx_L17:;
    }
    __pyx_L8:;

    /* "Pythonreflectivity.pyx":1093
 * 
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1096
 * 
 * 
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":924
 * 
 * 
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1100
 * 
 * 
 * cdef void Relevant_Stuff_for_xmag(double complex ey1, double complex ey2, double complex ez1, double complex ez2,\             # <<<<<<<<<<<<<<
 *                                   double complex eg1, double complex eg2, double complex vz1, double complex vz2, \
 *                                   double vy, double k0, double sigma, \
 */

static void __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag(CYTHON_UNUSED __pyx_t_double_complex __pyx_v_ey1, CYTHON_UNUSED __pyx_t_double_complex __pyx_v_ey2, __pyx_t_double_complex __pyx_v_ez1, __pyx_t_double_complex __pyx_v_ez2, __pyx_t_double_complex __pyx_v_eg1, __pyx_t_double_complex __pyx_v_eg2, __pyx_t_double_complex __pyx_v_vz1, __pyx_t_double_complex __pyx_v_vz2, double __pyx_v_vy, double __pyx_v_k0, double __pyx_v_sigma, __pyx_t_double_complex *__pyx_v_r, __pyx_t_double_complex *__pyx_v_rp, __pyx_t_double_complex *__pyx_v_t, __pyx_t_double_complex *__pyx_v_tp) {
  double __pyx_v_vyvy;
  __pyx_t_double_complex __pyx_v_div1;
  __pyx_t_double_complex __pyx_v_a;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_c;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_e;
  __pyx_t_double_complex __pyx_v_J11;
  __pyx_t_double_complex __pyx_v_J12;
  __pyx_t_double_complex __pyx_v_J21;
  __pyx_t_double_complex __pyx_v_J22;
  double __pyx_v_roughfac;
  __pyx_t_double_complex __pyx_v_roughplus;
  __pyx_t_double_complex __pyx_v_roughminus;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Relevant_Stuff_for_xmag", 0);

  /* "Pythonreflectivity.pyx":1104
 *                                   double vy, double k0, double sigma, \
 *                                   double complex *r, double complex *rp, double complex *t, double complex *tp):
 *     cdef double vyvy=vy*vy             # <<<<<<<<<<<<<<
 *     cdef double complex div1
 *     cdef double complex a,b,c,d,e
 */
  __pyx_v_vyvy = (__pyx_v_vy * __pyx_v_vy);

  /* "Pythonreflectivity.pyx":1107
 *     cdef double complex div1
 *     cdef double complex a,b,c,d,e
 *     div1=-vy*eg1/ez1             # <<<<<<<<<<<<<<
 *     a=vz1+div1
 *     b=vz1-div1
 */
  __pyx_t_1 = __Pyx_c_prod(__pyx_t_double_complex_from_parts((-__pyx_v_vy), 0), __pyx_v_eg1);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_ez1))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_div1 = __Pyx_c_quot(__pyx_t_1, __pyx_v_ez1);

  /* "Pythonreflectivity.pyx":1108
 *     cdef double complex a,b,c,d,e
 *     div1=-vy*eg1/ez1
 *     a=vz1+div1             # <<<<<<<<<<<<<<
 *     b=vz1-div1
 *     c=1.-vyvy/ez1
 */
  __pyx_v_a = __Pyx_c_sum(__pyx_v_vz1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1109
 *     div1=-vy*eg1/ez1
 *     a=vz1+div1
 *     b=vz1-div1             # <<<<<<<<<<<<<<
 *     c=1.-vyvy/ez1
 *     div1=ez2-vyvy
 */
  __pyx_v_b = __Pyx_c_diff(__pyx_v_vz1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1110
 *     a=vz1+div1
 *     b=vz1-div1
 *     c=1.-vyvy/ez1             # <<<<<<<<<<<<<<
 *     div1=ez2-vyvy
 *     d=(ez2*vz2+eg2*vy)/div1
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_ez1))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1110; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_c = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot(__pyx_t_1, __pyx_v_ez1));

  /* "Pythonreflectivity.pyx":1111
 *     b=vz1-div1
 *     c=1.-vyvy/ez1
 *     div1=ez2-vyvy             # <<<<<<<<<<<<<<
 *     d=(ez2*vz2+eg2*vy)/div1
 *     e=(-ez2*vz2+eg2*vy)/div1
 */
  __pyx_v_div1 = __Pyx_c_diff(__pyx_v_ez2, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0));

  /* "Pythonreflectivity.pyx":1112
 *     c=1.-vyvy/ez1
 *     div1=ez2-vyvy
 *     d=(ez2*vz2+eg2*vy)/div1             # <<<<<<<<<<<<<<
 *     e=(-ez2*vz2+eg2*vy)/div1
 *     div1=1./2.*vz1
 */
  __pyx_t_1 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_ez2, __pyx_v_vz2), __Pyx_c_prod(__pyx_v_eg2, __pyx_t_double_complex_from_parts(__pyx_v_vy, 0)));
  if (unlikely(__Pyx_c_is_zero(__pyx_v_div1))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_d = __Pyx_c_quot(__pyx_t_1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1113
 *     div1=ez2-vyvy
 *     d=(ez2*vz2+eg2*vy)/div1
 *     e=(-ez2*vz2+eg2*vy)/div1             # <<<<<<<<<<<<<<
 *     div1=1./2.*vz1
 *     cdef double complex J11,J12,J21,J22
 */
  __pyx_t_1 = __Pyx_c_sum(__Pyx_c_prod(__Pyx_c_neg(__pyx_v_ez2), __pyx_v_vz2), __Pyx_c_prod(__pyx_v_eg2, __pyx_t_double_complex_from_parts(__pyx_v_vy, 0)));
  if (unlikely(__Pyx_c_is_zero(__pyx_v_div1))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_e = __Pyx_c_quot(__pyx_t_1, __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1114
 *     d=(ez2*vz2+eg2*vy)/div1
 *     e=(-ez2*vz2+eg2*vy)/div1
 *     div1=1./2.*vz1             # <<<<<<<<<<<<<<
 *     cdef double complex J11,J12,J21,J22
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 */
  __pyx_v_div1 = __Pyx_c_prod(__pyx_t_double_complex_from_parts((1. / 2.), 0), __pyx_v_vz1);

  /* "Pythonreflectivity.pyx":1116
 *     div1=1./2.*vz1
 *     cdef double complex J11,J12,J21,J22
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)             # <<<<<<<<<<<<<<
 *     cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 */
  __pyx_v_roughfac = ((-0.5 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_sigma)) * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0));

  /* "Pythonreflectivity.pyx":1117
 *     cdef double complex J11,J12,J21,J22
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))             # <<<<<<<<<<<<<<
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 */
  __pyx_v_roughplus = exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz2))));

  /* "Pythonreflectivity.pyx":1118
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))             # <<<<<<<<<<<<<<
 * 
 *     J11=roughminus*(a+c*d)*div1
 */
  __pyx_v_roughminus = exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz2))));

  /* "Pythonreflectivity.pyx":1120
 *     cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 *     J11=roughminus*(a+c*d)*div1             # <<<<<<<<<<<<<<
 *     J12=roughplus*(a+c*e)*div1
 *     J21=roughplus*(b-c*d)*div1
 */
  __pyx_v_J11 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_roughminus, __Pyx_c_sum(__pyx_v_a, __Pyx_c_prod(__pyx_v_c, __pyx_v_d))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1121
 * 
 *     J11=roughminus*(a+c*d)*div1
 *     J12=roughplus*(a+c*e)*div1             # <<<<<<<<<<<<<<
 *     J21=roughplus*(b-c*d)*div1
 *     J22=roughminus*(b-c*e)*div1
 */
  __pyx_v_J12 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_roughplus, __Pyx_c_sum(__pyx_v_a, __Pyx_c_prod(__pyx_v_c, __pyx_v_e))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1122
 *     J11=roughminus*(a+c*d)*div1
 *     J12=roughplus*(a+c*e)*div1
 *     J21=roughplus*(b-c*d)*div1             # <<<<<<<<<<<<<<
 *     J22=roughminus*(b-c*e)*div1
 * 
 */
  __pyx_v_J21 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_roughplus, __Pyx_c_diff(__pyx_v_b, __Pyx_c_prod(__pyx_v_c, __pyx_v_d))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1123
 *     J12=roughplus*(a+c*e)*div1
 *     J21=roughplus*(b-c*d)*div1
 *     J22=roughminus*(b-c*e)*div1             # <<<<<<<<<<<<<<
 * 
 *     r[0]=(-J12/J11)
 */
  __pyx_v_J22 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_roughminus, __Pyx_c_diff(__pyx_v_b, __Pyx_c_prod(__pyx_v_c, __pyx_v_e))), __pyx_v_div1);

  /* "Pythonreflectivity.pyx":1125
 *     J22=roughminus*(b-c*e)*div1
 * 
 *     r[0]=(-J12/J11)             # <<<<<<<<<<<<<<
 *     t[0]=J21*r[0]+J22
 *     rp[0]=J21/J11
 */
  __pyx_t_1 = __Pyx_c_neg(__pyx_v_J12);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_J11))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1125; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  (__pyx_v_r[0]) = __Pyx_c_quot(__pyx_t_1, __pyx_v_J11);

  /* "Pythonreflectivity.pyx":1126
 * 
 *     r[0]=(-J12/J11)
 *     t[0]=J21*r[0]+J22             # <<<<<<<<<<<<<<
 *     rp[0]=J21/J11
 *     tp[0]=1./J11
 */
  (__pyx_v_t[0]) = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_J21, (__pyx_v_r[0])), __pyx_v_J22);

  /* "Pythonreflectivity.pyx":1127
 *     r[0]=(-J12/J11)
 *     t[0]=J21*r[0]+J22
 *     rp[0]=J21/J11             # <<<<<<<<<<<<<<
 *     tp[0]=1./J11
 * 
 */
  if (unlikely(__Pyx_c_is_zero(__pyx_v_J11))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  (__pyx_v_rp[0]) = __Pyx_c_quot(__pyx_v_J21, __pyx_v_J11);

  /* "Pythonreflectivity.pyx":1128
 *     t[0]=J21*r[0]+J22
 *     rp[0]=J21/J11
 *     tp[0]=1./J11             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(1., 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_J11))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1128; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  (__pyx_v_tp[0]) = __Pyx_c_quot(__pyx_t_1, __pyx_v_J11);

  /* "Pythonreflectivity.pyx":1100
 * 
 * 
 * cdef void Relevant_Stuff_for_xmag(double complex ey1, double complex ey2, double complex ez1, double complex ez2,\             # <<<<<<<<<<<<<<
 *                                   double complex eg1, double complex eg2, double complex vz1, double complex vz2, \
 *                                   double vy, double k0, double sigma, \
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.Relevant_Stuff_for_xmag", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1132
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_r;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_tp;
  __pyx_t_double_complex __pyx_v_ttot;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_r_ML_1;
  __pyx_t_double_complex __pyx_v_r_ML_2;
  __pyx_t_double_complex __pyx_v_ptot;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi_xmag", 0);

  /* "Pythonreflectivity.pyx":1133
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<=90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th > 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1134
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":1137
 * 
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":1138
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1139
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 * 
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1140
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy);

  /* "Pythonreflectivity.pyx":1143
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":1144
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1145
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1146
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1147
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 * 
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":1150
 *     cdef int i,j
 * 
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, r, rprime, vz, p,t,tp,ttot,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":1163
 *     #rough=1.
 * 
 *     vzlower=CalculateVZpi_m(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez, LR[MLCOMP[0][0]].eg)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).eg);

  /* "Pythonreflectivity.pyx":1166
 * 
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1167
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, 1., LR[MLCOMP[0][0]].ez, 1, \
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":1169
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, 1., LR[MLCOMP[0][0]].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[MLCOMP[0][0]].eg, 0., vzlower, sintheta, \
 *                                 vy, k0, LR[MLCOMP[0][0]].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, __pyx_t_double_complex_from_parts(1., 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).eg, __pyx_t_double_complex_from_parts(0., 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":1174
 *                                 &rtot, &rprime, &t, &tp)
 *     else:
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *      #   rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, LR[MLCOMP[1][0]].ey, LR[MLCOMP[0][0]].ez, LR[MLCOMP[1][0]].ez, \
 */
    __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

    /* "Pythonreflectivity.pyx":1176
 *         vzupper=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *      #   rough=exp(vzlower*vzupper*quadr(LR[MLCOMP[0][0]].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[MLCOMP[0][0]].ey, LR[MLCOMP[1][0]].ey, LR[MLCOMP[0][0]].ez, LR[MLCOMP[1][0]].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[MLCOMP[0][0]].eg, LR[MLCOMP[1][0]].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[MLCOMP[0][0]].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).eg, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":1183
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":1184
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":1186
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1187
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1188
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1189
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1191
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1192
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1194
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1200
 *               #  print "endif"
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":1201
 *             else:
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1203
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":1212
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *            # print "Layer ", Upper, " - ", Lower
 *          #   print "r", r
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1222
 *            # No Multiple scattering:
 *            # rtot=(r*rough+t*tp*pquad*rtot)
 *             rtot=r+t*tp*pquad*rtot             # <<<<<<<<<<<<<<
 *         else:
 * 
 */
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot));
      goto __pyx_L7;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":1225
 *         else:
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Upper=MLCOMP[i][1]
 *             Lower=MLCOMP[i][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1226
 * 
 *             vzlower=vzupper
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][0]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":1227
 *             vzlower=vzupper
 *             Upper=MLCOMP[i][1]
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":1228
 *             Upper=MLCOMP[i][1]
 *             Lower=MLCOMP[i][0]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 * 
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
      __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

      /* "Pythonreflectivity.pyx":1230
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper,  \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
      __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r_ML_1), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

      /* "Pythonreflectivity.pyx":1235
 *                                 &r_ML_1, &rprime, &t, &tp)
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             p=1.
 *             ttot=t*tp
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":1236
 * 
 *             j=1
 *             p=1.             # <<<<<<<<<<<<<<
 *             ttot=t*tp
 * 
 */
      __pyx_v_p = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":1237
 *             j=1
 *             p=1.
 *             ttot=t*tp             # <<<<<<<<<<<<<<
 * 
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_ttot = __Pyx_c_prod(__pyx_v_t, __pyx_v_tp);

      /* "Pythonreflectivity.pyx":1239
 *             ttot=t*tp
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *               #  print "3 ", j
 *                 vzlower=vzupper
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1241
 *             while j<MLLENGTH[i]:
 *               #  print "3 ", j
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1242
 *               #  print "3 ", j
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1243
 *                 vzlower=vzupper
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 p*=pquad
 *                 if(j==(MLLENGTH[i]-1)):
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1244
 *                 pquad=exp(2j*k0*LR[MLCOMP[i][j]].Thickness*vzlower)
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad             # <<<<<<<<<<<<<<
 *                 if(j==(MLLENGTH[i]-1)):
 * 
 */
        __pyx_v_p = __Pyx_c_prod(__pyx_v_p, __pyx_v_pquad);

        /* "Pythonreflectivity.pyx":1245
 *                 Lower=MLCOMP[i][j]
 *                 p*=pquad
 *                 if(j==(MLLENGTH[i]-1)):             # <<<<<<<<<<<<<<
 * 
 *                     Upper=MLCOMP[i][0]
 */
        __pyx_t_1 = ((__pyx_v_j == ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":1247
 *                 if(j==(MLLENGTH[i]-1)):
 * 
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

          /* "Pythonreflectivity.pyx":1248
 * 
 *                     Upper=MLCOMP[i][0]
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
          __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

          /* "Pythonreflectivity.pyx":1250
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
          __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
          goto __pyx_L11;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":1255
 *                                 &r, &rprime, &t, &tp)
 *                 else:
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

          /* "Pythonreflectivity.pyx":1256
 *                 else:
 *                     Upper=MLCOMP[i][j+1]
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
          __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

          /* "Pythonreflectivity.pyx":1258
 *                     vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 * 
 *                     Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
          __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":1263
 *                                 &r, &rprime, &t, &tp)
 *               #  r=r*rough
 *                 ttot*=t*tp             # <<<<<<<<<<<<<<
 *                 r_ML_1=r+t*tp*r_ML_1*pquad
 * 
 */
        __pyx_v_ttot = __Pyx_c_prod(__pyx_v_ttot, __Pyx_c_prod(__pyx_v_t, __pyx_v_tp));

        /* "Pythonreflectivity.pyx":1264
 *               #  r=r*rough
 *                 ttot*=t*tp
 *                 r_ML_1=r+t*tp*r_ML_1*pquad             # <<<<<<<<<<<<<<
 * 
 *                 j=j+1
 */
        __pyx_v_r_ML_1 = __Pyx_c_sum(__pyx_v_r, __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_r_ML_1), __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":1266
 *                 r_ML_1=r+t*tp*r_ML_1*pquad
 * 
 *                 j=j+1             # <<<<<<<<<<<<<<
 *             pquad=exp(2j*k0*LR[Upper].Thickness*vzupper)
 *             p*=pquad
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1267
 * 
 *                 j=j+1
 *             pquad=exp(2j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             p*=pquad
 *           #  print "6 "
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":1268
 *                 j=j+1
 *             pquad=exp(2j*k0*LR[Upper].Thickness*vzupper)
 *             p*=pquad             # <<<<<<<<<<<<<<
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 */
      __pyx_v_p = __Pyx_c_prod(__pyx_v_p, __pyx_v_pquad);

      /* "Pythonreflectivity.pyx":1270
 *             p*=pquad
 *           #  print "6 "
 *             if(MLREP[i]<=1):             # <<<<<<<<<<<<<<
 *                 ptot=1
 *                 r_ML_2=0
 */
      __pyx_t_1 = (((__pyx_v_MLREP[__pyx_v_i]) <= 1) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1271
 *           #  print "6 "
 *             if(MLREP[i]<=1):
 *                 ptot=1             # <<<<<<<<<<<<<<
 *                 r_ML_2=0
 *             else:
 */
        __pyx_v_ptot = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":1272
 *             if(MLREP[i]<=1):
 *                 ptot=1
 *                 r_ML_2=0             # <<<<<<<<<<<<<<
 *             else:
 *                 ptot=ipow(p*ttot, MLREP[i]-1)
 */
        __pyx_v_r_ML_2 = __pyx_t_double_complex_from_parts(0, 0);
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1274
 *                 r_ML_2=0
 *             else:
 *                 ptot=ipow(p*ttot, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)
 */
        __pyx_v_ptot = __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod(__pyx_v_p, __pyx_v_ttot), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":1276
 *                 ptot=ipow(p*ttot, MLREP[i]-1)
 * 
 *                 r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)             # <<<<<<<<<<<<<<
 *             #ttot=ipow(, MLREP[i])
 *           #  r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)
 */
        __pyx_t_7 = __Pyx_c_prod(__pyx_v_r_ML_1, __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __pyx_v_ptot));
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__pyx_v_p, __pyx_v_ttot));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_r_ML_2 = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":1280
 *           #  r_ML_2=r_ML_1*(1.-ptot)/(1.-p*ttot)
 *            # print "7 "
 *             rtot=r_ML_2+ptot*rtot             # <<<<<<<<<<<<<<
 * 
 *             j=0
 */
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r_ML_2, __Pyx_c_prod(__pyx_v_ptot, __pyx_v_rtot));

      /* "Pythonreflectivity.pyx":1282
 *             rtot=r_ML_2+ptot*rtot
 * 
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":1283
 * 
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1284
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1285
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1286
 *                 vzlower=vzupper
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1287
 *                 Lower=MLCOMP[i][j]
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1288
 *                 Upper=MLCOMP[i][j+1]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1292
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 rtot=(r+rtot*pquad)
 *                 j+=1
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1293
 *                                 &r, &rprime, &t, &tp)
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rtot=(r+rtot*pquad)             # <<<<<<<<<<<<<<
 *                 j+=1
 *             #Now the next layer begins:
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));

        /* "Pythonreflectivity.pyx":1294
 *                 pquad=exp(2j*k0*( LR[ Lower ] ).Thickness*vzlower)
 *                 rtot=(r+rtot*pquad)
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1296
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1297
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1298
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1301
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1302
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1304
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1305
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1309
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+rtot*pquad             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
        goto __pyx_L15;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1312
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1313
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1317
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+rtot*pquad             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_prod(__pyx_v_rtot, __pyx_v_pquad));
      }
      __pyx_L15:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":1320
 * 
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 *    # print "8 "
 *     return rtot
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1322
 *         i=i+1
 *    # print "8 "
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":1132
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi_xmag", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1325
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")
 */

static __pyx_t_double_complex __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  long __pyx_v_Cap;
  __pyx_t_double_complex __pyx_v_rtot;
  __pyx_t_double_complex __pyx_v_rprime;
  __pyx_t_double_complex __pyx_v_r;
  __pyx_t_double_complex __pyx_v_p;
  __pyx_t_double_complex __pyx_v_t;
  __pyx_t_double_complex __pyx_v_tp;
  __pyx_t_double_complex __pyx_v_MSfac;
  __pyx_t_double_complex __pyx_v_pquad;
  __pyx_t_double_complex __pyx_v_vzupper;
  __pyx_t_double_complex __pyx_v_vzlower;
  __pyx_t_double_complex __pyx_v_t_ML_in_1;
  __pyx_t_double_complex __pyx_v_t_ML_back_1;
  __pyx_t_double_complex __pyx_v_t_ML_in_2;
  __pyx_t_double_complex __pyx_v_t_ML_back_2;
  __pyx_t_double_complex __pyx_v_r_ML_in_1;
  __pyx_t_double_complex __pyx_v_r_ML_in_2;
  __pyx_t_double_complex __pyx_v_r_ML_back_1;
  __pyx_t_double_complex __pyx_v_r_ML_back_2;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("LinDicParatt_Pi_xmag_MS", 0);

  /* "Pythonreflectivity.pyx":1326
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1327
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":1330
 * 
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":1331
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1332
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 * 
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1333
 *     cdef double sintheta=sin(deg_to_rad*th)
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy);

  /* "Pythonreflectivity.pyx":1336
 * 
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":1337
 * 
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1338
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1339
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1340
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *    # cdef double roughfak=-2.*quadr(k0)
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":1344
 *    # cdef double roughfak=-2.*quadr(k0)
 *     cdef double complex rough, rough2
 *     Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef double complex rtot, rprime, vz,r, p,t,tp,MSfac,pquad, rsl, vzupper, vzlower
 *     #cdef double complex vzlower
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":1357
 *     cdef int Lower, Upper
 *     #rough=1.
 *     Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *     Upper=MLCOMP[1][0]
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 */
  __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

  /* "Pythonreflectivity.pyx":1358
 *     #rough=1.
 *     Lower=MLCOMP[0][0]
 *     Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 */
  __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

  /* "Pythonreflectivity.pyx":1359
 *     Lower=MLCOMP[0][0]
 *     Upper=MLCOMP[1][0]
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)             # <<<<<<<<<<<<<<
 * 
 *     if(NLAYERS==1):
 */
  __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg);

  /* "Pythonreflectivity.pyx":1361
 *     vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1362
 * 
 *     if(NLAYERS==1):
 *         vzupper=sintheta             # <<<<<<<<<<<<<<
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, 1., LR[Lower].ez, 1, \
 */
    __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

    /* "Pythonreflectivity.pyx":1364
 *         vzupper=sintheta
 *        # rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, 1., LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0., vzlower, sintheta, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1., 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0., 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":1369
 *                                 &rtot, &rprime, &t, &tp)
 *     else:
 *         vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *      #   rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
    __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

    /* "Pythonreflectivity.pyx":1371
 *         vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *      #   rough=exp(vzlower*vzupper*quadr(LR[Lower].Roughness)*roughfak)
 *         Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
    __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_rtot), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":1378
 *    # print rtot
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 * 
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":1379
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 * 
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":1381
 *     while i<NLAYERS:
 * 
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 *             vzlower=vzupper
 *             if(i!=Cap):
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1382
 * 
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1383
 *         if(MLLENGTH[i]==1):
 *             vzlower=vzupper
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1384
 *             vzlower=vzupper
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1386
 *                 Upper=MLCOMP[i+1][0]
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1387
 *               #  print Upper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1389
 *                 Lower=MLCOMP[i][0]
 *               #  rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1395
 *               #  print "endif"
 *             else:
 *                 vzupper=sintheta             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 */
        __pyx_v_vzupper = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":1396
 *             else:
 *                 vzupper=sintheta
 *                 Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

        /* "Pythonreflectivity.pyx":1398
 *                 Lower=MLCOMP[i][0]
 *              #   rough=exp(roughfak*vzlower*vzupper*quadr(LR[MLCOMP[i][0]].Roughness))
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[MLCOMP[i][0]].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":1407
 * 
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 *           #  print rtot, vzlower, vzupper
 */
      __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1408
 * 
 *             pquad=exp(2j*k0*LR[Lower].Thickness*vzlower)
 *             rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *           #  print rtot, vzlower, vzupper
 *         else:
 */
      __pyx_t_7 = __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
      __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1408; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_quot(__pyx_t_7, __pyx_t_8));
      goto __pyx_L7;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":1412
 *         else:
 * 
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 * 
 *             Lower=MLCOMP[i][0]
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1414
 *             vzlower=vzupper
 * 
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             Upper=MLCOMP[i][1]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":1415
 * 
 *             Lower=MLCOMP[i][0]
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":1416
 *             Lower=MLCOMP[i][0]
 *             Upper=MLCOMP[i][1]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
      __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

      /* "Pythonreflectivity.pyx":1417
 *             Upper=MLCOMP[i][1]
 *             vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *             Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
      __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_t_ML_back_1));

      /* "Pythonreflectivity.pyx":1421
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r_ML_in_1, &rprime, &t, &t_ML_back_1)
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":1422
 *                                 &r_ML_in_1, &rprime, &t, &t_ML_back_1)
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1423
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 */
        __pyx_t_1 = (((__pyx_v_j + 1) < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":1424
 *             while j<MLLENGTH[i]:
 *                 if(j+1<MLLENGTH[i]):
 *                     Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 else:
 *                     Upper=MLCOMP[i][0]
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);
          goto __pyx_L11;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":1426
 *                     Upper=MLCOMP[i][j+1]
 *                 else:
 *                     Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 * 
 */
          __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);
        }
        __pyx_L11:;

        /* "Pythonreflectivity.pyx":1427
 *                 else:
 *                     Upper=MLCOMP[i][0]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 * 
 *                 vzlower=vzupper
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1429
 *                 Lower=MLCOMP[i][j]
 * 
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1430
 * 
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1431
 *                 vzlower=vzupper
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1435
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1436
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_pquad = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p);

        /* "Pythonreflectivity.pyx":1439
 * 
 * 
 *                 MSfac=1.0/(1.-rprime*r_ML_in_1*pquad)             # <<<<<<<<<<<<<<
 * 
 *                 t_ML_back_1=t_ML_back_1*p*tp*MSfac
 */
        __pyx_t_8 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_7 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rprime, __pyx_v_r_ML_in_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_MSfac = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":1441
 *                 MSfac=1.0/(1.-rprime*r_ML_in_1*pquad)
 * 
 *                 t_ML_back_1=t_ML_back_1*p*tp*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_in_1=r+t*tp*pquad*r_ML_in_1*MSfac
 * 
 */
        __pyx_v_t_ML_back_1 = __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t_ML_back_1, __pyx_v_p), __pyx_v_tp), __pyx_v_MSfac);

        /* "Pythonreflectivity.pyx":1442
 * 
 *                 t_ML_back_1=t_ML_back_1*p*tp*MSfac
 *                 r_ML_in_1=r+t*tp*pquad*r_ML_in_1*MSfac             # <<<<<<<<<<<<<<
 * 
 *                 j+=1
 */
        __pyx_v_r_ML_in_1 = __Pyx_c_sum(__pyx_v_r, __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_r_ML_in_1), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1444
 *                 r_ML_in_1=r+t*tp*pquad*r_ML_in_1*MSfac
 * 
 *                 j+=1             # <<<<<<<<<<<<<<
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_ML_back_1*=p
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1445
 * 
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *             t_ML_back_1*=p
 * 
 */
      __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

      /* "Pythonreflectivity.pyx":1446
 *                 j+=1
 *             p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *             t_ML_back_1*=p             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_t_ML_back_1 = __Pyx_c_prod(__pyx_v_t_ML_back_1, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1449
 * 
 * 
 *             r_ML_back_1=rprime             # <<<<<<<<<<<<<<
 *             t_ML_in_1=t
 * 
 */
      __pyx_v_r_ML_back_1 = __pyx_v_rprime;

      /* "Pythonreflectivity.pyx":1450
 * 
 *             r_ML_back_1=rprime
 *             t_ML_in_1=t             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_t_ML_in_1 = __pyx_v_t;

      /* "Pythonreflectivity.pyx":1455
 * 
 * 
 *             j=MLLENGTH[i]-2             # <<<<<<<<<<<<<<
 *             while j>=0:
 *                 vzupper=vzlower
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 2);

      /* "Pythonreflectivity.pyx":1456
 * 
 *             j=MLLENGTH[i]-2
 *             while j>=0:             # <<<<<<<<<<<<<<
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j >= 0) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1457
 *             j=MLLENGTH[i]-2
 *             while j>=0:
 *                 vzupper=vzlower             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzupper = __pyx_v_vzlower;

        /* "Pythonreflectivity.pyx":1458
 *             while j>=0:
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1459
 *                 vzupper=vzlower
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1460
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg);

        /* "Pythonreflectivity.pyx":1461
 *                 Lower=MLCOMP[i][j]
 *                 vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1465
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)             # <<<<<<<<<<<<<<
 *                 pquad=cquadr(p)
 * 
 */
        __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vzupper));

        /* "Pythonreflectivity.pyx":1466
 *                                 &r, &rprime, &t, &tp)
 *                 p=exp(1j*k0*LR[Upper].Thickness*vzupper)
 *                 pquad=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 *                 MSfac=1.0/(1.-r*r_ML_back_1*pquad)
 */
        __pyx_v_pquad = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p);

        /* "Pythonreflectivity.pyx":1468
 *                 pquad=cquadr(p)
 * 
 *                 MSfac=1.0/(1.-r*r_ML_back_1*pquad)             # <<<<<<<<<<<<<<
 * 
 *                 t_ML_in_1*=t*p*MSfac
 */
        __pyx_t_7 = __pyx_t_double_complex_from_parts(1.0, 0);
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_r, __pyx_v_r_ML_back_1), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_MSfac = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":1470
 *                 MSfac=1.0/(1.-r*r_ML_back_1*pquad)
 * 
 *                 t_ML_in_1*=t*p*MSfac             # <<<<<<<<<<<<<<
 *                 r_ML_back_1=rprime+t*tp*pquad*r_ML_back_1*MSfac
 *                 j-=1
 */
        __pyx_v_t_ML_in_1 = __Pyx_c_prod(__pyx_v_t_ML_in_1, __Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_p), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1471
 * 
 *                 t_ML_in_1*=t*p*MSfac
 *                 r_ML_back_1=rprime+t*tp*pquad*r_ML_back_1*MSfac             # <<<<<<<<<<<<<<
 *                 j-=1
 * 
 */
        __pyx_v_r_ML_back_1 = __Pyx_c_sum(__pyx_v_rprime, __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_r_ML_back_1), __pyx_v_MSfac));

        /* "Pythonreflectivity.pyx":1472
 *                 t_ML_in_1*=t*p*MSfac
 *                 r_ML_back_1=rprime+t*tp*pquad*r_ML_back_1*MSfac
 *                 j-=1             # <<<<<<<<<<<<<<
 * 
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":1474
 *                 j-=1
 * 
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *             t_ML_in_1*=p
 *             r_ML_back_1*=cquadr(p)
 */
      __pyx_v_p = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

      /* "Pythonreflectivity.pyx":1475
 * 
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_ML_in_1*=p             # <<<<<<<<<<<<<<
 *             r_ML_back_1*=cquadr(p)
 * 
 */
      __pyx_v_t_ML_in_1 = __Pyx_c_prod(__pyx_v_t_ML_in_1, __pyx_v_p);

      /* "Pythonreflectivity.pyx":1476
 *             p=exp(1j*k0*LR[Lower].Thickness*vzlower)
 *             t_ML_in_1*=p
 *             r_ML_back_1*=cquadr(p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_r_ML_back_1 = __Pyx_c_prod(__pyx_v_r_ML_back_1, __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_p));

      /* "Pythonreflectivity.pyx":1479
 * 
 * 
 *             Calculate_Multilayer(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_back_2), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_in_2), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

      /* "Pythonreflectivity.pyx":1483
 * 
 * 
 *             rtot=r_ML_in_2+t_ML_back_2*t_ML_in_2*rtot/(1.-r_ML_back_2*rtot)             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 * 
 */
      __pyx_t_8 = __Pyx_c_prod(__Pyx_c_prod(__pyx_v_t_ML_back_2, __pyx_v_t_ML_in_2), __pyx_v_rtot);
      __pyx_t_7 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__pyx_v_r_ML_back_2, __pyx_v_rtot));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r_ML_in_2, __Pyx_c_quot(__pyx_t_8, __pyx_t_7));

      /* "Pythonreflectivity.pyx":1486
 *             #Now the next layer begins:
 * 
 *             Lower=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":1487
 * 
 *             Lower=MLCOMP[i][0]
 *             vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)             # <<<<<<<<<<<<<<
 * 
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 */
      __pyx_v_vzlower = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg);

      /* "Pythonreflectivity.pyx":1489
 *             vzlower=CalculateVZpi_m(vyvy, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg)
 * 
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)             # <<<<<<<<<<<<<<
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 */
      __pyx_v_vzupper = __pyx_v_vzlower;

      /* "Pythonreflectivity.pyx":1490
 * 
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0             # <<<<<<<<<<<<<<
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 */
      __pyx_v_j = 0;

      /* "Pythonreflectivity.pyx":1491
 *             vzupper=vzlower #CalculateVZsigma(vyvy, LR[MLCOMP[i][0]].ex)
 *             j=0
 *             while(j<MLLENGTH[i]-1):             # <<<<<<<<<<<<<<
 *                 vzlower=vzupper
 *                 Upper=MLCOMP[i][j+1]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":1492
 *             j=0
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 */
        __pyx_v_vzlower = __pyx_v_vzupper;

        /* "Pythonreflectivity.pyx":1493
 *             while(j<MLLENGTH[i]-1):
 *                 vzlower=vzupper
 *                 Upper=MLCOMP[i][j+1]             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j + 1)]);

        /* "Pythonreflectivity.pyx":1494
 *                 vzlower=vzupper
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":1495
 *                 Upper=MLCOMP[i][j+1]
 *                 Lower=MLCOMP[i][j]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1496
 *                 Lower=MLCOMP[i][j]
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1500
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1502
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *              #   print rtot, vzlower, vzupper
 *                 j+=1
 */
        __pyx_t_7 = __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_quot(__pyx_t_7, __pyx_t_8));

        /* "Pythonreflectivity.pyx":1504
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 *              #   print rtot, vzlower, vzupper
 *                 j+=1             # <<<<<<<<<<<<<<
 *             #Now the next layer begins:
 *             vzlower=vzupper
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":1506
 *                 j+=1
 *             #Now the next layer begins:
 *             vzlower=vzupper             # <<<<<<<<<<<<<<
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):
 */
      __pyx_v_vzlower = __pyx_v_vzupper;

      /* "Pythonreflectivity.pyx":1507
 *             #Now the next layer begins:
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *             if(i!=Cap):
 *                # print "hier1"
 */
      __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1508
 *             vzlower=vzupper
 *             Lower=MLCOMP[i][j]
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                # print "hier1"
 * 
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1511
 *                # print "hier1"
 * 
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":1512
 * 
 *                 Upper=MLCOMP[i+1][0]
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1514
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1515
 * 
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, LR[Upper].ey, LR[Lower].ez, LR[Upper].ez, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, LR[Upper].eg, vzlower, vzupper, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (__pyx_v_LR[__pyx_v_Upper]).eg, __pyx_v_vzlower, __pyx_v_vzupper, __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1519
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_t_8 = __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
        __pyx_t_7 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_quot(__pyx_t_8, __pyx_t_7));
        goto __pyx_L16;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1522
 *             else:
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)             # <<<<<<<<<<<<<<
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 */
        __pyx_v_pquad = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 2.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vzlower));

        /* "Pythonreflectivity.pyx":1523
 * 
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)             # <<<<<<<<<<<<<<
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 */
        __pyx_v_vzupper = __pyx_f_18Pythonreflectivity_CalculateVZpi_m(__pyx_v_vyvy, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg);

        /* "Pythonreflectivity.pyx":1524
 *                 pquad=exp(2j*k0*LR[ Lower ].Thickness*vzlower)
 *                 vzupper=CalculateVZpi_m(vyvy, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg)
 *                 Relevant_Stuff_for_xmag(LR[Lower].ey, 1, LR[Lower].ez, 1, \             # <<<<<<<<<<<<<<
 *                                 LR[Lower].eg, 0, vzlower, sintheta, \
 *                                 vy, k0, LR[Lower].Roughness, \
 */
        __pyx_f_18Pythonreflectivity_Relevant_Stuff_for_xmag((__pyx_v_LR[__pyx_v_Lower]).ey, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).ez, __pyx_t_double_complex_from_parts(1, 0), (__pyx_v_LR[__pyx_v_Lower]).eg, __pyx_t_double_complex_from_parts(0, 0), __pyx_v_vzlower, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_v_vy, __pyx_v_k0, (__pyx_v_LR[__pyx_v_Lower]).Roughness, (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tp));

        /* "Pythonreflectivity.pyx":1528
 *                                 vy, k0, LR[Lower].Roughness, \
 *                                 &r, &rprime, &t, &tp)
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)             # <<<<<<<<<<<<<<
 *           #  print rtot, vzlower, vzupper
 *         i=i+1
 */
        __pyx_t_7 = __Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_v_t, __pyx_v_tp), __pyx_v_pquad), __pyx_v_rtot);
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_prod(__Pyx_c_prod(__pyx_v_rtot, __pyx_v_rprime), __pyx_v_pquad));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_rtot = __Pyx_c_sum(__pyx_v_r, __Pyx_c_quot(__pyx_t_7, __pyx_t_8));
      }
      __pyx_L16:;
    }
    __pyx_L7:;

    /* "Pythonreflectivity.pyx":1530
 *                 rtot=r+t*tp*pquad*rtot/(1.-rtot*rprime*pquad)
 *           #  print rtot, vzlower, vzupper
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 *     return rtot
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1532
 *         i=i+1
 * 
 *     return rtot             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_rtot;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":1325
 * 
 * 
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:             # <<<<<<<<<<<<<<
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.LinDicParatt_Pi_xmag_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1536
 * 
 * 
 * cdef void Mult2x2_rightside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

static void __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2]) {
  __pyx_t_double_complex __pyx_v_R11;
  __pyx_t_double_complex __pyx_v_R12;
  __pyx_t_double_complex __pyx_v_R21;
  __pyx_t_double_complex __pyx_v_R22;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mult2x2_rightside", 0);

  /* "Pythonreflectivity.pyx":1539
 * 
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 */
  __pyx_v_R11 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1540
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 */
  __pyx_v_R12 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1541
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (B[0])[0][0]=R11
 */
  __pyx_v_R21 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1542
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     (B[0])[0][0]=R11
 *     (B[0])[0][1]=R12
 */
  __pyx_v_R22 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1543
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (B[0])[0][0]=R11             # <<<<<<<<<<<<<<
 *     (B[0])[0][1]=R12
 *     (B[0])[1][0]=R21
 */
  (((__pyx_v_B[0])[0])[0]) = __pyx_v_R11;

  /* "Pythonreflectivity.pyx":1544
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (B[0])[0][0]=R11
 *     (B[0])[0][1]=R12             # <<<<<<<<<<<<<<
 *     (B[0])[1][0]=R21
 *     (B[0])[1][1]=R22
 */
  (((__pyx_v_B[0])[0])[1]) = __pyx_v_R12;

  /* "Pythonreflectivity.pyx":1545
 *     (B[0])[0][0]=R11
 *     (B[0])[0][1]=R12
 *     (B[0])[1][0]=R21             # <<<<<<<<<<<<<<
 *     (B[0])[1][1]=R22
 * 
 */
  (((__pyx_v_B[0])[1])[0]) = __pyx_v_R21;

  /* "Pythonreflectivity.pyx":1546
 *     (B[0])[0][1]=R12
 *     (B[0])[1][0]=R21
 *     (B[0])[1][1]=R22             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (((__pyx_v_B[0])[1])[1]) = __pyx_v_R22;

  /* "Pythonreflectivity.pyx":1536
 * 
 * 
 * cdef void Mult2x2_rightside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1549
 * 
 * 
 * cdef void Mult2x2_leftside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

static void __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2]) {
  __pyx_t_double_complex __pyx_v_R11;
  __pyx_t_double_complex __pyx_v_R12;
  __pyx_t_double_complex __pyx_v_R21;
  __pyx_t_double_complex __pyx_v_R22;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Mult2x2_leftside", 0);

  /* "Pythonreflectivity.pyx":1552
 * 
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 */
  __pyx_v_R11 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1553
 *     cdef double complex R11,R12,R21,R22
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 */
  __pyx_v_R12 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod((((__pyx_v_A[0])[0])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1554
 *     R11=(A[0])[0][0]*(B[0])[0][0]+(A[0])[0][1]*(B[0])[1][0]
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]             # <<<<<<<<<<<<<<
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (A[0])[0][0]=R11
 */
  __pyx_v_R21 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[0])), __Pyx_c_prod((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[0])));

  /* "Pythonreflectivity.pyx":1555
 *     R12=(A[0])[0][0]*(B[0])[0][1]+(A[0])[0][1]*(B[0])[1][1]
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]             # <<<<<<<<<<<<<<
 *     (A[0])[0][0]=R11
 *     (A[0])[0][1]=R12
 */
  __pyx_v_R22 = __Pyx_c_sum(__Pyx_c_prod((((__pyx_v_A[0])[1])[0]), (((__pyx_v_B[0])[0])[1])), __Pyx_c_prod((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1556
 *     R21=(A[0])[1][0]*(B[0])[0][0]+(A[0])[1][1]*(B[0])[1][0]
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (A[0])[0][0]=R11             # <<<<<<<<<<<<<<
 *     (A[0])[0][1]=R12
 *     (A[0])[1][0]=R21
 */
  (((__pyx_v_A[0])[0])[0]) = __pyx_v_R11;

  /* "Pythonreflectivity.pyx":1557
 *     R22=(A[0])[1][0]*(B[0])[0][1]+(A[0])[1][1]*(B[0])[1][1]
 *     (A[0])[0][0]=R11
 *     (A[0])[0][1]=R12             # <<<<<<<<<<<<<<
 *     (A[0])[1][0]=R21
 *     (A[0])[1][1]=R22
 */
  (((__pyx_v_A[0])[0])[1]) = __pyx_v_R12;

  /* "Pythonreflectivity.pyx":1558
 *     (A[0])[0][0]=R11
 *     (A[0])[0][1]=R12
 *     (A[0])[1][0]=R21             # <<<<<<<<<<<<<<
 *     (A[0])[1][1]=R22
 * 
 */
  (((__pyx_v_A[0])[1])[0]) = __pyx_v_R21;

  /* "Pythonreflectivity.pyx":1559
 *     (A[0])[0][1]=R12
 *     (A[0])[1][0]=R21
 *     (A[0])[1][1]=R22             # <<<<<<<<<<<<<<
 * 
 * cdef void Elimination_4x4(double complex (*A)[4][4], double complex (*B)[4]):
 */
  (((__pyx_v_A[0])[1])[1]) = __pyx_v_R22;

  /* "Pythonreflectivity.pyx":1549
 * 
 * 
 * cdef void Mult2x2_leftside(double complex (*A)[2][2], double complex (*B)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex R11,R12,R21,R22
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1561
 *     (A[0])[1][1]=R22
 * 
 * cdef void Elimination_4x4(double complex (*A)[4][4], double complex (*B)[4]):             # <<<<<<<<<<<<<<
 *      # Calculates for matrix a and vector b the solution of the system of equations ax=b and stores the result in b.
 *     cdef double complex x, sum
 */

static void __pyx_f_18Pythonreflectivity_Elimination_4x4(__pyx_t_double_complex (*__pyx_v_A)[4][4], __pyx_t_double_complex (*__pyx_v_B)[4]) {
  __pyx_t_double_complex __pyx_v_x;
  __pyx_t_double_complex __pyx_v_sum;
  int __pyx_v_n;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_k;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Elimination_4x4", 0);

  /* "Pythonreflectivity.pyx":1564
 *      # Calculates for matrix a and vector b the solution of the system of equations ax=b and stores the result in b.
 *     cdef double complex x, sum
 *     cdef int n=4             # <<<<<<<<<<<<<<
 *     cdef int i,j,k
 *     for i in range(n-1):
 */
  __pyx_v_n = 4;

  /* "Pythonreflectivity.pyx":1566
 *     cdef int n=4
 *     cdef int i,j,k
 *     for i in range(n-1):             # <<<<<<<<<<<<<<
 *         for k in range(i+1,n):
 *             x=(A[0])[k][i]/(A[0])[i][i]
 */
  __pyx_t_1 = (__pyx_v_n - 1);
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "Pythonreflectivity.pyx":1567
 *     cdef int i,j,k
 *     for i in range(n-1):
 *         for k in range(i+1,n):             # <<<<<<<<<<<<<<
 *             x=(A[0])[k][i]/(A[0])[i][i]
 *             for j in range(i+1,n):
 */
    __pyx_t_3 = __pyx_v_n;
    for (__pyx_t_4 = (__pyx_v_i + 1); __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_k = __pyx_t_4;

      /* "Pythonreflectivity.pyx":1568
 *     for i in range(n-1):
 *         for k in range(i+1,n):
 *             x=(A[0])[k][i]/(A[0])[i][i]             # <<<<<<<<<<<<<<
 *             for j in range(i+1,n):
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x
 */
      if (unlikely(__Pyx_c_is_zero((((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_i])))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_x = __Pyx_c_quot((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_i]), (((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_i]));

      /* "Pythonreflectivity.pyx":1569
 *         for k in range(i+1,n):
 *             x=(A[0])[k][i]/(A[0])[i][i]
 *             for j in range(i+1,n):             # <<<<<<<<<<<<<<
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x
 */
      __pyx_t_5 = __pyx_v_n;
      for (__pyx_t_6 = (__pyx_v_i + 1); __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_j = __pyx_t_6;

        /* "Pythonreflectivity.pyx":1570
 *             x=(A[0])[k][i]/(A[0])[i][i]
 *             for j in range(i+1,n):
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x             # <<<<<<<<<<<<<<
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x
 * 
 */
        (((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_j]) = __Pyx_c_diff((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_j]), __Pyx_c_prod((((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_j]), __pyx_v_x));
      }

      /* "Pythonreflectivity.pyx":1571
 *             for j in range(i+1,n):
 *                 (A[0])[k][j] = (A[0])[k][j] -(A[0])[i][j]*x
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x             # <<<<<<<<<<<<<<
 * 
 *     (B[0])[n-1]=(B[0])[n-1]/(A[0])[n-1][n-1]
 */
      ((__pyx_v_B[0])[__pyx_v_k]) = __Pyx_c_diff(((__pyx_v_B[0])[__pyx_v_k]), __Pyx_c_prod(((__pyx_v_B[0])[__pyx_v_i]), __pyx_v_x));
    }
  }

  /* "Pythonreflectivity.pyx":1573
 *             (B[0])[k] = (B[0])[k] - (B[0])[i]*x
 * 
 *     (B[0])[n-1]=(B[0])[n-1]/(A[0])[n-1][n-1]             # <<<<<<<<<<<<<<
 * 
 *     k=n-2
 */
  __pyx_t_7 = ((__pyx_v_B[0])[(__pyx_v_n - 1)]);
  __pyx_t_8 = (((__pyx_v_A[0])[(__pyx_v_n - 1)])[(__pyx_v_n - 1)]);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_B[0])[(__pyx_v_n - 1)]) = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

  /* "Pythonreflectivity.pyx":1575
 *     (B[0])[n-1]=(B[0])[n-1]/(A[0])[n-1][n-1]
 * 
 *     k=n-2             # <<<<<<<<<<<<<<
 *     while k>=0:
 *         sum = (B[0])[k]
 */
  __pyx_v_k = (__pyx_v_n - 2);

  /* "Pythonreflectivity.pyx":1576
 * 
 *     k=n-2
 *     while k>=0:             # <<<<<<<<<<<<<<
 *         sum = (B[0])[k]
 *         for j in range(k+1,n):
 */
  while (1) {
    __pyx_t_9 = ((__pyx_v_k >= 0) != 0);
    if (!__pyx_t_9) break;

    /* "Pythonreflectivity.pyx":1577
 *     k=n-2
 *     while k>=0:
 *         sum = (B[0])[k]             # <<<<<<<<<<<<<<
 *         for j in range(k+1,n):
 *             sum=sum-(A[0])[k][j]*(B[0])[j]
 */
    __pyx_v_sum = ((__pyx_v_B[0])[__pyx_v_k]);

    /* "Pythonreflectivity.pyx":1578
 *     while k>=0:
 *         sum = (B[0])[k]
 *         for j in range(k+1,n):             # <<<<<<<<<<<<<<
 *             sum=sum-(A[0])[k][j]*(B[0])[j]
 * 
 */
    __pyx_t_2 = __pyx_v_n;
    for (__pyx_t_3 = (__pyx_v_k + 1); __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
      __pyx_v_j = __pyx_t_3;

      /* "Pythonreflectivity.pyx":1579
 *         sum = (B[0])[k]
 *         for j in range(k+1,n):
 *             sum=sum-(A[0])[k][j]*(B[0])[j]             # <<<<<<<<<<<<<<
 * 
 *         (B[0])[k]=sum/(A[0])[k][k]
 */
      __pyx_v_sum = __Pyx_c_diff(__pyx_v_sum, __Pyx_c_prod((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_j]), ((__pyx_v_B[0])[__pyx_v_j])));
    }

    /* "Pythonreflectivity.pyx":1581
 *             sum=sum-(A[0])[k][j]*(B[0])[j]
 * 
 *         (B[0])[k]=sum/(A[0])[k][k]             # <<<<<<<<<<<<<<
 *         k=k-1
 * 
 */
    if (unlikely(__Pyx_c_is_zero((((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_k])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_B[0])[__pyx_v_k]) = __Pyx_c_quot(__pyx_v_sum, (((__pyx_v_A[0])[__pyx_v_k])[__pyx_v_k]));

    /* "Pythonreflectivity.pyx":1582
 * 
 *         (B[0])[k]=sum/(A[0])[k][k]
 *         k=k-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_k = (__pyx_v_k - 1);
  }

  /* "Pythonreflectivity.pyx":1561
 *     (A[0])[1][1]=R22
 * 
 * cdef void Elimination_4x4(double complex (*A)[4][4], double complex (*B)[4]):             # <<<<<<<<<<<<<<
 *      # Calculates for matrix a and vector b the solution of the system of equations ax=b and stores the result in b.
 *     cdef double complex x, sum
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.Elimination_4x4", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1585
 * 
 * 
 * cdef void Calculate_rt(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

static void __pyx_f_18Pythonreflectivity_Calculate_rt(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], __pyx_t_double_complex (*__pyx_v_r)[2][2], __pyx_t_double_complex (*__pyx_v_rprime)[2][2], __pyx_t_double_complex (*__pyx_v_t)[2][2], __pyx_t_double_complex (*__pyx_v_tprime)[2][2], int __pyx_v_Magnetic, __pyx_t_double_complex __pyx_v_vz1, __pyx_t_double_complex __pyx_v_vz2, __pyx_t_double_complex __pyx_v_vz3, __pyx_t_double_complex __pyx_v_vz4, double __pyx_v_sigma, double __pyx_v_k0) {
  __pyx_t_double_complex __pyx_v_J[2][4];
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_div;
  double __pyx_v_roughfac;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Calculate_rt", 0);

  /* "Pythonreflectivity.pyx":1590
 *     cdef double complex J[2][4]
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma*  k0)             # <<<<<<<<<<<<<<
 *   #  cdef double complex roughplus=exp(roughfac*cquadr(vz1+vz2))
 *   #  cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 */
  __pyx_v_roughfac = (-0.5 * __pyx_f_18Pythonreflectivity_quadr((__pyx_v_sigma * __pyx_v_k0)));

  /* "Pythonreflectivity.pyx":1594
 *   #  cdef double complex roughminus=exp(roughfac*cquadr(vz1-vz2))
 * 
 *     if(Magnetic):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = (__pyx_v_Magnetic != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1598
 * 
 * 
 *         b=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI1[0])[3])), ((__pyx_v_PSI1[0])[0]));

    /* "Pythonreflectivity.pyx":1599
 * 
 *         b=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[0]
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI1[0])[2])), __Pyx_c_prod(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1])));

    /* "Pythonreflectivity.pyx":1600
 *         b=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[0]
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":1601
 *         d=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":1605
 * 
 * 
 *         b=(PHI2[0])[0]*(PSI2[0])[0]+(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PSI2[0])[0])), ((__pyx_v_PSI2[0])[3]));

    /* "Pythonreflectivity.pyx":1606
 * 
 *         b=(PHI2[0])[0]*(PSI2[0])[0]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2])), __Pyx_c_prod(((__pyx_v_PSI2[0])[1]), ((__pyx_v_PHI2[0])[1])));

    /* "Pythonreflectivity.pyx":1607
 *         b=(PHI2[0])[0]*(PSI2[0])[0]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":1608
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[1]*(PHI2[0])[1]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":1611
 * 
 * 
 *         b=(PHI2[0])[0]*(PSI1[0])[0]+(PSI1[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PSI1[0])[0])), ((__pyx_v_PSI1[0])[3]));

    /* "Pythonreflectivity.pyx":1612
 * 
 *         b=(PHI2[0])[0]*(PSI1[0])[0]+(PSI1[0])[3]
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]             # <<<<<<<<<<<<<<
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PSI1[0])[1])), __Pyx_c_prod(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI1[0])[2])));

    /* "Pythonreflectivity.pyx":1613
 *         b=(PHI2[0])[0]*(PSI1[0])[0]+(PSI1[0])[3]
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))             # <<<<<<<<<<<<<<
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 */
    ((__pyx_v_J[0])[1]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":1614
 *         d=(PHI2[0])[1]*(PSI1[0])[1]+(PHI2[0])[2]*(PSI1[0])[2]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))             # <<<<<<<<<<<<<<
 * 
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]
 */
    ((__pyx_v_J[0])[3]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":1616
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI2[0])[3])), ((__pyx_v_PSI2[0])[0]));

    /* "Pythonreflectivity.pyx":1617
 * 
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]             # <<<<<<<<<<<<<<
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[1]), ((__pyx_v_PSI2[0])[1])), __Pyx_c_prod(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI2[0])[2])));

    /* "Pythonreflectivity.pyx":1618
 *         b=(PHI1[0])[3]*(PSI2[0])[3]+(PSI2[0])[0]
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))             # <<<<<<<<<<<<<<
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 * 
 */
    ((__pyx_v_J[1])[0]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz2, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":1619
 *         d=(PHI1[0])[1]*(PSI2[0])[1]+(PHI1[0])[2]*(PSI2[0])[2]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))             # <<<<<<<<<<<<<<
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])
 */
    ((__pyx_v_J[1])[2]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz2, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":1621
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])             # <<<<<<<<<<<<<<
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 */
    __pyx_v_div = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[0])), __Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[0])));

    /* "Pythonreflectivity.pyx":1623
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 */
    __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[2])), __Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[2])));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1624
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 */
    __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[3])), __Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[3])));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[0])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1625
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 * 
 */
    __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[2])), __Pyx_c_prod(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[2])));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1625; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[1])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1626
 *         (r[0])[0][1]=(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[3])), __Pyx_c_prod(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[3])));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1630
 * 
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1631
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[0])[1]));

    /* "Pythonreflectivity.pyx":1632
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[1])[0]));

    /* "Pythonreflectivity.pyx":1633
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         (tprime[0])[0][0]=-J[1][1]/div
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1635
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         (tprime[0])[0][0]=-J[1][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=J[0][1]/div
 *         (tprime[0])[1][0]=J[1][0]/div
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[1])[1]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1636
 * 
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=J[0][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[0])[1]) = __Pyx_c_quot(((__pyx_v_J[0])[1]), __pyx_v_div);

    /* "Pythonreflectivity.pyx":1637
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=J[0][1]/div
 *         (tprime[0])[1][0]=J[1][0]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[1])[0]) = __Pyx_c_quot(((__pyx_v_J[1])[0]), __pyx_v_div);

    /* "Pythonreflectivity.pyx":1638
 *         (tprime[0])[0][1]=J[0][1]/div
 *         (tprime[0])[1][0]=J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div             # <<<<<<<<<<<<<<
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[0])[0]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":1640
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":1641
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[1])));

    /* "Pythonreflectivity.pyx":1642
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":1643
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1])));
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":1648
 *     else:
 * 
 *         b=(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 */
    __pyx_v_b = ((__pyx_v_PSI1[0])[0]);

    /* "Pythonreflectivity.pyx":1649
 * 
 *         b=(PSI1[0])[0]
 *         d=(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_d = __Pyx_c_prod(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":1651
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":1652
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":1655
 * 
 * 
 *         b=(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = ((__pyx_v_PSI2[0])[3]);

    /* "Pythonreflectivity.pyx":1656
 * 
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_prod(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2]));

    /* "Pythonreflectivity.pyx":1657
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":1658
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":1661
 * 
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[0])[2]));
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[0])[0])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1662
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 */
    (((__pyx_v_r[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1663
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 * 
 */
    (((__pyx_v_r[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1664
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[1])[3]));
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[1])[1])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1667
 * 
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1668
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1669
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1670
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1])), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1672
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[0])[0])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":1673
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 */
    (((__pyx_v_tprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1674
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 * 
 */
    (((__pyx_v_tprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1675
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[1])[1])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":1682
 * #        (rprime[0])[1][0]=0
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0]));

    /* "Pythonreflectivity.pyx":1683
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1684
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1685
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1]));
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":1585
 * 
 * 
 * cdef void Calculate_rt(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.Calculate_rt", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1687
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):             # <<<<<<<<<<<<<<
 *     return sqrt(  cquadr(res-D21)/4.+cquadr(D31)*eyy  )
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_rootfunc(__pyx_t_double_complex __pyx_v_res, __pyx_t_double_complex __pyx_v_D21, __pyx_t_double_complex __pyx_v_D31, __pyx_t_double_complex __pyx_v_eyy) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rootfunc", 0);

  /* "Pythonreflectivity.pyx":1688
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):
 *     return sqrt(  cquadr(res-D21)/4.+cquadr(D31)*eyy  )             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_res, __pyx_v_D21));
  __pyx_t_2 = __pyx_t_double_complex_from_parts(4., 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_2))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_r = sqrt(__Pyx_c_sum(__Pyx_c_quot(__pyx_t_1, __pyx_t_2), __Pyx_c_prod(__pyx_f_18Pythonreflectivity_cquadr(__pyx_v_D31), __pyx_v_eyy)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":1687
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 * cdef  inline double complex rootfunc(double complex res, double complex D21, double complex D31, double complex eyy):             # <<<<<<<<<<<<<<
 *     return sqrt(  cquadr(res-D21)/4.+cquadr(D31)*eyy  )
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.rootfunc", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = __pyx_t_double_complex_from_parts(0, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":1691
 * 
 * 
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

static void __pyx_f_18Pythonreflectivity_PHI_to_PSI(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], int __pyx_v_previously_magnetic) {
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PHI_to_PSI", 0);

  /* "Pythonreflectivity.pyx":1693
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):
 *     cdef double complex b,d
 *     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 */
  __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1694
 *     cdef double complex b,d
 *     if(previously_magnetic):
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)             # <<<<<<<<<<<<<<
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 * 
 */
    __pyx_v_b = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PHI2[0])[0])), __pyx_t_double_complex_from_parts(1, 0)));

    /* "Pythonreflectivity.pyx":1695
 *     if(previously_magnetic):
 *         b=2*((PHI1[0])[3]*(PHI2[0])[0]-1)
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])             # <<<<<<<<<<<<<<
 * 
 *         (PSI1[0])[0]=-1.0/b
 */
    __pyx_v_d = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PHI2[0])[1])), __Pyx_c_prod(((__pyx_v_PHI1[0])[1]), ((__pyx_v_PHI2[0])[2]))));

    /* "Pythonreflectivity.pyx":1697
 *         d=2*((PHI1[0])[2]*(PHI2[0])[1]-(PHI1[0])[1]*(PHI2[0])[2])
 * 
 *         (PSI1[0])[0]=-1.0/b             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d
 *         (PSI1[0])[2]=(PHI2[0])[1]/d
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(-1.0, 0);
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":1698
 * 
 *         (PSI1[0])[0]=-1.0/b
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=(PHI2[0])[1]/d
 *         (PSI1[0])[3]=(PHI2[0])[0]/b
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_PHI2[0])[2]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":1699
 *         (PSI1[0])[0]=-1.0/b
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d
 *         (PSI1[0])[2]=(PHI2[0])[1]/d             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=(PHI2[0])[0]/b
 * 
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[2]) = __Pyx_c_quot(((__pyx_v_PHI2[0])[1]), __pyx_v_d);

    /* "Pythonreflectivity.pyx":1700
 *         (PSI1[0])[1]=-(PHI2[0])[2]/d
 *         (PSI1[0])[2]=(PHI2[0])[1]/d
 *         (PSI1[0])[3]=(PHI2[0])[0]/b             # <<<<<<<<<<<<<<
 * 
 *         (PSI2[0])[0]=(PHI1[0])[3]/b
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[3]) = __Pyx_c_quot(((__pyx_v_PHI2[0])[0]), __pyx_v_b);

    /* "Pythonreflectivity.pyx":1702
 *         (PSI1[0])[3]=(PHI2[0])[0]/b
 * 
 *         (PSI2[0])[0]=(PHI1[0])[3]/b             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=(PHI1[0])[2]/d
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[0]) = __Pyx_c_quot(((__pyx_v_PHI1[0])[3]), __pyx_v_b);

    /* "Pythonreflectivity.pyx":1703
 * 
 *         (PSI2[0])[0]=(PHI1[0])[3]/b
 *         (PSI2[0])[1]=(PHI1[0])[2]/d             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d
 *         (PSI2[0])[3]=-1.0/b
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[1]) = __Pyx_c_quot(((__pyx_v_PHI1[0])[2]), __pyx_v_d);

    /* "Pythonreflectivity.pyx":1704
 *         (PSI2[0])[0]=(PHI1[0])[3]/b
 *         (PSI2[0])[1]=(PHI1[0])[2]/d
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=-1.0/b
 *     else:
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_PHI1[0])[1]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":1705
 *         (PSI2[0])[1]=(PHI1[0])[2]/d
 *         (PSI2[0])[2]=-(PHI1[0])[1]/d
 *         (PSI2[0])[3]=-1.0/b             # <<<<<<<<<<<<<<
 *     else:
 *         (PSI1[0])[0]=0.5
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(-1.0, 0);
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[3]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_b);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":1707
 *         (PSI2[0])[3]=-1.0/b
 *     else:
 *         (PSI1[0])[0]=0.5             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 */
    ((__pyx_v_PSI1[0])[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":1708
 *     else:
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_PHI1[0])[1])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":1709
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 */
    ((__pyx_v_PSI1[0])[2]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1710
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 */
    ((__pyx_v_PSI1[0])[3]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1711
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_PHI2[0])[2])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_PHI2[0])[2]));

    /* "Pythonreflectivity.pyx":1712
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0
 */
    ((__pyx_v_PSI2[0])[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":1713
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[0]=0
 * 
 */
    ((__pyx_v_PSI2[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":1714
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_PSI2[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":1691
 * 
 * 
 * cdef void PHI_to_PSI(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.PHI_to_PSI", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1717
 * 
 * 
 * cdef void MagneticPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)
 */

static void __pyx_f_18Pythonreflectivity_MagneticPhi(__pyx_t_double_complex __pyx_v_epsxx, __pyx_t_double_complex __pyx_v_epsyy, __pyx_t_double_complex __pyx_v_epszz, __pyx_t_double_complex __pyx_v_epsg, __pyx_t_double_complex *__pyx_v_vz3, __pyx_t_double_complex *__pyx_v_vz4, __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], double __pyx_v_vy, double __pyx_v_vyvy) {
  __pyx_t_double_complex __pyx_v_D34;
  __pyx_t_double_complex __pyx_v_D21;
  __pyx_t_double_complex __pyx_v_D31;
  __pyx_t_double_complex __pyx_v_exzexz;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_root;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MagneticPhi", 0);

  /* "Pythonreflectivity.pyx":1719
 * cdef void MagneticPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)             # <<<<<<<<<<<<<<
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy+exzexz/epszz
 */
  __pyx_v_exzexz = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_epsg);

  /* "Pythonreflectivity.pyx":1720
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)
 *     D34=1.-vyvy/epszz             # <<<<<<<<<<<<<<
 *     D21=epsxx-vyvy+exzexz/epszz
 *     D31=-vy*epsg/epszz
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_D34 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot(__pyx_t_1, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":1721
 *     exzexz=cquadr(epsg)
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy+exzexz/epszz             # <<<<<<<<<<<<<<
 *     D31=-vy*epsg/epszz
 * 
 */
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_D21 = __Pyx_c_sum(__Pyx_c_diff(__pyx_v_epsxx, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0)), __Pyx_c_quot(__pyx_v_exzexz, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":1722
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy+exzexz/epszz
 *     D31=-vy*epsg/epszz             # <<<<<<<<<<<<<<
 * 
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)
 */
  __pyx_t_1 = __Pyx_c_prod(__pyx_t_double_complex_from_parts((-__pyx_v_vy), 0), __pyx_v_epsg);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_D31 = __Pyx_c_quot(__pyx_t_1, __pyx_v_epszz);

  /* "Pythonreflectivity.pyx":1724
 *     D31=-vy*epsg/epszz
 * 
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)             # <<<<<<<<<<<<<<
 *     d=epsyy*epsxx-vyvy*(epsxx*epsyy/epszz+epsyy)+(exzexz+quadr(vyvy))*epsyy/epszz
 *     root=sqrt(b*b-4*d)
 */
  __pyx_t_1 = __Pyx_c_neg(__pyx_v_exzexz);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_b = __Pyx_c_sum(__Pyx_c_diff(__Pyx_c_diff(__Pyx_c_quot(__pyx_t_1, __pyx_v_epszz), __pyx_v_epsyy), __pyx_v_epsxx), __Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0), __Pyx_c_sum(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_quot(__pyx_v_epsyy, __pyx_v_epszz))));

  /* "Pythonreflectivity.pyx":1725
 * 
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)
 *     d=epsyy*epsxx-vyvy*(epsxx*epsyy/epszz+epsyy)+(exzexz+quadr(vyvy))*epsyy/epszz             # <<<<<<<<<<<<<<
 *     root=sqrt(b*b-4*d)
 * 
 */
  __pyx_t_1 = __Pyx_c_prod(__pyx_v_epsxx, __pyx_v_epsyy);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_2 = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_exzexz, __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr(__pyx_v_vyvy), 0)), __pyx_v_epsyy);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_d = __Pyx_c_sum(__Pyx_c_diff(__Pyx_c_prod(__pyx_v_epsyy, __pyx_v_epsxx), __Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0), __Pyx_c_sum(__Pyx_c_quot(__pyx_t_1, __pyx_v_epszz), __pyx_v_epsyy))), __Pyx_c_quot(__pyx_t_2, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":1726
 *     b=-exzexz/epszz-epsyy-epsxx+vyvy*(1+epsyy/epszz)
 *     d=epsyy*epsxx-vyvy*(epsxx*epsyy/epszz+epsyy)+(exzexz+quadr(vyvy))*epsyy/epszz
 *     root=sqrt(b*b-4*d)             # <<<<<<<<<<<<<<
 * 
 *     vz3[0]=sqrt((-b-root)/2)
 */
  __pyx_v_root = sqrt(__Pyx_c_diff(__Pyx_c_prod(__pyx_v_b, __pyx_v_b), __Pyx_c_prod(__pyx_t_double_complex_from_parts(4, 0), __pyx_v_d)));

  /* "Pythonreflectivity.pyx":1728
 *     root=sqrt(b*b-4*d)
 * 
 *     vz3[0]=sqrt((-b-root)/2)             # <<<<<<<<<<<<<<
 *     vz4[0]=sqrt((-b+root)/2)
 * 
 */
  __pyx_t_2 = __Pyx_c_diff(__Pyx_c_neg(__pyx_v_b), __pyx_v_root);
  __pyx_t_1 = __pyx_t_double_complex_from_parts(2, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_1))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  (__pyx_v_vz3[0]) = sqrt(__Pyx_c_quot(__pyx_t_2, __pyx_t_1));

  /* "Pythonreflectivity.pyx":1729
 * 
 *     vz3[0]=sqrt((-b-root)/2)
 *     vz4[0]=sqrt((-b+root)/2)             # <<<<<<<<<<<<<<
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 */
  __pyx_t_1 = __Pyx_c_sum(__Pyx_c_neg(__pyx_v_b), __pyx_v_root);
  __pyx_t_2 = __pyx_t_double_complex_from_parts(2, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_2))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  (__pyx_v_vz4[0]) = sqrt(__Pyx_c_quot(__pyx_t_1, __pyx_t_2));

  /* "Pythonreflectivity.pyx":1731
 *     vz4[0]=sqrt((-b+root)/2)
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31
 */
  ((__pyx_v_PHI1[0])[0]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1732
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]             # <<<<<<<<<<<<<<
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy
 */
  ((__pyx_v_PHI1[0])[1]) = (__pyx_v_vz3[0]);

  /* "Pythonreflectivity.pyx":1733
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31             # <<<<<<<<<<<<<<
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy
 * 
 */
  __pyx_t_2 = __Pyx_c_neg(__Pyx_c_diff(__pyx_f_18Pythonreflectivity_cquadr((__pyx_v_vz3[0])), __pyx_v_D21));
  if (unlikely(__Pyx_c_is_zero(__pyx_v_D31))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1733; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI1[0])[3]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_D31);

  /* "Pythonreflectivity.pyx":1734
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[3]=-(cquadr(vz3[0])-D21)/D31
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy             # <<<<<<<<<<<<<<
 * 
 *     (PHI2[0])[3]=1.
 */
  __pyx_t_2 = __Pyx_c_prod(((__pyx_v_PHI1[0])[3]), (__pyx_v_vz3[0]));
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epsyy))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI1[0])[2]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":1736
 *     (PHI1[0])[2]=(PHI1[0])[3]*vz3[0]/epsyy
 * 
 *     (PHI2[0])[3]=1.             # <<<<<<<<<<<<<<
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31
 */
  ((__pyx_v_PHI2[0])[3]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1737
 * 
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy             # <<<<<<<<<<<<<<
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31
 *     (PHI2[0])[1]=(PHI2[0])[0]*vz4[0]
 */
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epsyy))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI2[0])[2]) = __Pyx_c_quot((__pyx_v_vz4[0]), __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":1738
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31             # <<<<<<<<<<<<<<
 *     (PHI2[0])[1]=(PHI2[0])[0]*vz4[0]
 * 
 */
  __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod((__pyx_v_vz4[0]), ((__pyx_v_PHI2[0])[2])), __pyx_v_D34);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_D31))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI2[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_D31);

  /* "Pythonreflectivity.pyx":1739
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=(vz4[0]*(PHI2[0])[2]-D34)/D31
 *     (PHI2[0])[1]=(PHI2[0])[0]*vz4[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_PHI2[0])[1]) = __Pyx_c_prod(((__pyx_v_PHI2[0])[0]), (__pyx_v_vz4[0]));

  /* "Pythonreflectivity.pyx":1717
 * 
 * 
 * cdef void MagneticPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D31, exzexz, b, d, root
 *     exzexz=cquadr(epsg)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.MagneticPhi", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1742
 * 
 * 
 * cdef void NormalPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vyvy):             # <<<<<<<<<<<<<<
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)
 */

static void __pyx_f_18Pythonreflectivity_NormalPhi(__pyx_t_double_complex __pyx_v_epsxx, __pyx_t_double_complex __pyx_v_epsyy, __pyx_t_double_complex __pyx_v_epszz, __pyx_t_double_complex *__pyx_v_vz3, __pyx_t_double_complex *__pyx_v_vz4, __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], double __pyx_v_vyvy) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("NormalPhi", 0);

  /* "Pythonreflectivity.pyx":1744
 * cdef void NormalPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vyvy):
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)             # <<<<<<<<<<<<<<
 *     vz4[0]=CalculateVZpi(vyvy, epsyy, epszz)
 *  #   print "2"
 */
  (__pyx_v_vz3[0]) = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, __pyx_v_epsxx);

  /* "Pythonreflectivity.pyx":1745
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)
 *     vz4[0]=CalculateVZpi(vyvy, epsyy, epszz)             # <<<<<<<<<<<<<<
 *  #   print "2"
 *     (PHI1[0])[0]=1. #Eigenvectors
 */
  (__pyx_v_vz4[0]) = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, __pyx_v_epsyy, __pyx_v_epszz);

  /* "Pythonreflectivity.pyx":1747
 *     vz4[0]=CalculateVZpi(vyvy, epsyy, epszz)
 *  #   print "2"
 *     (PHI1[0])[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=0
 */
  ((__pyx_v_PHI1[0])[0]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1748
 *  #   print "2"
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]             # <<<<<<<<<<<<<<
 *     (PHI1[0])[2]=0
 *     (PHI1[0])[3]=0
 */
  ((__pyx_v_PHI1[0])[1]) = (__pyx_v_vz3[0]);

  /* "Pythonreflectivity.pyx":1749
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=0             # <<<<<<<<<<<<<<
 *     (PHI1[0])[3]=0
 *     (PHI2[0])[3]=1.
 */
  ((__pyx_v_PHI1[0])[2]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1750
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=0
 *     (PHI1[0])[3]=0             # <<<<<<<<<<<<<<
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy
 */
  ((__pyx_v_PHI1[0])[3]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1751
 *     (PHI1[0])[2]=0
 *     (PHI1[0])[3]=0
 *     (PHI2[0])[3]=1.             # <<<<<<<<<<<<<<
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=0
 */
  ((__pyx_v_PHI2[0])[3]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":1752
 *     (PHI1[0])[3]=0
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy             # <<<<<<<<<<<<<<
 *     (PHI2[0])[0]=0
 *     (PHI2[0])[1]=0
 */
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epsyy))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1752; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI2[0])[2]) = __Pyx_c_quot((__pyx_v_vz4[0]), __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":1753
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=0             # <<<<<<<<<<<<<<
 *     (PHI2[0])[1]=0
 * 
 */
  ((__pyx_v_PHI2[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1754
 *     (PHI2[0])[2]=vz4[0]/epsyy
 *     (PHI2[0])[0]=0
 *     (PHI2[0])[1]=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_PHI2[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1742
 * 
 * 
 * cdef void NormalPhi(double complex epsxx, double complex epsyy, double complex epszz, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vyvy):             # <<<<<<<<<<<<<<
 *  #   print "1"
 *     vz3[0]=CalculateVZsigma(vyvy, epsxx)
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.NormalPhi", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1757
 * 
 * 
 * cdef void Calculate_ANXBN(double complex (*A)[2][2], double complex (*B)[2][2], double complex (*X)[2][2], int N):             # <<<<<<<<<<<<<<
 *     cdef int expite;
 *     cdef int i,j;
 */

static void __pyx_f_18Pythonreflectivity_Calculate_ANXBN(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2], __pyx_t_double_complex (*__pyx_v_X)[2][2], int __pyx_v_N) {
  int __pyx_v_expite;
  int __pyx_v_i;
  int __pyx_v_j;
  __pyx_t_double_complex __pyx_v_resA[2][2];
  __pyx_t_double_complex __pyx_v_resB[2][2];
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("Calculate_ANXBN", 0);

  /* "Pythonreflectivity.pyx":1762
 *     cdef double complex  resA[2][2];
 *     cdef double complex  resB[2][2];
 *     expite=N;             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_expite = __pyx_v_N;

  /* "Pythonreflectivity.pyx":1765
 * 
 * 
 *     for i in range(2):             # <<<<<<<<<<<<<<
 *         for j in range(2):
 *             if(i==j):
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "Pythonreflectivity.pyx":1766
 * 
 *     for i in range(2):
 *         for j in range(2):             # <<<<<<<<<<<<<<
 *             if(i==j):
 *                 resA[i][j]=1;
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 2; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "Pythonreflectivity.pyx":1767
 *     for i in range(2):
 *         for j in range(2):
 *             if(i==j):             # <<<<<<<<<<<<<<
 *                 resA[i][j]=1;
 *                 resB[i][j]=1;
 */
      __pyx_t_3 = ((__pyx_v_i == __pyx_v_j) != 0);
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":1768
 *         for j in range(2):
 *             if(i==j):
 *                 resA[i][j]=1;             # <<<<<<<<<<<<<<
 *                 resB[i][j]=1;
 *             else:
 */
        ((__pyx_v_resA[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(1, 0);

        /* "Pythonreflectivity.pyx":1769
 *             if(i==j):
 *                 resA[i][j]=1;
 *                 resB[i][j]=1;             # <<<<<<<<<<<<<<
 *             else:
 *                 resA[i][j]=0;
 */
        ((__pyx_v_resB[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(1, 0);
        goto __pyx_L7;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1771
 *                 resB[i][j]=1;
 *             else:
 *                 resA[i][j]=0;             # <<<<<<<<<<<<<<
 *                 resB[i][j]=0;
 * 
 */
        ((__pyx_v_resA[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":1772
 *             else:
 *                 resA[i][j]=0;
 *                 resB[i][j]=0;             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_resB[__pyx_v_i])[__pyx_v_j]) = __pyx_t_double_complex_from_parts(0, 0);
      }
      __pyx_L7:;
    }
  }

  /* "Pythonreflectivity.pyx":1777
 * 
 * 
 *     while(expite):             # <<<<<<<<<<<<<<
 *         if (expite%2):
 *             Mult2x2_leftside(&resA, A);
 */
  while (1) {
    __pyx_t_3 = (__pyx_v_expite != 0);
    if (!__pyx_t_3) break;

    /* "Pythonreflectivity.pyx":1778
 * 
 *     while(expite):
 *         if (expite%2):             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&resA, A);
 *             Mult2x2_leftside(&resB, B);
 */
    __pyx_t_3 = (__Pyx_mod_long(__pyx_v_expite, 2) != 0);
    if (__pyx_t_3) {

      /* "Pythonreflectivity.pyx":1779
 *     while(expite):
 *         if (expite%2):
 *             Mult2x2_leftside(&resA, A);             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&resB, B);
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_resA), __pyx_v_A);

      /* "Pythonreflectivity.pyx":1780
 *         if (expite%2):
 *             Mult2x2_leftside(&resA, A);
 *             Mult2x2_leftside(&resB, B);             # <<<<<<<<<<<<<<
 * 
 *         expite = expite/2
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_resB), __pyx_v_B);
      goto __pyx_L10;
    }
    __pyx_L10:;

    /* "Pythonreflectivity.pyx":1782
 *             Mult2x2_leftside(&resB, B);
 * 
 *         expite = expite/2             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(A, A);
 *         Mult2x2_leftside(B, B);
 */
    __pyx_v_expite = __Pyx_div_long(__pyx_v_expite, 2);

    /* "Pythonreflectivity.pyx":1783
 * 
 *         expite = expite/2
 *         Mult2x2_leftside(A, A);             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(B, B);
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_A, __pyx_v_A);

    /* "Pythonreflectivity.pyx":1784
 *         expite = expite/2
 *         Mult2x2_leftside(A, A);
 *         Mult2x2_leftside(B, B);             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_B, __pyx_v_B);
  }

  /* "Pythonreflectivity.pyx":1787
 * 
 * 
 *     for i in range(2):             # <<<<<<<<<<<<<<
 *         for j in range(2):
 *             (A[0])[i][j]=resA[i][j];
 */
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "Pythonreflectivity.pyx":1788
 * 
 *     for i in range(2):
 *         for j in range(2):             # <<<<<<<<<<<<<<
 *             (A[0])[i][j]=resA[i][j];
 *             (B[0])[i][j]=resB[i][j];
 */
    for (__pyx_t_2 = 0; __pyx_t_2 < 2; __pyx_t_2+=1) {
      __pyx_v_j = __pyx_t_2;

      /* "Pythonreflectivity.pyx":1789
 *     for i in range(2):
 *         for j in range(2):
 *             (A[0])[i][j]=resA[i][j];             # <<<<<<<<<<<<<<
 *             (B[0])[i][j]=resB[i][j];
 * 
 */
      (((__pyx_v_A[0])[__pyx_v_i])[__pyx_v_j]) = ((__pyx_v_resA[__pyx_v_i])[__pyx_v_j]);

      /* "Pythonreflectivity.pyx":1790
 *         for j in range(2):
 *             (A[0])[i][j]=resA[i][j];
 *             (B[0])[i][j]=resB[i][j];             # <<<<<<<<<<<<<<
 * 
 * 
 */
      (((__pyx_v_B[0])[__pyx_v_i])[__pyx_v_j]) = ((__pyx_v_resB[__pyx_v_i])[__pyx_v_j]);
    }
  }

  /* "Pythonreflectivity.pyx":1793
 * 
 * 
 *     Mult2x2_leftside(X, B)             # <<<<<<<<<<<<<<
 *     Mult2x2_rightside(A, X)
 * 
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_X, __pyx_v_B);

  /* "Pythonreflectivity.pyx":1794
 * 
 *     Mult2x2_leftside(X, B)
 *     Mult2x2_rightside(A, X)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_A, __pyx_v_X);

  /* "Pythonreflectivity.pyx":1757
 * 
 * 
 * cdef void Calculate_ANXBN(double complex (*A)[2][2], double complex (*B)[2][2], double complex (*X)[2][2], int N):             # <<<<<<<<<<<<<<
 *     cdef int expite;
 *     cdef int i,j;
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1799
 * 
 * 
 * cdef void Calculate_Multilayer_equation(double complex  (*A)[2][2], double complex  (*B)[2][2], double complex (*X)[2][2], double complex  (*result)[2][2], int N):             # <<<<<<<<<<<<<<
 *     # This function calculates efficiently
 *     # X + AXB + A^2 X B^2 + ... + A^(N-1) X B^(N-1)
 */

static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation(__pyx_t_double_complex (*__pyx_v_A)[2][2], __pyx_t_double_complex (*__pyx_v_B)[2][2], __pyx_t_double_complex (*__pyx_v_X)[2][2], __pyx_t_double_complex (*__pyx_v_result)[2][2], int __pyx_v_N) {
  __pyx_t_double_complex __pyx_v_EliB[4];
  __pyx_t_double_complex __pyx_v_Mat[4][4];
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  __Pyx_RefNannySetupContext("Calculate_Multilayer_equation", 0);

  /* "Pythonreflectivity.pyx":1809
 * 
 * 
 *     Mat[0][0]=1-(A[0])[0][0]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];
 */
  ((__pyx_v_Mat[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[0])[0])));

  /* "Pythonreflectivity.pyx":1810
 * 
 *     Mat[0][0]=1-(A[0])[0][0]*(B[0])[0][0];
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];
 */
  ((__pyx_v_Mat[0])[1]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[0])[0])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1811
 *     Mat[0][0]=1-(A[0])[0][0]*(B[0])[0][0];
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];
 * 
 */
  ((__pyx_v_Mat[0])[2]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[0])[0]));

  /* "Pythonreflectivity.pyx":1812
 *     Mat[0][1]= -(A[0])[0][0]*(B[0])[1][0];
 *     Mat[0][2]= -(A[0])[0][1]*(B[0])[0][0];
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 * 
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[0])[3]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1814
 *     Mat[0][3]= -(A[0])[0][1]*(B[0])[1][0];
 * 
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[1])[0]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[0])[0])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1815
 * 
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];
 */
  ((__pyx_v_Mat[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod((((__pyx_v_A[0])[0])[0]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1816
 *     Mat[1][0]= -(A[0])[0][0]*(B[0])[0][1];
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];
 * 
 */
  ((__pyx_v_Mat[1])[2]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1817
 *     Mat[1][1]=1-(A[0])[0][0]*(B[0])[1][1];
 *     Mat[1][2]= -(A[0])[0][1]*(B[0])[0][1];
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 * 
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];
 */
  ((__pyx_v_Mat[1])[3]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[0])[1])), (((__pyx_v_B[0])[1])[1]));

  /* "Pythonreflectivity.pyx":1819
 *     Mat[1][3]= -(A[0])[0][1]*(B[0])[1][1];
 * 
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];
 */
  ((__pyx_v_Mat[2])[0]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[0])[0]));

  /* "Pythonreflectivity.pyx":1820
 * 
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];
 */
  ((__pyx_v_Mat[2])[1]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1821
 *     Mat[2][0]= -(A[0])[1][0]*(B[0])[0][0];
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];             # <<<<<<<<<<<<<<
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];
 * 
 */
  ((__pyx_v_Mat[2])[2]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[0])[0])));

  /* "Pythonreflectivity.pyx":1822
 *     Mat[2][1]= -(A[0])[1][0]*(B[0])[1][0];
 *     Mat[2][2]=1-(A[0])[1][1]*(B[0])[0][0];
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];             # <<<<<<<<<<<<<<
 * 
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[2])[3]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[1])[1])), (((__pyx_v_B[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1824
 *     Mat[2][3]= -(A[0])[1][1]*(B[0])[1][0];
 * 
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];
 */
  ((__pyx_v_Mat[3])[0]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1825
 * 
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];
 *     Mat[3][3]=1-(A[0])[1][1]*(B[0])[1][1];
 */
  ((__pyx_v_Mat[3])[1]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[1])[0])), (((__pyx_v_B[0])[1])[1]));

  /* "Pythonreflectivity.pyx":1826
 *     Mat[3][0]= -(A[0])[1][0]*(B[0])[0][1];
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];             # <<<<<<<<<<<<<<
 *     Mat[3][3]=1-(A[0])[1][1]*(B[0])[1][1];
 * 
 */
  ((__pyx_v_Mat[3])[2]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_A[0])[1])[1])), (((__pyx_v_B[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1827
 *     Mat[3][1]= -(A[0])[1][0]*(B[0])[1][1];
 *     Mat[3][2]= -(A[0])[1][1]*(B[0])[0][1];
 *     Mat[3][3]=1-(A[0])[1][1]*(B[0])[1][1];             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_Mat[3])[3]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod((((__pyx_v_A[0])[1])[1]), (((__pyx_v_B[0])[1])[1])));

  /* "Pythonreflectivity.pyx":1831
 * 
 * 
 *     EliB[0]=(X[0])[0][0];             # <<<<<<<<<<<<<<
 *     EliB[1]=(X[0])[0][1];
 *     EliB[2]=(X[0])[1][0];
 */
  (__pyx_v_EliB[0]) = (((__pyx_v_X[0])[0])[0]);

  /* "Pythonreflectivity.pyx":1832
 * 
 *     EliB[0]=(X[0])[0][0];
 *     EliB[1]=(X[0])[0][1];             # <<<<<<<<<<<<<<
 *     EliB[2]=(X[0])[1][0];
 *     EliB[3]=(X[0])[1][1];
 */
  (__pyx_v_EliB[1]) = (((__pyx_v_X[0])[0])[1]);

  /* "Pythonreflectivity.pyx":1833
 *     EliB[0]=(X[0])[0][0];
 *     EliB[1]=(X[0])[0][1];
 *     EliB[2]=(X[0])[1][0];             # <<<<<<<<<<<<<<
 *     EliB[3]=(X[0])[1][1];
 *     Calculate_ANXBN(A, B, X, N);
 */
  (__pyx_v_EliB[2]) = (((__pyx_v_X[0])[1])[0]);

  /* "Pythonreflectivity.pyx":1834
 *     EliB[1]=(X[0])[0][1];
 *     EliB[2]=(X[0])[1][0];
 *     EliB[3]=(X[0])[1][1];             # <<<<<<<<<<<<<<
 *     Calculate_ANXBN(A, B, X, N);
 * 
 */
  (__pyx_v_EliB[3]) = (((__pyx_v_X[0])[1])[1]);

  /* "Pythonreflectivity.pyx":1835
 *     EliB[2]=(X[0])[1][0];
 *     EliB[3]=(X[0])[1][1];
 *     Calculate_ANXBN(A, B, X, N);             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_18Pythonreflectivity_Calculate_ANXBN(__pyx_v_A, __pyx_v_B, __pyx_v_X, __pyx_v_N);

  /* "Pythonreflectivity.pyx":1840
 * 
 * 
 *     EliB[0]-=(X[0])[0][0];             # <<<<<<<<<<<<<<
 *     EliB[1]-=(X[0])[0][1];
 *     EliB[2]-=(X[0])[1][0];
 */
  __pyx_t_1 = 0;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[0])[0]));

  /* "Pythonreflectivity.pyx":1841
 * 
 *     EliB[0]-=(X[0])[0][0];
 *     EliB[1]-=(X[0])[0][1];             # <<<<<<<<<<<<<<
 *     EliB[2]-=(X[0])[1][0];
 *     EliB[3]-=(X[0])[1][1];
 */
  __pyx_t_1 = 1;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[0])[1]));

  /* "Pythonreflectivity.pyx":1842
 *     EliB[0]-=(X[0])[0][0];
 *     EliB[1]-=(X[0])[0][1];
 *     EliB[2]-=(X[0])[1][0];             # <<<<<<<<<<<<<<
 *     EliB[3]-=(X[0])[1][1];
 *    # printf("EliB: \n");
 */
  __pyx_t_1 = 2;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[1])[0]));

  /* "Pythonreflectivity.pyx":1843
 *     EliB[1]-=(X[0])[0][1];
 *     EliB[2]-=(X[0])[1][0];
 *     EliB[3]-=(X[0])[1][1];             # <<<<<<<<<<<<<<
 *    # printf("EliB: \n");
 * #    PrintComplex((*X)[0][0]);
 */
  __pyx_t_1 = 3;
  (__pyx_v_EliB[__pyx_t_1]) = __Pyx_c_diff((__pyx_v_EliB[__pyx_t_1]), (((__pyx_v_X[0])[1])[1]));

  /* "Pythonreflectivity.pyx":1849
 * #    PrintComplex((*X)[1][0]);
 * #    PrintComplex((*X)[1][1]);
 *     Elimination_4x4(&Mat, &EliB);             # <<<<<<<<<<<<<<
 *     (result[0])[0][0]=EliB[0];
 *     (result[0])[0][1]=EliB[1];
 */
  __pyx_f_18Pythonreflectivity_Elimination_4x4((&__pyx_v_Mat), (&__pyx_v_EliB));

  /* "Pythonreflectivity.pyx":1850
 * #    PrintComplex((*X)[1][1]);
 *     Elimination_4x4(&Mat, &EliB);
 *     (result[0])[0][0]=EliB[0];             # <<<<<<<<<<<<<<
 *     (result[0])[0][1]=EliB[1];
 *     (result[0])[1][0]=EliB[2];
 */
  (((__pyx_v_result[0])[0])[0]) = (__pyx_v_EliB[0]);

  /* "Pythonreflectivity.pyx":1851
 *     Elimination_4x4(&Mat, &EliB);
 *     (result[0])[0][0]=EliB[0];
 *     (result[0])[0][1]=EliB[1];             # <<<<<<<<<<<<<<
 *     (result[0])[1][0]=EliB[2];
 *     (result[0])[1][1]=EliB[3];
 */
  (((__pyx_v_result[0])[0])[1]) = (__pyx_v_EliB[1]);

  /* "Pythonreflectivity.pyx":1852
 *     (result[0])[0][0]=EliB[0];
 *     (result[0])[0][1]=EliB[1];
 *     (result[0])[1][0]=EliB[2];             # <<<<<<<<<<<<<<
 *     (result[0])[1][1]=EliB[3];
 * 
 */
  (((__pyx_v_result[0])[1])[0]) = (__pyx_v_EliB[2]);

  /* "Pythonreflectivity.pyx":1853
 *     (result[0])[0][1]=EliB[1];
 *     (result[0])[1][0]=EliB[2];
 *     (result[0])[1][1]=EliB[3];             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (((__pyx_v_result[0])[1])[1]) = (__pyx_v_EliB[3]);

  /* "Pythonreflectivity.pyx":1799
 * 
 * 
 * cdef void Calculate_Multilayer_equation(double complex  (*A)[2][2], double complex  (*B)[2][2], double complex (*X)[2][2], double complex  (*result)[2][2], int N):             # <<<<<<<<<<<<<<
 *     # This function calculates efficiently
 *     # X + AXB + A^2 X B^2 + ... + A^(N-1) X B^(N-1)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":1858
 * 
 * 
 * cdef void Paratt_magnetic_y(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  long __pyx_t_9;
  long __pyx_t_10;
  long __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_y", 0);

  /* "Pythonreflectivity.pyx":1861
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1862
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":1864
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":1865
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1867
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":1868
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy);

  /* "Pythonreflectivity.pyx":1869
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":1870
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1871
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":1872
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":1873
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":1876
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":1898
 * 
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1899
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *   #  cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":1903
 *   #  cdef double complex test=LR[MLCOMP[0][0]].ey
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":1904
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":1906
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":1907
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==2): # magnetic
 * 
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":1908
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1910
 *         if(LR[Upper].magdir==2): # magnetic
 * 
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":1912
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)             # <<<<<<<<<<<<<<
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 */
      __pyx_v_b = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(__Pyx_c_prod((__pyx_v_PHI1[3]), (__pyx_v_PHI2[0])), __pyx_t_double_complex_from_parts(1, 0)));

      /* "Pythonreflectivity.pyx":1913
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])             # <<<<<<<<<<<<<<
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 */
      __pyx_v_d = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(__Pyx_c_prod((__pyx_v_PHI1[2]), (__pyx_v_PHI2[1])), __Pyx_c_prod((__pyx_v_PHI1[1]), (__pyx_v_PHI2[2]))));

      /* "Pythonreflectivity.pyx":1915
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors             # <<<<<<<<<<<<<<
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[0]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_b);

      /* "Pythonreflectivity.pyx":1916
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d             # <<<<<<<<<<<<<<
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b
 */
      __pyx_t_7 = __Pyx_c_neg((__pyx_v_PHI2[2]));
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_d);

      /* "Pythonreflectivity.pyx":1917
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d             # <<<<<<<<<<<<<<
 *             PSI1[3]=PHI2[0]/b
 * 
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[2]) = __Pyx_c_quot((__pyx_v_PHI2[1]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":1918
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b             # <<<<<<<<<<<<<<
 * 
 *             PSI2[0]=PHI1[3]/b
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1918; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[3]) = __Pyx_c_quot((__pyx_v_PHI2[0]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":1920
 *             PSI1[3]=PHI2[0]/b
 * 
 *             PSI2[0]=PHI1[3]/b             # <<<<<<<<<<<<<<
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1920; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[0]) = __Pyx_c_quot((__pyx_v_PHI1[3]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":1921
 * 
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d             # <<<<<<<<<<<<<<
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1921; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[1]) = __Pyx_c_quot((__pyx_v_PHI1[2]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":1922
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d             # <<<<<<<<<<<<<<
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 */
      __pyx_t_7 = __Pyx_c_neg((__pyx_v_PHI1[1]));
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_d);

      /* "Pythonreflectivity.pyx":1923
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b             # <<<<<<<<<<<<<<
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1923; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[3]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_b);

      /* "Pythonreflectivity.pyx":1924
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1925
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1926
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1927
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1928
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1929
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1930
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1931
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1933
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L5;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":1936
 *         else: # Not magnetic
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":1939
 * 
 * 
 *             PSI1[0]=0.5             # <<<<<<<<<<<<<<
 *             PSI1[1]=0.5/vz1
 *             PSI1[2]=0
 */
      (__pyx_v_PSI1[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":1940
 * 
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz1             # <<<<<<<<<<<<<<
 *             PSI1[2]=0
 *             PSI1[3]=0
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero(__pyx_v_vz1))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1940; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_vz1);

      /* "Pythonreflectivity.pyx":1941
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz1
 *             PSI1[2]=0             # <<<<<<<<<<<<<<
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 */
      (__pyx_v_PSI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1942
 *             PSI1[1]=0.5/vz1
 *             PSI1[2]=0
 *             PSI1[3]=0             # <<<<<<<<<<<<<<
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 */
      (__pyx_v_PSI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1943
 *             PSI1[2]=0
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]             # <<<<<<<<<<<<<<
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero((__pyx_v_PHI2[2])))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot(__pyx_t_7, (__pyx_v_PHI2[2]));

      /* "Pythonreflectivity.pyx":1944
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5             # <<<<<<<<<<<<<<
 *             PSI2[1]=0
 *             PSI2[0]=0
 */
      (__pyx_v_PSI2[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":1945
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 *             PSI2[1]=0             # <<<<<<<<<<<<<<
 *             PSI2[0]=0
 *         #Vacuum:
 */
      (__pyx_v_PSI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1946
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 *             PSI2[0]=0             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      (__pyx_v_PSI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1948
 *             PSI2[0]=0
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1949
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1950
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1951
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1952
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":1953
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":1954
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1955
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":1956
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     else:
 *         Lower=MLCOMP[0][0]
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
    }
    __pyx_L5:;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":1958
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 */
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":1959
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":1960
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 */
    __pyx_t_1 = ((((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2)) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":1961
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1963
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":1964
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L7;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1967
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":1968
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":1969
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==2):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":1971
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":1973
 *             if(LR[Upper].magdir==2):
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":1975
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":1978
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":1980
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":1982
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":1983
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":1987
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime,1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L6;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":1995
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
      __pyx_v_vz1 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex);

      /* "Pythonreflectivity.pyx":1996
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_v_vz2 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez);

      /* "Pythonreflectivity.pyx":1997
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_v_vz3 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex);

      /* "Pythonreflectivity.pyx":1998
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_v_vz4 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

      /* "Pythonreflectivity.pyx":1999
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2000
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2001
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2002
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2003
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2004
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":2005
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2006
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2008
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2009
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *          #   print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2014
 *          #   print k0, "1", LR[1].Thickness, vz3, vz4
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_7 = __Pyx_c_diff(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_8 = __Pyx_c_sum(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));

      /* "Pythonreflectivity.pyx":2015
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2016
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2017
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":2021
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":2022
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":2024
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2026
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2027
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2029
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":2031
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2032
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":2034
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2037
 *                   #  print "hallo"
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2038
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":2039
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L13;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2043
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2045
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2046
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
            goto __pyx_L14;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2049
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":2050
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2053
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2054
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2055
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2056
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2057
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2058
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2059
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2060
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2061
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2062
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L15;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2065
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":2068
 * 
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2070
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2072
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2074
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":2076
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":2077
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":2078
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":2079
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * #                Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":2098
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2099
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2100
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
        goto __pyx_L16;
      }
      __pyx_L16:;
      goto __pyx_L11;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":2107
 *         else: #A Multilayer
 *           #  print "1"
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":2109
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":2110
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2111
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==2):
 *                 ML_is_diagonal=0
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2112
 *             vz1=vz3
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2113
 *             vz2=vz4
 *             if(LR[Upper].magdir==2):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":2115
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2117
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 * 
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

        /* "Pythonreflectivity.pyx":2118
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L17;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2122
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2124
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2125
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L18;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2128
 *                 else:
 *                #     print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *          #   print "3"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":2129
 *                #     print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *          #   print "3"
 * #            print "t BA"
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":2141
 * #            print p[0][0]
 * #            print p[1][1]
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)
 * #            print "r_ML_in_1 ", 0
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2142
 * #            print p[1][1]
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)             # <<<<<<<<<<<<<<
 * #            print "r_ML_in_1 ", 0
 * #            print r_ML_in_1[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1));

      /* "Pythonreflectivity.pyx":2150
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2151
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             j=1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2153
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":2154
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2155
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_t_9 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_9, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":2156
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":2157
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":2158
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":2161
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2163
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2164
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2166
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":2167
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L21;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2170
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2172
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2173
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
            goto __pyx_L22;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2176
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * #                if(j==1):
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":2177
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * #                if(j==1):
 * #                    print "t CB"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":2186
 * #                print t[1][0]
 * #                print t[1][1]
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":2188
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2190
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":2192
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":2195
 * 
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":2196
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":2197
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * #                print "r_ML_in_1 ", j
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":2198
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * #                print "r_ML_in_1 ", j
 * #                print r_ML_in_1[0][0]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":2216
 *               #  print p[0][0]
 *             #    print p[1][1]
 *                 Mult2x2_leftside(&t_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2217
 *             #    print p[1][1]
 *                 Mult2x2_leftside(&t_ML_in_1, &p)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":2219
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":2220
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":2223
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *            #     if(j==1):
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2224
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *            #     if(j==1):
 *             #        print "p C components"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2229
 *             #        print Upper, LR[Upper].Thickness, vz3, vz4
 * 
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":2233
 * 
 * 
 *             if(ML_is_diagonal):             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 */
      __pyx_t_1 = (__pyx_v_ML_is_diagonal != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2234
 * 
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 * #                print "diagonal"
 */
        __pyx_t_7 = __Pyx_c_prod(((__pyx_v_r_ML_in_1[0])[0]), __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])), ((__pyx_v_MLREP[__pyx_v_i]) - 1))));
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2234; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        ((__pyx_v_r_ML_in_2[0])[0]) = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":2235
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])             # <<<<<<<<<<<<<<
 * #                print "diagonal"
 * #                print t_ML_in_1[0][0]
 */
        __pyx_t_8 = __Pyx_c_prod(((__pyx_v_r_ML_in_1[1])[1]), __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])), ((__pyx_v_MLREP[__pyx_v_i]) - 1))));
        __pyx_t_7 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2235; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        ((__pyx_v_r_ML_in_2[1])[1]) = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":2241
 * #                print t_ML_back_1[0][0]
 * #                print t_ML_back_1[1][1]
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 */
        ((__pyx_v_t_ML_in_1[0])[0]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":2242
 * #                print t_ML_back_1[1][1]
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 */
        ((__pyx_v_t_ML_in_1[1])[1]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":2243
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 * 
 */
        ((__pyx_v_t_ML_back_1[0])[0]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":2244
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        ((__pyx_v_t_ML_back_1[1])[1]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));
        goto __pyx_L23;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2248
 *             else:
 * 
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             ML_is_diagonal=1
 */
        __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_in_1), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));
      }
      __pyx_L23:;

      /* "Pythonreflectivity.pyx":2250
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)
 * 
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":2254
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_1), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2255
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_1));

      /* "Pythonreflectivity.pyx":2259
 * 
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":2260
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":2261
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":2262
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":2265
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":2267
 *             j=1
 *          #   print "9"
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2268
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":2269
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":2270
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":2271
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":2273
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2275
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2278
 * 
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":2279
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L26;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2282
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2284
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2285
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L27;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2288
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *               #  print "11"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L27:;

          /* "Pythonreflectivity.pyx":2289
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":2291
 *                     previously_magnetic=0
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":2292
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2293
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":2294
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":2295
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":2296
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":2297
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":2298
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":2301
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2302
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *             vz1=vz3
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2303
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":2304
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2305
 *                 j=j+1
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2306
 *             vz1=vz3
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
      __pyx_t_1 = ((__pyx_v_i == (__pyx_v_NLAYERS - 1)) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2307
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":2311
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2312
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2313
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2314
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2315
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2316
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2317
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2318
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2319
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2320
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          goto __pyx_L29;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2322
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 *             else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
        }
        __pyx_L29:;
        goto __pyx_L28;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2325
 *               #  print "14"
 *             else:
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":2326
 *             else:
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":2328
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2330
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2332
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":2333
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L30;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2336
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2338
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2339
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L31;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2342
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "16"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L31:;

          /* "Pythonreflectivity.pyx":2343
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "16"
 *          #   print "17"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L30:;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":2346
 *              #   print "16"
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2347
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2348
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2349
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":2350
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":2351
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":2352
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":2353
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":2355
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *           #  print "18"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2356
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *           #  print "18"
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":2358
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *           #  print "18"
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":1858
 * 
 * 
 * cdef void Paratt_magnetic_y(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_y", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":2361
 * 
 * 
 * cdef void Invert2x2(double complex (*M)[2][2]):             # <<<<<<<<<<<<<<
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]
 */

static void __pyx_f_18Pythonreflectivity_Invert2x2(__pyx_t_double_complex (*__pyx_v_M)[2][2]) {
  __pyx_t_double_complex __pyx_v_dconj;
  __pyx_t_double_complex __pyx_v_safe;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Invert2x2", 0);

  /* "Pythonreflectivity.pyx":2362
 * 
 * cdef void Invert2x2(double complex (*M)[2][2]):
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )             # <<<<<<<<<<<<<<
 *     cdef double complex safe=(M[0])[0][0]
 *     dconj=dconj/cabsquadr(dconj)
 */
  __pyx_v_dconj = __pyx_f_18Pythonreflectivity_cconj(__Pyx_c_diff(__Pyx_c_prod((((__pyx_v_M[0])[0])[0]), (((__pyx_v_M[0])[1])[1])), __Pyx_c_prod((((__pyx_v_M[0])[0])[1]), (((__pyx_v_M[0])[1])[0]))));

  /* "Pythonreflectivity.pyx":2363
 * cdef void Invert2x2(double complex (*M)[2][2]):
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]             # <<<<<<<<<<<<<<
 *     dconj=dconj/cabsquadr(dconj)
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 */
  __pyx_v_safe = (((__pyx_v_M[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2364
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]
 *     dconj=dconj/cabsquadr(dconj)             # <<<<<<<<<<<<<<
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_dconj), 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_t_1))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2364; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_dconj = __Pyx_c_quot(__pyx_v_dconj, __pyx_t_1);

  /* "Pythonreflectivity.pyx":2365
 *     cdef double complex safe=(M[0])[0][0]
 *     dconj=dconj/cabsquadr(dconj)
 *     (M[0])[0][0]=(M[0])[1][1]*dconj             # <<<<<<<<<<<<<<
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj
 */
  (((__pyx_v_M[0])[0])[0]) = __Pyx_c_prod((((__pyx_v_M[0])[1])[1]), __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2366
 *     dconj=dconj/cabsquadr(dconj)
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj             # <<<<<<<<<<<<<<
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj
 *     (M[0])[1][1]=safe*dconj
 */
  (((__pyx_v_M[0])[0])[1]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_M[0])[0])[1])), __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2367
 *     (M[0])[0][0]=(M[0])[1][1]*dconj
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj             # <<<<<<<<<<<<<<
 *     (M[0])[1][1]=safe*dconj
 * 
 */
  (((__pyx_v_M[0])[1])[0]) = __Pyx_c_prod(__Pyx_c_neg((((__pyx_v_M[0])[1])[0])), __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2368
 *     (M[0])[0][1]=-(M[0])[0][1]*dconj
 *     (M[0])[1][0]=-(M[0])[1][0]*dconj
 *     (M[0])[1][1]=safe*dconj             # <<<<<<<<<<<<<<
 * 
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):
 */
  (((__pyx_v_M[0])[1])[1]) = __Pyx_c_prod(__pyx_v_safe, __pyx_v_dconj);

  /* "Pythonreflectivity.pyx":2361
 * 
 * 
 * cdef void Invert2x2(double complex (*M)[2][2]):             # <<<<<<<<<<<<<<
 *     cdef double complex dconj=cconj( (M[0])[0][0]*(M[0])[1][1]-(M[0])[0][1]*(M[0])[1][0] )
 *     cdef double complex safe=(M[0])[0][0]
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.Invert2x2", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":2370
 *     (M[0])[1][1]=safe*dconj
 * 
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]
 */

static void __pyx_f_18Pythonreflectivity_FillC0(__pyx_t_double_complex (*__pyx_v_C0)[2][2], __pyx_t_double_complex (*__pyx_v_rprime)[2][2], __pyx_t_double_complex (*__pyx_v_rtot)[2][2], __pyx_t_double_complex (*__pyx_v_p)[2][2]) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("FillC0", 0);

  /* "Pythonreflectivity.pyx":2372
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]             # <<<<<<<<<<<<<<
 *     (C0[0])[0][1]=0
 *     (C0[0])[1][0]=0
 */
  (((__pyx_v_C0[0])[0])[0]) = (((__pyx_v_p[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2373
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]
 *     (C0[0])[0][1]=0             # <<<<<<<<<<<<<<
 *     (C0[0])[1][0]=0
 *     (C0[0])[1][1]=(p[0])[1][1]
 */
  (((__pyx_v_C0[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2374
 *     (C0[0])[0][0]=(p[0])[0][0]
 *     (C0[0])[0][1]=0
 *     (C0[0])[1][0]=0             # <<<<<<<<<<<<<<
 *     (C0[0])[1][1]=(p[0])[1][1]
 * 
 */
  (((__pyx_v_C0[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2375
 *     (C0[0])[0][1]=0
 *     (C0[0])[1][0]=0
 *     (C0[0])[1][1]=(p[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     Mult2x2_rightside(rtot, C0)
 */
  (((__pyx_v_C0[0])[1])[1]) = (((__pyx_v_p[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2377
 *     (C0[0])[1][1]=(p[0])[1][1]
 * 
 *     Mult2x2_rightside(rtot, C0)             # <<<<<<<<<<<<<<
 *     Mult2x2_rightside(p,C0)
 *     Mult2x2_rightside(rprime,C0)
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_rtot, __pyx_v_C0);

  /* "Pythonreflectivity.pyx":2378
 * 
 *     Mult2x2_rightside(rtot, C0)
 *     Mult2x2_rightside(p,C0)             # <<<<<<<<<<<<<<
 *     Mult2x2_rightside(rprime,C0)
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_p, __pyx_v_C0);

  /* "Pythonreflectivity.pyx":2379
 *     Mult2x2_rightside(rtot, C0)
 *     Mult2x2_rightside(p,C0)
 *     Mult2x2_rightside(rprime,C0)             # <<<<<<<<<<<<<<
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 */
  __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_rprime, __pyx_v_C0);

  /* "Pythonreflectivity.pyx":2380
 *     Mult2x2_rightside(p,C0)
 *     Mult2x2_rightside(rprime,C0)
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]             # <<<<<<<<<<<<<<
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 */
  (((__pyx_v_C0[0])[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), (((__pyx_v_C0[0])[0])[0]));

  /* "Pythonreflectivity.pyx":2381
 *     Mult2x2_rightside(rprime,C0)
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 *     (C0[0])[0][1]=-(C0[0])[0][1]             # <<<<<<<<<<<<<<
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]
 */
  (((__pyx_v_C0[0])[0])[1]) = __Pyx_c_neg((((__pyx_v_C0[0])[0])[1]));

  /* "Pythonreflectivity.pyx":2382
 *     (C0[0])[0][0]=1.-(C0[0])[0][0]
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 *     (C0[0])[1][0]=-(C0[0])[1][0]             # <<<<<<<<<<<<<<
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]
 *     Invert2x2(C0)
 */
  (((__pyx_v_C0[0])[1])[0]) = __Pyx_c_neg((((__pyx_v_C0[0])[1])[0]));

  /* "Pythonreflectivity.pyx":2383
 *     (C0[0])[0][1]=-(C0[0])[0][1]
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]             # <<<<<<<<<<<<<<
 *     Invert2x2(C0)
 * 
 */
  (((__pyx_v_C0[0])[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), (((__pyx_v_C0[0])[1])[1]));

  /* "Pythonreflectivity.pyx":2384
 *     (C0[0])[1][0]=-(C0[0])[1][0]
 *     (C0[0])[1][1]=1.-(C0[0])[1][1]
 *     Invert2x2(C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_f_18Pythonreflectivity_Invert2x2(__pyx_v_C0);

  /* "Pythonreflectivity.pyx":2370
 *     (M[0])[1][1]=safe*dconj
 * 
 * cdef void FillC0(double complex (*C0)[2][2], double complex  (*rprime)[2][2], double complex (*rtot)[2][2],double complex  (*p)[2][2]):             # <<<<<<<<<<<<<<
 * 
 *     (C0[0])[0][0]=(p[0])[0][0]
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":2387
 * 
 * 
 * cdef void Calculate_Multilayer_with_Matrices(double complex (*t_comp1_up)[2][2], double complex (*t_comp2_up)[2][2], double complex (*t_comp1_do)[2][2], double complex (*t_comp2_do)[2][2], double complex (*r_ML_in1)[2][2], double complex (*r_ML_in2)[2][2], double complex (*r_ML_ba1)[2][2], double complex (*r_ML_ba2)[2][2], int N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex MLfac1[2][2]
 */

static void __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices(__pyx_t_double_complex (*__pyx_v_t_comp1_up)[2][2], __pyx_t_double_complex (*__pyx_v_t_comp2_up)[2][2], __pyx_t_double_complex (*__pyx_v_t_comp1_do)[2][2], __pyx_t_double_complex (*__pyx_v_t_comp2_do)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_in1)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_in2)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_ba1)[2][2], __pyx_t_double_complex (*__pyx_v_r_ML_ba2)[2][2], int __pyx_v_N) {
  __pyx_t_double_complex __pyx_v_MLfac1[2][2];
  __pyx_t_double_complex __pyx_v_MLfac2[2][2];
  __pyx_t_double_complex __pyx_v_safe[2][2];
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("Calculate_Multilayer_with_Matrices", 0);

  /* "Pythonreflectivity.pyx":2393
 *     cdef double complex safe[2][2]
 * 
 *     if(N==0):             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0
 */
  __pyx_t_1 = ((__pyx_v_N == 0) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":2394
 * 
 *     if(N==0):
 *         (r_ML_in2[0])[0][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[0][1]=0
 *         (r_ML_in2[0])[1][0]=0
 */
    (((__pyx_v_r_ML_in2[0])[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2395
 *     if(N==0):
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[1][0]=0
 *         (r_ML_in2[0])[1][1]=0
 */
    (((__pyx_v_r_ML_in2[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2396
 *         (r_ML_in2[0])[0][0]=0
 *         (r_ML_in2[0])[0][1]=0
 *         (r_ML_in2[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_in2[0])[1][1]=0
 * 
 */
    (((__pyx_v_r_ML_in2[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2397
 *         (r_ML_in2[0])[0][1]=0
 *         (r_ML_in2[0])[1][0]=0
 *         (r_ML_in2[0])[1][1]=0             # <<<<<<<<<<<<<<
 * 
 *         (r_ML_ba2[0])[0][0]=0
 */
    (((__pyx_v_r_ML_in2[0])[1])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2399
 *         (r_ML_in2[0])[1][1]=0
 * 
 *         (r_ML_ba2[0])[0][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_ba2[0])[0][1]=0
 *         (r_ML_ba2[0])[1][0]=0
 */
    (((__pyx_v_r_ML_ba2[0])[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2400
 * 
 *         (r_ML_ba2[0])[0][0]=0
 *         (r_ML_ba2[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (r_ML_ba2[0])[1][0]=0
 *         (r_ML_ba2[0])[1][1]=0
 */
    (((__pyx_v_r_ML_ba2[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2401
 *         (r_ML_ba2[0])[0][0]=0
 *         (r_ML_ba2[0])[0][1]=0
 *         (r_ML_ba2[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (r_ML_ba2[0])[1][1]=0
 * 
 */
    (((__pyx_v_r_ML_ba2[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2402
 *         (r_ML_ba2[0])[0][1]=0
 *         (r_ML_ba2[0])[1][0]=0
 *         (r_ML_ba2[0])[1][1]=0             # <<<<<<<<<<<<<<
 * 
 *         (t_comp2_up[0])[0][0]=1
 */
    (((__pyx_v_r_ML_ba2[0])[1])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2404
 *         (r_ML_ba2[0])[1][1]=0
 * 
 *         (t_comp2_up[0])[0][0]=1             # <<<<<<<<<<<<<<
 *         (t_comp2_up[0])[0][1]=0
 *         (t_comp2_up[0])[1][0]=0
 */
    (((__pyx_v_t_comp2_up[0])[0])[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2405
 * 
 *         (t_comp2_up[0])[0][0]=1
 *         (t_comp2_up[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_up[0])[1][0]=0
 *         (t_comp2_up[0])[1][1]=1
 */
    (((__pyx_v_t_comp2_up[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2406
 *         (t_comp2_up[0])[0][0]=1
 *         (t_comp2_up[0])[0][1]=0
 *         (t_comp2_up[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_up[0])[1][1]=1
 * 
 */
    (((__pyx_v_t_comp2_up[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2407
 *         (t_comp2_up[0])[0][1]=0
 *         (t_comp2_up[0])[1][0]=0
 *         (t_comp2_up[0])[1][1]=1             # <<<<<<<<<<<<<<
 * 
 *         (t_comp2_do[0])[0][0]=1
 */
    (((__pyx_v_t_comp2_up[0])[1])[1]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2409
 *         (t_comp2_up[0])[1][1]=1
 * 
 *         (t_comp2_do[0])[0][0]=1             # <<<<<<<<<<<<<<
 *         (t_comp2_do[0])[0][1]=0
 *         (t_comp2_do[0])[1][0]=0
 */
    (((__pyx_v_t_comp2_do[0])[0])[0]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2410
 * 
 *         (t_comp2_do[0])[0][0]=1
 *         (t_comp2_do[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_do[0])[1][0]=0
 *         (t_comp2_do[0])[1][1]=1
 */
    (((__pyx_v_t_comp2_do[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2411
 *         (t_comp2_do[0])[0][0]=1
 *         (t_comp2_do[0])[0][1]=0
 *         (t_comp2_do[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (t_comp2_do[0])[1][1]=1
 *         return
 */
    (((__pyx_v_t_comp2_do[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":2412
 *         (t_comp2_do[0])[0][1]=0
 *         (t_comp2_do[0])[1][0]=0
 *         (t_comp2_do[0])[1][1]=1             # <<<<<<<<<<<<<<
 *         return
 * 
 */
    (((__pyx_v_t_comp2_do[0])[1])[1]) = __pyx_t_double_complex_from_parts(1, 0);

    /* "Pythonreflectivity.pyx":2413
 *         (t_comp2_do[0])[1][0]=0
 *         (t_comp2_do[0])[1][1]=1
 *         return             # <<<<<<<<<<<<<<
 * 
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]
 */
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":2415
 *         return
 * 
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]             # <<<<<<<<<<<<<<
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]
 */
  (((__pyx_v_r_ML_in2[0])[0])[0]) = (((__pyx_v_r_ML_in1[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2416
 * 
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]             # <<<<<<<<<<<<<<
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]
 */
  (((__pyx_v_r_ML_in2[0])[0])[1]) = (((__pyx_v_r_ML_in1[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2417
 *     (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]             # <<<<<<<<<<<<<<
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]
 * 
 */
  (((__pyx_v_r_ML_in2[0])[1])[0]) = (((__pyx_v_r_ML_in1[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2418
 *     (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]
 *     (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]
 */
  (((__pyx_v_r_ML_in2[0])[1])[1]) = (((__pyx_v_r_ML_in1[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2420
 *     (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]
 * 
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]
 */
  (((__pyx_v_r_ML_ba2[0])[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2421
 * 
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]
 */
  (((__pyx_v_r_ML_ba2[0])[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2422
 *     (r_ML_ba2[0])[0][0]=(r_ML_ba1[0])[0][0]
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]
 * 
 */
  (((__pyx_v_r_ML_ba2[0])[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2423
 *     (r_ML_ba2[0])[0][1]=(r_ML_ba1[0])[0][1]
 *     (r_ML_ba2[0])[1][0]=(r_ML_ba1[0])[1][0]
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]
 */
  (((__pyx_v_r_ML_ba2[0])[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2425
 *     (r_ML_ba2[0])[1][1]=(r_ML_ba1[0])[1][1]
 * 
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]
 */
  (((__pyx_v_t_comp2_up[0])[0])[0]) = (((__pyx_v_t_comp1_up[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2426
 * 
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]             # <<<<<<<<<<<<<<
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]
 */
  (((__pyx_v_t_comp2_up[0])[0])[1]) = (((__pyx_v_t_comp1_up[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2427
 *     (t_comp2_up[0])[0][0]=(t_comp1_up[0])[0][0]
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]
 * 
 */
  (((__pyx_v_t_comp2_up[0])[1])[0]) = (((__pyx_v_t_comp1_up[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2428
 *     (t_comp2_up[0])[0][1]=(t_comp1_up[0])[0][1]
 *     (t_comp2_up[0])[1][0]=(t_comp1_up[0])[1][0]
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]
 */
  (((__pyx_v_t_comp2_up[0])[1])[1]) = (((__pyx_v_t_comp1_up[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2430
 *     (t_comp2_up[0])[1][1]=(t_comp1_up[0])[1][1]
 * 
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]
 */
  (((__pyx_v_t_comp2_do[0])[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

  /* "Pythonreflectivity.pyx":2431
 * 
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]
 */
  (((__pyx_v_t_comp2_do[0])[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

  /* "Pythonreflectivity.pyx":2432
 *     (t_comp2_do[0])[0][0]=(t_comp1_do[0])[0][0]
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]
 * 
 */
  (((__pyx_v_t_comp2_do[0])[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

  /* "Pythonreflectivity.pyx":2433
 *     (t_comp2_do[0])[0][1]=(t_comp1_do[0])[0][1]
 *     (t_comp2_do[0])[1][0]=(t_comp1_do[0])[1][0]
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *     N=N-1
 */
  (((__pyx_v_t_comp2_do[0])[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

  /* "Pythonreflectivity.pyx":2435
 *     (t_comp2_do[0])[1][1]=(t_comp1_do[0])[1][1]
 * 
 *     N=N-1             # <<<<<<<<<<<<<<
 *   #  print N
 *     while(N):
 */
  __pyx_v_N = (__pyx_v_N - 1);

  /* "Pythonreflectivity.pyx":2437
 *     N=N-1
 *   #  print N
 *     while(N):             # <<<<<<<<<<<<<<
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 */
  while (1) {
    __pyx_t_1 = (__pyx_v_N != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":2438
 *   #  print N
 *     while(N):
 *         if(N%2): #Adding one Compound Layer to the heterostructure             # <<<<<<<<<<<<<<
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 */
    __pyx_t_1 = (__Pyx_mod_long(__pyx_v_N, 2) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2440
 *         if(N%2): #Adding one Compound Layer to the heterostructure
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 */
      ((__pyx_v_MLfac1[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2441
 *            # MLfac=1.0/(1-rres1*r_ML_ba1[0])
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 */
      ((__pyx_v_MLfac1[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2442
 *             MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 */
      ((__pyx_v_MLfac1[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2443
 *             MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 */
      ((__pyx_v_MLfac1[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2444
 *             MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)             # <<<<<<<<<<<<<<
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 *             MLfac1[0][1]=-MLfac1[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in2, (&__pyx_v_MLfac1));

      /* "Pythonreflectivity.pyx":2445
 *             MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 *             MLfac1[0][0]=1.-MLfac1[0][0]             # <<<<<<<<<<<<<<
 *             MLfac1[0][1]=-MLfac1[0][1]
 *             MLfac1[1][0]=-MLfac1[1][0]
 */
      ((__pyx_v_MLfac1[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[0])[0]));

      /* "Pythonreflectivity.pyx":2446
 *             Mult2x2_rightside(r_ML_in2, &MLfac1)
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 *             MLfac1[0][1]=-MLfac1[0][1]             # <<<<<<<<<<<<<<
 *             MLfac1[1][0]=-MLfac1[1][0]
 *             MLfac1[1][1]=1.-MLfac1[1][1]
 */
      ((__pyx_v_MLfac1[0])[1]) = __Pyx_c_neg(((__pyx_v_MLfac1[0])[1]));

      /* "Pythonreflectivity.pyx":2447
 *             MLfac1[0][0]=1.-MLfac1[0][0]
 *             MLfac1[0][1]=-MLfac1[0][1]
 *             MLfac1[1][0]=-MLfac1[1][0]             # <<<<<<<<<<<<<<
 *             MLfac1[1][1]=1.-MLfac1[1][1]
 *             Invert2x2(&MLfac1)
 */
      ((__pyx_v_MLfac1[1])[0]) = __Pyx_c_neg(((__pyx_v_MLfac1[1])[0]));

      /* "Pythonreflectivity.pyx":2448
 *             MLfac1[0][1]=-MLfac1[0][1]
 *             MLfac1[1][0]=-MLfac1[1][0]
 *             MLfac1[1][1]=1.-MLfac1[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&MLfac1)
 * 
 */
      ((__pyx_v_MLfac1[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[1])[1]));

      /* "Pythonreflectivity.pyx":2449
 *             MLfac1[1][0]=-MLfac1[1][0]
 *             MLfac1[1][1]=1.-MLfac1[1][1]
 *             Invert2x2(&MLfac1)             # <<<<<<<<<<<<<<
 * 
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac1));

      /* "Pythonreflectivity.pyx":2451
 *             Invert2x2(&MLfac1)
 * 
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 */
      ((__pyx_v_MLfac2[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2452
 * 
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 */
      ((__pyx_v_MLfac2[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2453
 *             MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 */
      ((__pyx_v_MLfac2[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2454
 *             MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 */
      ((__pyx_v_MLfac2[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2455
 *             MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)             # <<<<<<<<<<<<<<
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 *             MLfac2[0][1]=-MLfac2[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_MLfac2), __pyx_v_r_ML_in2);

      /* "Pythonreflectivity.pyx":2456
 *             MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 *             MLfac2[0][0]=1.-MLfac2[0][0]             # <<<<<<<<<<<<<<
 *             MLfac2[0][1]=-MLfac2[0][1]
 *             MLfac2[1][0]=-MLfac2[1][0]
 */
      ((__pyx_v_MLfac2[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[0])[0]));

      /* "Pythonreflectivity.pyx":2457
 *             Mult2x2_leftside(&MLfac2, r_ML_in2)
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 *             MLfac2[0][1]=-MLfac2[0][1]             # <<<<<<<<<<<<<<
 *             MLfac2[1][0]=-MLfac2[1][0]
 *             MLfac2[1][1]=1.-MLfac2[1][1]
 */
      ((__pyx_v_MLfac2[0])[1]) = __Pyx_c_neg(((__pyx_v_MLfac2[0])[1]));

      /* "Pythonreflectivity.pyx":2458
 *             MLfac2[0][0]=1.-MLfac2[0][0]
 *             MLfac2[0][1]=-MLfac2[0][1]
 *             MLfac2[1][0]=-MLfac2[1][0]             # <<<<<<<<<<<<<<
 *             MLfac2[1][1]=1.-MLfac2[1][1]
 *             Invert2x2(&MLfac2)
 */
      ((__pyx_v_MLfac2[1])[0]) = __Pyx_c_neg(((__pyx_v_MLfac2[1])[0]));

      /* "Pythonreflectivity.pyx":2459
 *             MLfac2[0][1]=-MLfac2[0][1]
 *             MLfac2[1][0]=-MLfac2[1][0]
 *             MLfac2[1][1]=1.-MLfac2[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&MLfac2)
 * 
 */
      ((__pyx_v_MLfac2[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[1])[1]));

      /* "Pythonreflectivity.pyx":2460
 *             MLfac2[1][0]=-MLfac2[1][0]
 *             MLfac2[1][1]=1.-MLfac2[1][1]
 *             Invert2x2(&MLfac2)             # <<<<<<<<<<<<<<
 * 
 *            # rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac2));

      /* "Pythonreflectivity.pyx":2464
 *            # rres1=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*rres1*MLfac
 * 
 *             safe[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *             safe[0][1]=(t_comp1_do[0])[0][1]
 *             safe[1][0]=(t_comp1_do[0])[1][0]
 */
      ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2465
 * 
 *             safe[0][0]=(t_comp1_do[0])[0][0]
 *             safe[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *             safe[1][0]=(t_comp1_do[0])[1][0]
 *             safe[1][1]=(t_comp1_do[0])[1][1]
 */
      ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2466
 *             safe[0][0]=(t_comp1_do[0])[0][0]
 *             safe[0][1]=(t_comp1_do[0])[0][1]
 *             safe[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *             safe[1][1]=(t_comp1_do[0])[1][1]
 * 
 */
      ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2467
 *             safe[0][1]=(t_comp1_do[0])[0][1]
 *             safe[1][0]=(t_comp1_do[0])[1][0]
 *             safe[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&MLfac2, &safe)
 */
      ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2469
 *             safe[1][1]=(t_comp1_do[0])[1][1]
 * 
 *             Mult2x2_rightside(&MLfac2, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(r_ML_in2, &safe)
 *             Mult2x2_rightside(t_comp1_up, &safe)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac2), (&__pyx_v_safe));

      /* "Pythonreflectivity.pyx":2470
 * 
 *             Mult2x2_rightside(&MLfac2, &safe)
 *             Mult2x2_rightside(r_ML_in2, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(t_comp1_up, &safe)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in2, (&__pyx_v_safe));

      /* "Pythonreflectivity.pyx":2471
 *             Mult2x2_rightside(&MLfac2, &safe)
 *             Mult2x2_rightside(r_ML_in2, &safe)
 *             Mult2x2_rightside(t_comp1_up, &safe)             # <<<<<<<<<<<<<<
 * 
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_up, (&__pyx_v_safe));

      /* "Pythonreflectivity.pyx":2473
 *             Mult2x2_rightside(t_comp1_up, &safe)
 * 
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 */
      (((__pyx_v_r_ML_in2[0])[0])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[0])[0]), ((__pyx_v_safe[0])[0]));

      /* "Pythonreflectivity.pyx":2474
 * 
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *             (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 */
      (((__pyx_v_r_ML_in2[0])[0])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[0])[1]), ((__pyx_v_safe[0])[1]));

      /* "Pythonreflectivity.pyx":2475
 *             (r_ML_in2[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *             (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 * 
 */
      (((__pyx_v_r_ML_in2[0])[1])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[1])[0]), ((__pyx_v_safe[1])[0]));

      /* "Pythonreflectivity.pyx":2476
 *             (r_ML_in2[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *             (r_ML_in2[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *             (r_ML_in2[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 * 
 *           #  rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 */
      (((__pyx_v_r_ML_in2[0])[1])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[1])[1]), ((__pyx_v_safe[1])[1]));

      /* "Pythonreflectivity.pyx":2480
 *           #  rres2=rres2+tres_up*tres_do*r_ML_ba1[0]*MLfac
 * 
 *             safe[0][0]=(t_comp2_up[0])[0][0]             # <<<<<<<<<<<<<<
 *             safe[0][1]=(t_comp2_up[0])[0][1]
 *             safe[1][0]=(t_comp2_up[0])[1][0]
 */
      ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp2_up[0])[0])[0]);

      /* "Pythonreflectivity.pyx":2481
 * 
 *             safe[0][0]=(t_comp2_up[0])[0][0]
 *             safe[0][1]=(t_comp2_up[0])[0][1]             # <<<<<<<<<<<<<<
 *             safe[1][0]=(t_comp2_up[0])[1][0]
 *             safe[1][1]=(t_comp2_up[0])[1][1]
 */
      ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp2_up[0])[0])[1]);

      /* "Pythonreflectivity.pyx":2482
 *             safe[0][0]=(t_comp2_up[0])[0][0]
 *             safe[0][1]=(t_comp2_up[0])[0][1]
 *             safe[1][0]=(t_comp2_up[0])[1][0]             # <<<<<<<<<<<<<<
 *             safe[1][1]=(t_comp2_up[0])[1][1]
 * 
 */
      ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp2_up[0])[1])[0]);

      /* "Pythonreflectivity.pyx":2483
 *             safe[0][1]=(t_comp2_up[0])[0][1]
 *             safe[1][0]=(t_comp2_up[0])[1][0]
 *             safe[1][1]=(t_comp2_up[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&MLfac1, &safe)
 */
      ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp2_up[0])[1])[1]);

      /* "Pythonreflectivity.pyx":2485
 *             safe[1][1]=(t_comp2_up[0])[1][1]
 * 
 *             Mult2x2_rightside(&MLfac1, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(r_ML_ba1, &safe)
 *             Mult2x2_rightside(t_comp2_do, &safe)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), (&__pyx_v_safe));

      /* "Pythonreflectivity.pyx":2486
 * 
 *             Mult2x2_rightside(&MLfac1, &safe)
 *             Mult2x2_rightside(r_ML_ba1, &safe)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(t_comp2_do, &safe)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_ba1, (&__pyx_v_safe));

      /* "Pythonreflectivity.pyx":2487
 *             Mult2x2_rightside(&MLfac1, &safe)
 *             Mult2x2_rightside(r_ML_ba1, &safe)
 *             Mult2x2_rightside(t_comp2_do, &safe)             # <<<<<<<<<<<<<<
 * 
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp2_do, (&__pyx_v_safe));

      /* "Pythonreflectivity.pyx":2489
 *             Mult2x2_rightside(t_comp2_do, &safe)
 * 
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]
 */
      (((__pyx_v_r_ML_ba2[0])[0])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_ba2[0])[0])[0]), ((__pyx_v_safe[0])[0]));

      /* "Pythonreflectivity.pyx":2490
 * 
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]
 *             (r_ML_ba2[0])[1][1]=(r_ML_ba2[0])[1][1]+safe[1][1]
 */
      (((__pyx_v_r_ML_ba2[0])[0])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_ba2[0])[0])[1]), ((__pyx_v_safe[0])[1]));

      /* "Pythonreflectivity.pyx":2491
 *             (r_ML_ba2[0])[0][0]=(r_ML_ba2[0])[0][0]+safe[0][0]
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *             (r_ML_ba2[0])[1][1]=(r_ML_ba2[0])[1][1]+safe[1][1]
 * 
 */
      (((__pyx_v_r_ML_ba2[0])[1])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_ba2[0])[1])[0]), ((__pyx_v_safe[1])[0]));

      /* "Pythonreflectivity.pyx":2492
 *             (r_ML_ba2[0])[0][1]=(r_ML_ba2[0])[0][1]+safe[0][1]
 *             (r_ML_ba2[0])[1][0]=(r_ML_ba2[0])[1][0]+safe[1][0]
 *             (r_ML_ba2[0])[1][1]=(r_ML_ba2[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 * 
 *           #  tres_up=t_comp1_up[0]*tres_up*MLfac
 */
      (((__pyx_v_r_ML_ba2[0])[1])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_ba2[0])[1])[1]), ((__pyx_v_safe[1])[1]));

      /* "Pythonreflectivity.pyx":2496
 *           #  tres_up=t_comp1_up[0]*tres_up*MLfac
 * 
 *             Mult2x2_rightside(&MLfac1, t_comp2_up)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(t_comp1_up, t_comp2_up)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), __pyx_v_t_comp2_up);

      /* "Pythonreflectivity.pyx":2497
 * 
 *             Mult2x2_rightside(&MLfac1, t_comp2_up)
 *             Mult2x2_rightside(t_comp1_up, t_comp2_up)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_up, __pyx_v_t_comp2_up);

      /* "Pythonreflectivity.pyx":2502
 *           #  tres_do=t_comp1_do[0]*tres_do*MLfac
 * 
 *             Mult2x2_leftside(t_comp2_do, &MLfac2)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(t_comp2_do, t_comp1_do)
 *         #endif
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp2_do, (&__pyx_v_MLfac2));

      /* "Pythonreflectivity.pyx":2503
 * 
 *             Mult2x2_leftside(t_comp2_do, &MLfac2)
 *             Mult2x2_leftside(t_comp2_do, t_comp1_do)             # <<<<<<<<<<<<<<
 *         #endif
 *         N=N/2
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp2_do, __pyx_v_t_comp1_do);
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "Pythonreflectivity.pyx":2505
 *             Mult2x2_leftside(t_comp2_do, t_comp1_do)
 *         #endif
 *         N=N/2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_N = __Pyx_div_long(__pyx_v_N, 2);

    /* "Pythonreflectivity.pyx":2511
 *      #   MLfac=1.0/(1-r_ML_in1[0]*r_ML_ba1[0])
 * 
 *         MLfac1[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 */
    ((__pyx_v_MLfac1[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2512
 * 
 *         MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 */
    ((__pyx_v_MLfac1[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2513
 *         MLfac1[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 */
    ((__pyx_v_MLfac1[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2514
 *         MLfac1[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 */
    ((__pyx_v_MLfac1[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2515
 *         MLfac1[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)             # <<<<<<<<<<<<<<
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 *         MLfac1[0][1]=-MLfac1[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in1, (&__pyx_v_MLfac1));

    /* "Pythonreflectivity.pyx":2516
 *         MLfac1[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 *         MLfac1[0][0]=1.-MLfac1[0][0]             # <<<<<<<<<<<<<<
 *         MLfac1[0][1]=-MLfac1[0][1]
 *         MLfac1[1][0]=-MLfac1[1][0]
 */
    ((__pyx_v_MLfac1[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[0])[0]));

    /* "Pythonreflectivity.pyx":2517
 *         Mult2x2_rightside(r_ML_in1, &MLfac1)
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 *         MLfac1[0][1]=-MLfac1[0][1]             # <<<<<<<<<<<<<<
 *         MLfac1[1][0]=-MLfac1[1][0]
 *         MLfac1[1][1]=1.-MLfac1[1][1]
 */
    ((__pyx_v_MLfac1[0])[1]) = __Pyx_c_neg(((__pyx_v_MLfac1[0])[1]));

    /* "Pythonreflectivity.pyx":2518
 *         MLfac1[0][0]=1.-MLfac1[0][0]
 *         MLfac1[0][1]=-MLfac1[0][1]
 *         MLfac1[1][0]=-MLfac1[1][0]             # <<<<<<<<<<<<<<
 *         MLfac1[1][1]=1.-MLfac1[1][1]
 *         Invert2x2(&MLfac1)
 */
    ((__pyx_v_MLfac1[1])[0]) = __Pyx_c_neg(((__pyx_v_MLfac1[1])[0]));

    /* "Pythonreflectivity.pyx":2519
 *         MLfac1[0][1]=-MLfac1[0][1]
 *         MLfac1[1][0]=-MLfac1[1][0]
 *         MLfac1[1][1]=1.-MLfac1[1][1]             # <<<<<<<<<<<<<<
 *         Invert2x2(&MLfac1)
 * 
 */
    ((__pyx_v_MLfac1[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac1[1])[1]));

    /* "Pythonreflectivity.pyx":2520
 *         MLfac1[1][0]=-MLfac1[1][0]
 *         MLfac1[1][1]=1.-MLfac1[1][1]
 *         Invert2x2(&MLfac1)             # <<<<<<<<<<<<<<
 * 
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 */
    __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac1));

    /* "Pythonreflectivity.pyx":2522
 *         Invert2x2(&MLfac1)
 * 
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]             # <<<<<<<<<<<<<<
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 */
    ((__pyx_v_MLfac2[0])[0]) = (((__pyx_v_r_ML_ba1[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2523
 * 
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]             # <<<<<<<<<<<<<<
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 */
    ((__pyx_v_MLfac2[0])[1]) = (((__pyx_v_r_ML_ba1[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2524
 *         MLfac2[0][0]=(r_ML_ba1[0])[0][0]
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]             # <<<<<<<<<<<<<<
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 */
    ((__pyx_v_MLfac2[1])[0]) = (((__pyx_v_r_ML_ba1[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2525
 *         MLfac2[0][1]=(r_ML_ba1[0])[0][1]
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 */
    ((__pyx_v_MLfac2[1])[1]) = (((__pyx_v_r_ML_ba1[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2526
 *         MLfac2[1][0]=(r_ML_ba1[0])[1][0]
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)             # <<<<<<<<<<<<<<
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 *         MLfac2[0][1]=-MLfac2[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_MLfac2), __pyx_v_r_ML_in1);

    /* "Pythonreflectivity.pyx":2527
 *         MLfac2[1][1]=(r_ML_ba1[0])[1][1]
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 *         MLfac2[0][0]=1.-MLfac2[0][0]             # <<<<<<<<<<<<<<
 *         MLfac2[0][1]=-MLfac2[0][1]
 *         MLfac2[1][0]=-MLfac2[1][0]
 */
    ((__pyx_v_MLfac2[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[0])[0]));

    /* "Pythonreflectivity.pyx":2528
 *         Mult2x2_leftside(&MLfac2, r_ML_in1)
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 *         MLfac2[0][1]=-MLfac2[0][1]             # <<<<<<<<<<<<<<
 *         MLfac2[1][0]=-MLfac2[1][0]
 *         MLfac2[1][1]=1.-MLfac2[1][1]
 */
    ((__pyx_v_MLfac2[0])[1]) = __Pyx_c_neg(((__pyx_v_MLfac2[0])[1]));

    /* "Pythonreflectivity.pyx":2529
 *         MLfac2[0][0]=1.-MLfac2[0][0]
 *         MLfac2[0][1]=-MLfac2[0][1]
 *         MLfac2[1][0]=-MLfac2[1][0]             # <<<<<<<<<<<<<<
 *         MLfac2[1][1]=1.-MLfac2[1][1]
 *         Invert2x2(&MLfac2)
 */
    ((__pyx_v_MLfac2[1])[0]) = __Pyx_c_neg(((__pyx_v_MLfac2[1])[0]));

    /* "Pythonreflectivity.pyx":2530
 *         MLfac2[0][1]=-MLfac2[0][1]
 *         MLfac2[1][0]=-MLfac2[1][0]
 *         MLfac2[1][1]=1.-MLfac2[1][1]             # <<<<<<<<<<<<<<
 *         Invert2x2(&MLfac2)
 * 
 */
    ((__pyx_v_MLfac2[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_MLfac2[1])[1]));

    /* "Pythonreflectivity.pyx":2531
 *         MLfac2[1][0]=-MLfac2[1][0]
 *         MLfac2[1][1]=1.-MLfac2[1][1]
 *         Invert2x2(&MLfac2)             # <<<<<<<<<<<<<<
 * 
 *      #   r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 */
    __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_MLfac2));

    /* "Pythonreflectivity.pyx":2535
 *      #   r_ML_in1[0]=r_ML_in1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_in1[0]*MLfac
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2536
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2537
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *         Mult2x2_rightside(&MLfac2, &safe)
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2538
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_rightside(r_ML_in1, &safe)
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2539
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *         Mult2x2_rightside(&MLfac2, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(r_ML_in1, &safe)
 *         Mult2x2_rightside(t_comp1_up, &safe)
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac2), (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2540
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_rightside(r_ML_in1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(t_comp1_up, &safe)
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_in1, (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2541
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_rightside(r_ML_in1, &safe)
 *         Mult2x2_rightside(t_comp1_up, &safe)             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_up, (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2542
 *         Mult2x2_rightside(r_ML_in1, &safe)
 *         Mult2x2_rightside(t_comp1_up, &safe)
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 */
    (((__pyx_v_r_ML_in1[0])[0])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[0])[0]), ((__pyx_v_safe[0])[0]));

    /* "Pythonreflectivity.pyx":2543
 *         Mult2x2_rightside(t_comp1_up, &safe)
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *         (r_ML_in1[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 */
    (((__pyx_v_r_ML_in1[0])[0])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[0])[1]), ((__pyx_v_safe[0])[1]));

    /* "Pythonreflectivity.pyx":2544
 *         (r_ML_in1[0])[0][0]=(r_ML_in1[0])[0][0]+safe[0][0]
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *         (r_ML_in1[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]
 * 
 */
    (((__pyx_v_r_ML_in1[0])[1])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[1])[0]), ((__pyx_v_safe[1])[0]));

    /* "Pythonreflectivity.pyx":2545
 *         (r_ML_in1[0])[0][1]=(r_ML_in1[0])[0][1]+safe[0][1]
 *         (r_ML_in1[0])[1][0]=(r_ML_in1[0])[1][0]+safe[1][0]
 *         (r_ML_in1[0])[1][1]=(r_ML_in1[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_r_ML_in1[0])[1])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_in1[0])[1])[1]), ((__pyx_v_safe[1])[1]));

    /* "Pythonreflectivity.pyx":2550
 *      #   r_ML_ba1[0]=r_ML_ba1[0]+t_comp1_up[0]*t_comp1_do[0]*r_ML_ba1[0]*MLfac
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_up[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2551
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_up[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2552
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 *         Mult2x2_rightside(&MLfac1, &safe)
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_up[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2553
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_up[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2554
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 *         Mult2x2_rightside(&MLfac1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 *         Mult2x2_rightside(t_comp1_do, &safe)
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2555
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_rightside(r_ML_ba1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_rightside(t_comp1_do, &safe)
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_r_ML_ba1, (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2556
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 *         Mult2x2_rightside(t_comp1_do, &safe)             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside(__pyx_v_t_comp1_do, (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2557
 *         Mult2x2_rightside(r_ML_ba1, &safe)
 *         Mult2x2_rightside(t_comp1_do, &safe)
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]
 */
    (((__pyx_v_r_ML_ba1[0])[0])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_ba1[0])[0])[0]), ((__pyx_v_safe[0])[0]));

    /* "Pythonreflectivity.pyx":2558
 *         Mult2x2_rightside(t_comp1_do, &safe)
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]
 *         (r_ML_ba1[0])[1][1]=(r_ML_ba1[0])[1][1]+safe[1][1]
 */
    (((__pyx_v_r_ML_ba1[0])[0])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_ba1[0])[0])[1]), ((__pyx_v_safe[0])[1]));

    /* "Pythonreflectivity.pyx":2559
 *         (r_ML_ba1[0])[0][0]=(r_ML_ba1[0])[0][0]+safe[0][0]
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]             # <<<<<<<<<<<<<<
 *         (r_ML_ba1[0])[1][1]=(r_ML_ba1[0])[1][1]+safe[1][1]
 *     #    t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 */
    (((__pyx_v_r_ML_ba1[0])[1])[0]) = __Pyx_c_sum((((__pyx_v_r_ML_ba1[0])[1])[0]), ((__pyx_v_safe[1])[0]));

    /* "Pythonreflectivity.pyx":2560
 *         (r_ML_ba1[0])[0][1]=(r_ML_ba1[0])[0][1]+safe[0][1]
 *         (r_ML_ba1[0])[1][0]=(r_ML_ba1[0])[1][0]+safe[1][0]
 *         (r_ML_ba1[0])[1][1]=(r_ML_ba1[0])[1][1]+safe[1][1]             # <<<<<<<<<<<<<<
 *     #    t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 * 
 */
    (((__pyx_v_r_ML_ba1[0])[1])[1]) = __Pyx_c_sum((((__pyx_v_r_ML_ba1[0])[1])[1]), ((__pyx_v_safe[1])[1]));

    /* "Pythonreflectivity.pyx":2563
 *     #    t_comp1_up[0]=cquadr(t_comp1_up[0])*MLfac
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_up[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2564
 * 
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_up[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2565
 *         safe[0][0]=(t_comp1_up[0])[0][0]
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 * 
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_up[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2566
 *         safe[0][1]=(t_comp1_up[0])[0][1]
 *         safe[1][0]=(t_comp1_up[0])[1][0]
 *         safe[1][1]=(t_comp1_up[0])[1][1]             # <<<<<<<<<<<<<<
 * 
 *         Mult2x2_rightside(&MLfac1, &safe)
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_up[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2568
 *         safe[1][1]=(t_comp1_up[0])[1][1]
 * 
 *         Mult2x2_rightside(&MLfac1, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(t_comp1_up, &safe)
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac1), (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2569
 * 
 *         Mult2x2_rightside(&MLfac1, &safe)
 *         Mult2x2_leftside(t_comp1_up, &safe)             # <<<<<<<<<<<<<<
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp1_up, (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2571
 *         Mult2x2_leftside(t_comp1_up, &safe)
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]             # <<<<<<<<<<<<<<
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 */
    ((__pyx_v_safe[0])[0]) = (((__pyx_v_t_comp1_do[0])[0])[0]);

    /* "Pythonreflectivity.pyx":2572
 * 
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]             # <<<<<<<<<<<<<<
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 */
    ((__pyx_v_safe[0])[1]) = (((__pyx_v_t_comp1_do[0])[0])[1]);

    /* "Pythonreflectivity.pyx":2573
 *         safe[0][0]=(t_comp1_do[0])[0][0]
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]             # <<<<<<<<<<<<<<
 *         safe[1][1]=(t_comp1_do[0])[1][1]
 *      #   t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 */
    ((__pyx_v_safe[1])[0]) = (((__pyx_v_t_comp1_do[0])[1])[0]);

    /* "Pythonreflectivity.pyx":2574
 *         safe[0][1]=(t_comp1_do[0])[0][1]
 *         safe[1][0]=(t_comp1_do[0])[1][0]
 *         safe[1][1]=(t_comp1_do[0])[1][1]             # <<<<<<<<<<<<<<
 *      #   t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 */
    ((__pyx_v_safe[1])[1]) = (((__pyx_v_t_comp1_do[0])[1])[1]);

    /* "Pythonreflectivity.pyx":2577
 *      #   t_comp1_do[0]=cquadr(t_comp1_do[0])*MLfac
 * 
 *         Mult2x2_rightside(&MLfac2, &safe)             # <<<<<<<<<<<<<<
 *         Mult2x2_leftside(t_comp1_do, &safe)
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_MLfac2), (&__pyx_v_safe));

    /* "Pythonreflectivity.pyx":2578
 * 
 *         Mult2x2_rightside(&MLfac2, &safe)
 *         Mult2x2_leftside(t_comp1_do, &safe)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_t_comp1_do, (&__pyx_v_safe));
  }

  /* "Pythonreflectivity.pyx":2387
 * 
 * 
 * cdef void Calculate_Multilayer_with_Matrices(double complex (*t_comp1_up)[2][2], double complex (*t_comp2_up)[2][2], double complex (*t_comp1_do)[2][2], double complex (*t_comp2_do)[2][2], double complex (*r_ML_in1)[2][2], double complex (*r_ML_in2)[2][2], double complex (*r_ML_ba1)[2][2], double complex (*r_ML_ba2)[2][2], int N):             # <<<<<<<<<<<<<<
 * 
 *     cdef double complex MLfac1[2][2]
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":2582
 * 
 * 
 * cdef void Paratt_magnetic_y_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  CYTHON_UNUSED int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_C0[2][2];
  __pyx_t_double_complex __pyx_v_C1[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  long __pyx_t_9;
  long __pyx_t_10;
  long __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_y_MS", 0);

  /* "Pythonreflectivity.pyx":2585
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":2586
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":2588
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":2589
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":2591
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":2592
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy);

  /* "Pythonreflectivity.pyx":2593
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":2594
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":2595
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":2596
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":2597
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":2600
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":2625
 *     cdef double complex C1[2][2]
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2626
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":2630
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":2631
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":2633
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":2634
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==2): # magnetic
 *           #  print "x"
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":2635
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 *           #  print "x"
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2637
 *         if(LR[Upper].magdir==2): # magnetic
 *           #  print "x"
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":2639
 *             MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)             # <<<<<<<<<<<<<<
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 */
      __pyx_v_b = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(__Pyx_c_prod((__pyx_v_PHI1[3]), (__pyx_v_PHI2[0])), __pyx_t_double_complex_from_parts(1, 0)));

      /* "Pythonreflectivity.pyx":2640
 * 
 *             b=2*(PHI1[3]*PHI2[0]-1)
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])             # <<<<<<<<<<<<<<
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 */
      __pyx_v_d = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(__Pyx_c_prod((__pyx_v_PHI1[2]), (__pyx_v_PHI2[1])), __Pyx_c_prod((__pyx_v_PHI1[1]), (__pyx_v_PHI2[2]))));

      /* "Pythonreflectivity.pyx":2642
 *             d=2*(PHI1[2]*PHI2[1]-PHI1[1]*PHI2[2])
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors             # <<<<<<<<<<<<<<
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[0]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_b);

      /* "Pythonreflectivity.pyx":2643
 * 
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d             # <<<<<<<<<<<<<<
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b
 */
      __pyx_t_7 = __Pyx_c_neg((__pyx_v_PHI2[2]));
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_d);

      /* "Pythonreflectivity.pyx":2644
 *             PSI1[0]=-1.0/b #Inversion of Eigenvectors
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d             # <<<<<<<<<<<<<<
 *             PSI1[3]=PHI2[0]/b
 * 
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[2]) = __Pyx_c_quot((__pyx_v_PHI2[1]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":2645
 *             PSI1[1]=-PHI2[2]/d
 *             PSI1[2]=PHI2[1]/d
 *             PSI1[3]=PHI2[0]/b             # <<<<<<<<<<<<<<
 * 
 *             PSI2[0]=PHI1[3]/b
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[3]) = __Pyx_c_quot((__pyx_v_PHI2[0]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":2647
 *             PSI1[3]=PHI2[0]/b
 * 
 *             PSI2[0]=PHI1[3]/b             # <<<<<<<<<<<<<<
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[0]) = __Pyx_c_quot((__pyx_v_PHI1[3]), __pyx_v_b);

      /* "Pythonreflectivity.pyx":2648
 * 
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d             # <<<<<<<<<<<<<<
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 */
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[1]) = __Pyx_c_quot((__pyx_v_PHI1[2]), __pyx_v_d);

      /* "Pythonreflectivity.pyx":2649
 *             PSI2[0]=PHI1[3]/b
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d             # <<<<<<<<<<<<<<
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 */
      __pyx_t_7 = __Pyx_c_neg((__pyx_v_PHI1[1]));
      if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_d);

      /* "Pythonreflectivity.pyx":2650
 *             PSI2[1]=PHI1[2]/d
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b             # <<<<<<<<<<<<<<
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(-1.0, 0);
      if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[3]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_b);

      /* "Pythonreflectivity.pyx":2651
 *             PSI2[2]=-PHI1[1]/d
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2652
 *             PSI2[3]=-1.0/b
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2653
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2654
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2655
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2656
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2657
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2658
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2660
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 *        #     print "y"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz3, __pyx_v_vz4, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L5;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":2663
 *         else: # Not magnetic
 *        #     print "y"
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             PSI1[0]=0.5
 */
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":2665
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *             PSI1[0]=0.5             # <<<<<<<<<<<<<<
 *             PSI1[1]=0.5/vz3
 *             PSI1[2]=0
 */
      (__pyx_v_PSI1[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":2666
 * 
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz3             # <<<<<<<<<<<<<<
 *             PSI1[2]=0
 *             PSI1[3]=0
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero(__pyx_v_vz3))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2666; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI1[1]) = __Pyx_c_quot(__pyx_t_7, __pyx_v_vz3);

      /* "Pythonreflectivity.pyx":2667
 *             PSI1[0]=0.5
 *             PSI1[1]=0.5/vz3
 *             PSI1[2]=0             # <<<<<<<<<<<<<<
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 */
      (__pyx_v_PSI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2668
 *             PSI1[1]=0.5/vz3
 *             PSI1[2]=0
 *             PSI1[3]=0             # <<<<<<<<<<<<<<
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 */
      (__pyx_v_PSI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2669
 *             PSI1[2]=0
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]             # <<<<<<<<<<<<<<
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 */
      __pyx_t_7 = __pyx_t_double_complex_from_parts(0.5, 0);
      if (unlikely(__Pyx_c_is_zero((__pyx_v_PHI2[2])))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PSI2[2]) = __Pyx_c_quot(__pyx_t_7, (__pyx_v_PHI2[2]));

      /* "Pythonreflectivity.pyx":2670
 *             PSI1[3]=0
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5             # <<<<<<<<<<<<<<
 *             PSI2[1]=0
 *             PSI2[0]=0
 */
      (__pyx_v_PSI2[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

      /* "Pythonreflectivity.pyx":2671
 *             PSI2[2]=0.5/PHI2[2]
 *             PSI2[3]=0.5
 *             PSI2[1]=0             # <<<<<<<<<<<<<<
 *             PSI2[0]=0
 *         #Vacuum:
 */
      (__pyx_v_PSI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2672
 *             PSI2[3]=0.5
 *             PSI2[1]=0
 *             PSI2[0]=0             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      (__pyx_v_PSI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2674
 *             PSI2[0]=0
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2675
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2676
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2677
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2678
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":2679
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":2680
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2681
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2682
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     else:
 *         Lower=MLCOMP[0][0]
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz3, __pyx_v_vz4, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
    }
    __pyx_L5:;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":2684
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz3, vz4, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 */
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":2685
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":2686
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 */
    __pyx_t_1 = ((((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 2)) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2687
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==2)|(LR[Upper].magdir==2)):
 *             if(LR[Lower].magdir==2): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2689
 *             if(LR[Lower].magdir==2): # magnetic
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2690
 * 
 *                 MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L7;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2693
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2694
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":2695
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==2):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":2697
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2699
 *             if(LR[Upper].magdir==2):
 * 
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2701
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2704
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2706
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":2708
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2709
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2713
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L6;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":2721
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
      __pyx_v_vz1 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex);

      /* "Pythonreflectivity.pyx":2722
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_v_vz2 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez);

      /* "Pythonreflectivity.pyx":2723
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_v_vz3 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex);

      /* "Pythonreflectivity.pyx":2724
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_v_vz4 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

      /* "Pythonreflectivity.pyx":2725
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2726
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2727
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2728
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2729
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":2730
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2730; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":2731
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2732
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2734
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2735
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2737
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_7 = __Pyx_c_diff(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_8 = __Pyx_c_sum(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));

      /* "Pythonreflectivity.pyx":2738
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2739
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":2740
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":2743
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":2744
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":2746
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":2748
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2749
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2751
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":2753
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2754
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":2756
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2759
 *                   #  print "hallo"
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2760
 * 
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":2761
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L13;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2765
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2767
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2768
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
            goto __pyx_L14;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2771
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":2772
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2775
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2776
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2777
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2778
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2779
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":2780
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":2781
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2782
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2783
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2784
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L15;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2787
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *             FillC0(&C0, &rprime, rtot, &p)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":2789
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&p, rtot)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2791
 *             FillC0(&C0, &rprime, rtot, &p)
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2793
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2795
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":2797
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":2800
 * 
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":2802
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":2803
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":2804
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":2805
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":2808
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2809
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2810
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *         else:
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
        goto __pyx_L16;
      }
      __pyx_L16:;
      goto __pyx_L11;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":2812
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":2814
 *             PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":2815
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 * 
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":2816
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==2):
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":2818
 *             vz2=vz4
 * 
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":2819
 * 
 *             if(LR[Upper].magdir==2):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":2821
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2823
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

        /* "Pythonreflectivity.pyx":2825
 *                 Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L17;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":2829
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":2831
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2832
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L18;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2835
 *                 else:
 *                #     print "else"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":2837
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":2840
 * 
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2843
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":2844
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":2849
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":2850
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2851
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 */
        __pyx_t_9 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2851; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_9, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":2853
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":2854
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":2855
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":2859
 *               #  Upper=MLCOMP[i][1]
 * 
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2861
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2862
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2864
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":2865
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L21;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2868
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2870
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2871
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
            goto __pyx_L22;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2874
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "2", vz1, vz2, vz3, vz4
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":2875
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "2", vz1, vz2, vz3, vz4
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":2877
 *                     previously_magnetic=0
 *              #   print "2", vz1, vz2, vz3, vz4
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), (&__pyx_v_r_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2878
 *              #   print "2", vz1, vz2, vz3, vz4
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C1), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2879
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":2881
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2883
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":2884
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_C0));

        /* "Pythonreflectivity.pyx":2885
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":2887
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":2888
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":2889
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":2890
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":2894
 * 
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":2895
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":2897
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":2898
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":2899
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":2900
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":2903
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)
 *          #   print "p C components"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz1));

      /* "Pythonreflectivity.pyx":2904
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)             # <<<<<<<<<<<<<<
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz2));

      /* "Pythonreflectivity.pyx":2907
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 */
      ((__pyx_v_r_ML_back_1[0])[0]) = ((__pyx_v_rprime[0])[0]);

      /* "Pythonreflectivity.pyx":2908
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 */
      ((__pyx_v_r_ML_back_1[1])[0]) = ((__pyx_v_rprime[1])[0]);

      /* "Pythonreflectivity.pyx":2909
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 */
      ((__pyx_v_r_ML_back_1[0])[1]) = ((__pyx_v_rprime[0])[1]);

      /* "Pythonreflectivity.pyx":2910
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 */
      ((__pyx_v_r_ML_back_1[1])[1]) = ((__pyx_v_rprime[1])[1]);

      /* "Pythonreflectivity.pyx":2911
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 */
      ((__pyx_v_t_ML_in_1[0])[0]) = ((__pyx_v_t[0])[0]);

      /* "Pythonreflectivity.pyx":2912
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 */
      ((__pyx_v_t_ML_in_1[0])[1]) = ((__pyx_v_t[0])[1]);

      /* "Pythonreflectivity.pyx":2913
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 */
      ((__pyx_v_t_ML_in_1[1])[0]) = ((__pyx_v_t[1])[0]);

      /* "Pythonreflectivity.pyx":2914
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 */
      ((__pyx_v_t_ML_in_1[1])[1]) = ((__pyx_v_t[1])[1]);

      /* "Pythonreflectivity.pyx":2915
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1));

      /* "Pythonreflectivity.pyx":2917
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1);

      /* "Pythonreflectivity.pyx":2920
 * 
 * 
 *             while j>0:             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j > 0) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":2921
 * 
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 vz3=vz1
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)]);

        /* "Pythonreflectivity.pyx":2922
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vz3=vz1
 *                 vz4=vz2
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":2923
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]
 *                 vz3=vz1             # <<<<<<<<<<<<<<
 *                 vz4=vz2
 * 
 */
        __pyx_v_vz3 = __pyx_v_vz1;

        /* "Pythonreflectivity.pyx":2924
 *                 Upper=MLCOMP[i][j]
 *                 vz3=vz1
 *                 vz4=vz2             # <<<<<<<<<<<<<<
 * 
 *                 if(LR[Lower].magdir==2):
 */
        __pyx_v_vz4 = __pyx_v_vz2;

        /* "Pythonreflectivity.pyx":2926
 *                 vz4=vz2
 * 
 *                 if(LR[Lower].magdir==2):             # <<<<<<<<<<<<<<
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2927
 * 
 *                 if(LR[Lower].magdir==2):
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2928
 *                 if(LR[Lower].magdir==2):
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2929
 *                     MagneticPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L25;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2931
 *                     previously_magnetic=1
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2932
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L25:;

        /* "Pythonreflectivity.pyx":2935
 * 
 * 
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":2938
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":2940
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2941
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":2943
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                   #  previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0);
          goto __pyx_L26;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":2947
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":2949
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":2950
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0);
            goto __pyx_L27;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":2953
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0);
          }
          __pyx_L27:;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":2957
 * 
 * 
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_r), (&__pyx_v_r_ML_back_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2959
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 */
        ((__pyx_v_C1[0])[0]) = ((__pyx_v_p[0])[0]);

        /* "Pythonreflectivity.pyx":2960
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0             # <<<<<<<<<<<<<<
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2961
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0
 *                 C1[0][1]=0             # <<<<<<<<<<<<<<
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 */
        ((__pyx_v_C1[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":2962
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 */
        ((__pyx_v_C1[1])[1]) = ((__pyx_v_p[1])[1]);

        /* "Pythonreflectivity.pyx":2963
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r_ML_back_1));

        /* "Pythonreflectivity.pyx":2964
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2965
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)             # <<<<<<<<<<<<<<
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r));

        /* "Pythonreflectivity.pyx":2966
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 */
        ((__pyx_v_C1[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[0])[0]));

        /* "Pythonreflectivity.pyx":2967
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]             # <<<<<<<<<<<<<<
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __Pyx_c_neg(((__pyx_v_C1[1])[0]));

        /* "Pythonreflectivity.pyx":2968
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]             # <<<<<<<<<<<<<<
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)
 */
        ((__pyx_v_C1[0])[1]) = __Pyx_c_neg(((__pyx_v_C1[0])[1]));

        /* "Pythonreflectivity.pyx":2969
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]             # <<<<<<<<<<<<<<
 *                 Invert2x2(&C1)
 * 
 */
        ((__pyx_v_C1[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[1])[1]));

        /* "Pythonreflectivity.pyx":2970
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C1));

        /* "Pythonreflectivity.pyx":2972
 *                 Invert2x2(&C1)
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1));

        /* "Pythonreflectivity.pyx":2973
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":2974
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_r_ML_back_1));

        /* "Pythonreflectivity.pyx":2975
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_C0));

        /* "Pythonreflectivity.pyx":2976
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_tprime));

        /* "Pythonreflectivity.pyx":2978
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[0])[0]));

        /* "Pythonreflectivity.pyx":2979
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[1])[0]));

        /* "Pythonreflectivity.pyx":2980
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[0])[1]));

        /* "Pythonreflectivity.pyx":2981
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[1])[1]));

        /* "Pythonreflectivity.pyx":2984
 * 
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_in_1));

        /* "Pythonreflectivity.pyx":2986
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_t_ML_in_1));

        /* "Pythonreflectivity.pyx":2987
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz1));

        /* "Pythonreflectivity.pyx":2988
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &t_ML_in_1)
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz2));

        /* "Pythonreflectivity.pyx":2990
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 * 
 *                 Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 * 
 *                 j=j-1
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1));

        /* "Pythonreflectivity.pyx":2992
 *                 Mult2x2_rightside(&p, &t_ML_in_1)
 * 
 *                 j=j-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":2995
 * 
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&r_ML_back_1, &p)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1));

      /* "Pythonreflectivity.pyx":2996
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)
 *             Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":2999
 * 
 * 
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_back_2), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_in_2), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

      /* "Pythonreflectivity.pyx":3001
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":3004
 * 
 * 
 *             C0[0][0]=(rtot[0])[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 */
      ((__pyx_v_C0[0])[0]) = (((__pyx_v_rtot[0])[0])[0]);

      /* "Pythonreflectivity.pyx":3005
 * 
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 */
      ((__pyx_v_C0[0])[1]) = (((__pyx_v_rtot[0])[0])[1]);

      /* "Pythonreflectivity.pyx":3006
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 */
      ((__pyx_v_C0[1])[0]) = (((__pyx_v_rtot[0])[1])[0]);

      /* "Pythonreflectivity.pyx":3007
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 */
      ((__pyx_v_C0[1])[1]) = (((__pyx_v_rtot[0])[1])[1]);

      /* "Pythonreflectivity.pyx":3008
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)             # <<<<<<<<<<<<<<
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_r_ML_back_2), (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":3009
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 */
      ((__pyx_v_C0[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[0])[0]));

      /* "Pythonreflectivity.pyx":3010
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 */
      ((__pyx_v_C0[0])[1]) = __Pyx_c_neg(((__pyx_v_C0[0])[1]));

      /* "Pythonreflectivity.pyx":3011
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)
 */
      ((__pyx_v_C0[1])[0]) = __Pyx_c_neg(((__pyx_v_C0[1])[0]));

      /* "Pythonreflectivity.pyx":3012
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&C0)
 * 
 */
      ((__pyx_v_C0[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[1])[1]));

      /* "Pythonreflectivity.pyx":3013
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":3016
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_2), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3017
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":3018
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_2));

      /* "Pythonreflectivity.pyx":3019
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":3020
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":3021
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":3022
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":3025
 * 
 * 
 *             Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==2):
 *               #  print "hallo"
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":3026
 * 
 *             Upper=MLCOMP[i][0]
 *             if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *               #  print "hallo"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3028
 *             if(LR[Upper].magdir==2):
 *               #  print "hallo"
 *                 MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *          #       Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3031
 * 
 *          #       Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *            #     print "Hallo"
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L28;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3034
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3036
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             j=1
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":3037
 * 
 *                 previously_magnetic=0
 *             j=1             # <<<<<<<<<<<<<<
 * 
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":3039
 *             j=1
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":3040
 * 
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":3041
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][j]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 * 
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3042
 *                 Upper=MLCOMP[i][j]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 * 
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3044
 *                 vz2=vz4
 * 
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3046
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3048
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3051
 * 
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3052
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L31;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3055
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3057
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3058
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L32;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3061
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *            #     print "4", vz1, vz2, vz3, vz4
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L32:;

          /* "Pythonreflectivity.pyx":3062
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L31:;

        /* "Pythonreflectivity.pyx":3065
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":3066
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":3067
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":3068
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":3069
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

        /* "Pythonreflectivity.pyx":3070
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":3071
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":3072
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":3073
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":3074
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":3076
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3077
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *               #  print "12"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3078
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *               #  print "12"
 *             if(i==(NLAYERS-1)):
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":3080
 *                 j=j+1
 *               #  print "12"
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      __pyx_t_1 = ((__pyx_v_i == (__pyx_v_NLAYERS - 1)) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3081
 *               #  print "12"
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3082
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3083
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3087
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3088
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3089
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3090
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3091
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3092
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3093
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3094
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3095
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3096
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          goto __pyx_L34;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3098
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 * 
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
        }
        __pyx_L34:;
        goto __pyx_L33;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3102
 * 
 *             else:
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3103
 *             else:
 *                 Upper=MLCOMP[i+1][0]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3104
 *                 Upper=MLCOMP[i+1][0]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3105
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3107
 *                 PHI_to_PSI(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==2):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 2) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3109
 *                 if(LR[Upper].magdir==2):
 *                   #  print "hallo"
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3111
 *                     MagneticPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3112
 * 
 *                     Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L35;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3115
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3117
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3118
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L36;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3121
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L36:;

          /* "Pythonreflectivity.pyx":3122
 *                    #     print "else"
 *                         Calculate_rt(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 *           #  print "5", vz1, vz2, vz3, vz4
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L35:;
      }
      __pyx_L33:;

      /* "Pythonreflectivity.pyx":3126
 *           #  print "5", vz1, vz2, vz3, vz4
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3127
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3128
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3129
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3130
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":3131
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":3132
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3133
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3134
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3135
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3138
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3139
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":3141
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":2582
 * 
 * 
 * cdef void Paratt_magnetic_y_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_y_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3144
 * 
 * 
 * cdef  inline double complex rootfunc2(double complex D21, double complex b, double complex exyexy, double complex D34):             # <<<<<<<<<<<<<<
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 */

static CYTHON_INLINE __pyx_t_double_complex __pyx_f_18Pythonreflectivity_rootfunc2(__pyx_t_double_complex __pyx_v_D21, __pyx_t_double_complex __pyx_v_b, __pyx_t_double_complex __pyx_v_exyexy, __pyx_t_double_complex __pyx_v_D34) {
  __pyx_t_double_complex __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rootfunc2", 0);

  /* "Pythonreflectivity.pyx":3145
 * 
 * cdef  inline double complex rootfunc2(double complex D21, double complex b, double complex exyexy, double complex D34):
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )             # <<<<<<<<<<<<<<
 * 
 * cdef void MagneticPhi_z(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):
 */
  __pyx_r = sqrt(__Pyx_c_diff(__pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0.5, 0), __Pyx_c_diff(__pyx_v_D21, __pyx_v_b))), __Pyx_c_prod(__pyx_v_exyexy, __pyx_v_D34)));
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":3144
 * 
 * 
 * cdef  inline double complex rootfunc2(double complex D21, double complex b, double complex exyexy, double complex D34):             # <<<<<<<<<<<<<<
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":3147
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 * cdef void MagneticPhi_z(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D23, exyexy, b, root
 * 
 */

static void __pyx_f_18Pythonreflectivity_MagneticPhi_z(__pyx_t_double_complex __pyx_v_epsxx, __pyx_t_double_complex __pyx_v_epsyy, __pyx_t_double_complex __pyx_v_epszz, __pyx_t_double_complex __pyx_v_epsg, __pyx_t_double_complex *__pyx_v_vz3, __pyx_t_double_complex *__pyx_v_vz4, __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], CYTHON_UNUSED double __pyx_v_vy, double __pyx_v_vyvy) {
  __pyx_t_double_complex __pyx_v_D34;
  __pyx_t_double_complex __pyx_v_D21;
  __pyx_t_double_complex __pyx_v_D23;
  __pyx_t_double_complex __pyx_v_exyexy;
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_root;
  __Pyx_RefNannyDeclarations
  __pyx_t_double_complex __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MagneticPhi_z", 0);

  /* "Pythonreflectivity.pyx":3150
 *     cdef double complex D34, D21, D23, exyexy, b, root
 * 
 *     D34=1.-vyvy/epszz             # <<<<<<<<<<<<<<
 *     D21=epsxx-vyvy
 *     D23=-epsg
 */
  __pyx_t_1 = __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_epszz))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_D34 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), __Pyx_c_quot(__pyx_t_1, __pyx_v_epszz));

  /* "Pythonreflectivity.pyx":3151
 * 
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy             # <<<<<<<<<<<<<<
 *     D23=-epsg
 *     exyexy=cquadr(epsg)
 */
  __pyx_v_D21 = __Pyx_c_diff(__pyx_v_epsxx, __pyx_t_double_complex_from_parts(__pyx_v_vyvy, 0));

  /* "Pythonreflectivity.pyx":3152
 *     D34=1.-vyvy/epszz
 *     D21=epsxx-vyvy
 *     D23=-epsg             # <<<<<<<<<<<<<<
 *     exyexy=cquadr(epsg)
 * 
 */
  __pyx_v_D23 = __Pyx_c_neg(__pyx_v_epsg);

  /* "Pythonreflectivity.pyx":3153
 *     D21=epsxx-vyvy
 *     D23=-epsg
 *     exyexy=cquadr(epsg)             # <<<<<<<<<<<<<<
 * 
 *     b=D34*epsyy
 */
  __pyx_v_exyexy = __pyx_f_18Pythonreflectivity_cquadr(__pyx_v_epsg);

  /* "Pythonreflectivity.pyx":3155
 *     exyexy=cquadr(epsg)
 * 
 *     b=D34*epsyy             # <<<<<<<<<<<<<<
 *     root=rootfunc2(D21, b, exyexy, D34)
 * 
 */
  __pyx_v_b = __Pyx_c_prod(__pyx_v_D34, __pyx_v_epsyy);

  /* "Pythonreflectivity.pyx":3156
 * 
 *     b=D34*epsyy
 *     root=rootfunc2(D21, b, exyexy, D34)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_root = __pyx_f_18Pythonreflectivity_rootfunc2(__pyx_v_D21, __pyx_v_b, __pyx_v_exyexy, __pyx_v_D34);

  /* "Pythonreflectivity.pyx":3159
 * 
 * 
 *     vz3[0]=sqrt( 0.5*(D21+b)+root)             # <<<<<<<<<<<<<<
 *     vz4[0]=sqrt( 0.5*(D21+b)-root)
 * 
 */
  (__pyx_v_vz3[0]) = sqrt(__Pyx_c_sum(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0.5, 0), __Pyx_c_sum(__pyx_v_D21, __pyx_v_b)), __pyx_v_root));

  /* "Pythonreflectivity.pyx":3160
 * 
 *     vz3[0]=sqrt( 0.5*(D21+b)+root)
 *     vz4[0]=sqrt( 0.5*(D21+b)-root)             # <<<<<<<<<<<<<<
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 */
  (__pyx_v_vz4[0]) = sqrt(__Pyx_c_diff(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0.5, 0), __Pyx_c_sum(__pyx_v_D21, __pyx_v_b)), __pyx_v_root));

  /* "Pythonreflectivity.pyx":3162
 *     vz4[0]=sqrt( 0.5*(D21+b)-root)
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23
 */
  ((__pyx_v_PHI1[0])[0]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":3163
 * 
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]             # <<<<<<<<<<<<<<
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23
 * 
 */
  ((__pyx_v_PHI1[0])[1]) = (__pyx_v_vz3[0]);

  /* "Pythonreflectivity.pyx":3164
 *     (PHI1[0])[0]=1. #Eigenvectors
 *     (PHI1[0])[1]=vz3[0]
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23             # <<<<<<<<<<<<<<
 * 
 *     (PHI1[0])[3]=(PHI1[0])[2]*(vz3[0]/D34)
 */
  __pyx_t_1 = __Pyx_c_diff(__pyx_f_18Pythonreflectivity_cquadr((__pyx_v_vz3[0])), __pyx_v_D21);
  if (unlikely(__Pyx_c_is_zero(__pyx_v_D23))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI1[0])[2]) = __Pyx_c_quot(__pyx_t_1, __pyx_v_D23);

  /* "Pythonreflectivity.pyx":3166
 *     (PHI1[0])[2]=(cquadr(vz3[0])-D21)/D23
 * 
 *     (PHI1[0])[3]=(PHI1[0])[2]*(vz3[0]/D34)             # <<<<<<<<<<<<<<
 * 
 *     (PHI2[0])[3]=1.
 */
  if (unlikely(__Pyx_c_is_zero(__pyx_v_D34))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI1[0])[3]) = __Pyx_c_prod(((__pyx_v_PHI1[0])[2]), __Pyx_c_quot((__pyx_v_vz3[0]), __pyx_v_D34));

  /* "Pythonreflectivity.pyx":3168
 *     (PHI1[0])[3]=(PHI1[0])[2]*(vz3[0]/D34)
 * 
 *     (PHI2[0])[3]=1.             # <<<<<<<<<<<<<<
 *     (PHI2[0])[2]=D34/vz4[0]
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23
 */
  ((__pyx_v_PHI2[0])[3]) = __pyx_t_double_complex_from_parts(1., 0);

  /* "Pythonreflectivity.pyx":3169
 * 
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=D34/vz4[0]             # <<<<<<<<<<<<<<
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23
 *     (PHI2[0])[1]=vz4[0]*(PHI2[0])[0]
 */
  if (unlikely(__Pyx_c_is_zero((__pyx_v_vz4[0])))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI2[0])[2]) = __Pyx_c_quot(__pyx_v_D34, (__pyx_v_vz4[0]));

  /* "Pythonreflectivity.pyx":3170
 *     (PHI2[0])[3]=1.
 *     (PHI2[0])[2]=D34/vz4[0]
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23             # <<<<<<<<<<<<<<
 *     (PHI2[0])[1]=vz4[0]*(PHI2[0])[0]
 * 
 */
  __pyx_t_1 = __Pyx_c_neg(__Pyx_c_diff((__pyx_v_vz4[0]), __Pyx_c_prod(__pyx_v_epsyy, ((__pyx_v_PHI2[0])[2]))));
  if (unlikely(__Pyx_c_is_zero(__pyx_v_D23))) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  ((__pyx_v_PHI2[0])[0]) = __Pyx_c_quot(__pyx_t_1, __pyx_v_D23);

  /* "Pythonreflectivity.pyx":3171
 *     (PHI2[0])[2]=D34/vz4[0]
 *     (PHI2[0])[0]=-(vz4[0]-epsyy*(PHI2[0])[2])/D23
 *     (PHI2[0])[1]=vz4[0]*(PHI2[0])[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
  ((__pyx_v_PHI2[0])[1]) = __Pyx_c_prod((__pyx_v_vz4[0]), ((__pyx_v_PHI2[0])[0]));

  /* "Pythonreflectivity.pyx":3147
 *     return sqrt( cquadr(0.5*(D21-b))-exyexy*D34 )
 * 
 * cdef void MagneticPhi_z(double complex epsxx, double complex epsyy, double complex epszz, double complex epsg, double complex *vz3, double complex *vz4, double complex (*PHI1)[4], double complex (*PHI2)[4], double vy, double vyvy):             # <<<<<<<<<<<<<<
 *     cdef double complex D34, D21, D23, exyexy, b, root
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.MagneticPhi_z", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3174
 * 
 * 
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

static void __pyx_f_18Pythonreflectivity_PHI_to_PSI_z(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], int __pyx_v_previously_magnetic) {
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PHI_to_PSI_z", 0);

  /* "Pythonreflectivity.pyx":3176
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):
 *     cdef double complex b,d
 *     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 */
  __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3177
 *     cdef double complex b,d
 *     if(previously_magnetic):
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])             # <<<<<<<<<<<<<<
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 * 
 */
    __pyx_v_b = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(((__pyx_v_PHI2[0])[2]), __Pyx_c_prod(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PHI1[0])[2]))));

    /* "Pythonreflectivity.pyx":3178
 *     if(previously_magnetic):
 *         b=2*((PHI2[0])[2]-(PHI2[0])[0]*(PHI1[0])[2])
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])             # <<<<<<<<<<<<<<
 * 
 *         (PSI1[0])[0]=(PHI2[0])[2]/b
 */
    __pyx_v_d = __Pyx_c_prod(__pyx_t_double_complex_from_parts(2, 0), __Pyx_c_diff(((__pyx_v_PHI1[0])[1]), __Pyx_c_prod(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PHI1[0])[3]))));

    /* "Pythonreflectivity.pyx":3180
 *         d=2*((PHI1[0])[1]-(PHI2[0])[1]*(PHI1[0])[3])
 * 
 *         (PSI1[0])[0]=(PHI2[0])[2]/b             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=1.0/d
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[0]) = __Pyx_c_quot(((__pyx_v_PHI2[0])[2]), __pyx_v_b);

    /* "Pythonreflectivity.pyx":3181
 * 
 *         (PSI1[0])[0]=(PHI2[0])[2]/b
 *         (PSI1[0])[1]=1.0/d             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":3182
 *         (PSI1[0])[0]=(PHI2[0])[2]/b
 *         (PSI1[0])[1]=1.0/d
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d
 * 
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_PHI2[0])[0]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[2]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":3183
 *         (PSI1[0])[1]=1.0/d
 *         (PSI1[0])[2]=-(PHI2[0])[0]/b
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d             # <<<<<<<<<<<<<<
 * 
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_PHI2[0])[1]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[3]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":3185
 *         (PSI1[0])[3]=-(PHI2[0])[1]/d
 * 
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d
 *         (PSI2[0])[2]=1.0/b
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_PHI1[0])[2]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":3186
 * 
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=1.0/b
 *         (PSI2[0])[3]=(PHI1[0])[1]/d
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_PHI1[0])[3]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_d);

    /* "Pythonreflectivity.pyx":3187
 *         (PSI2[0])[0]=-(PHI1[0])[2]/b
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d
 *         (PSI2[0])[2]=1.0/b             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=(PHI1[0])[1]/d
 *     else:
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero(__pyx_v_b))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_b);

    /* "Pythonreflectivity.pyx":3188
 *         (PSI2[0])[1]=-(PHI1[0])[3]/d
 *         (PSI2[0])[2]=1.0/b
 *         (PSI2[0])[3]=(PHI1[0])[1]/d             # <<<<<<<<<<<<<<
 *     else:
 *         (PSI1[0])[0]=0.5
 */
    if (unlikely(__Pyx_c_is_zero(__pyx_v_d))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3188; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[3]) = __Pyx_c_quot(((__pyx_v_PHI1[0])[1]), __pyx_v_d);
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":3190
 *         (PSI2[0])[3]=(PHI1[0])[1]/d
 *     else:
 *         (PSI1[0])[0]=0.5             # <<<<<<<<<<<<<<
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 */
    ((__pyx_v_PSI1[0])[0]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":3191
 *     else:
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_PHI1[0])[1])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI1[0])[1]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":3192
 *         (PSI1[0])[0]=0.5
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0             # <<<<<<<<<<<<<<
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 */
    ((__pyx_v_PSI1[0])[2]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3193
 *         (PSI1[0])[1]=0.5/(PHI1[0])[1]
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 */
    ((__pyx_v_PSI1[0])[3]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3194
 *         (PSI1[0])[2]=0
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]             # <<<<<<<<<<<<<<
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(0.5, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_PHI2[0])[2])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_PSI2[0])[2]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_PHI2[0])[2]));

    /* "Pythonreflectivity.pyx":3195
 *         (PSI1[0])[3]=0
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5             # <<<<<<<<<<<<<<
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0
 */
    ((__pyx_v_PSI2[0])[3]) = __pyx_t_double_complex_from_parts(0.5, 0);

    /* "Pythonreflectivity.pyx":3196
 *         (PSI2[0])[2]=0.5/(PHI2[0])[2]
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0             # <<<<<<<<<<<<<<
 *         (PSI2[0])[0]=0
 * 
 */
    ((__pyx_v_PSI2[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3197
 *         (PSI2[0])[3]=0.5
 *         (PSI2[0])[1]=0
 *         (PSI2[0])[0]=0             # <<<<<<<<<<<<<<
 * 
 * cdef void Calculate_rt_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \
 */
    ((__pyx_v_PSI2[0])[0]) = __pyx_t_double_complex_from_parts(0, 0);
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":3174
 * 
 * 
 * cdef void PHI_to_PSI_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], int previously_magnetic):             # <<<<<<<<<<<<<<
 *     cdef double complex b,d
 *     if(previously_magnetic):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.PHI_to_PSI_z", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3199
 *         (PSI2[0])[0]=0
 * 
 * cdef void Calculate_rt_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

static void __pyx_f_18Pythonreflectivity_Calculate_rt_z(__pyx_t_double_complex (*__pyx_v_PSI1)[4], __pyx_t_double_complex (*__pyx_v_PHI1)[4], __pyx_t_double_complex (*__pyx_v_PSI2)[4], __pyx_t_double_complex (*__pyx_v_PHI2)[4], __pyx_t_double_complex (*__pyx_v_r)[2][2], __pyx_t_double_complex (*__pyx_v_rprime)[2][2], __pyx_t_double_complex (*__pyx_v_t)[2][2], __pyx_t_double_complex (*__pyx_v_tprime)[2][2], int __pyx_v_Magnetic, __pyx_t_double_complex __pyx_v_vz1, __pyx_t_double_complex __pyx_v_vz2, __pyx_t_double_complex __pyx_v_vz3, __pyx_t_double_complex __pyx_v_vz4, double __pyx_v_sigma, double __pyx_v_k0) {
  __pyx_t_double_complex __pyx_v_J[2][4];
  __pyx_t_double_complex __pyx_v_b;
  __pyx_t_double_complex __pyx_v_d;
  __pyx_t_double_complex __pyx_v_div;
  double __pyx_v_roughfac;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __pyx_t_double_complex __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Calculate_rt_z", 0);

  /* "Pythonreflectivity.pyx":3204
 *     cdef double complex J[2][4]
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)             # <<<<<<<<<<<<<<
 *     if(Magnetic):
 * 
 */
  __pyx_v_roughfac = ((-0.5 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_sigma)) * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0));

  /* "Pythonreflectivity.pyx":3205
 *     cdef double complex b,d, div;
 *     cdef double roughfac=-0.5*quadr(sigma)*quadr(k0)
 *     if(Magnetic):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = (__pyx_v_Magnetic != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3210
 * 
 * 
 *         b=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI1[0])[2])), ((__pyx_v_PSI1[0])[0]));

    /* "Pythonreflectivity.pyx":3211
 * 
 *         b=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[0]
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI1[0])[3])), __Pyx_c_prod(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1])));

    /* "Pythonreflectivity.pyx":3212
 *         b=(PHI1[0])[2]*(PSI1[0])[2]+(PSI1[0])[0]
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":3213
 *         d=(PHI1[0])[3]*(PSI1[0])[3]+(PSI1[0])[1]*(PHI1[0])[1]
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":3217
 * 
 * 
 *         b=(PHI2[0])[1]*(PSI2[0])[1]+(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PSI2[0])[1])), ((__pyx_v_PSI2[0])[3]));

    /* "Pythonreflectivity.pyx":3218
 * 
 *         b=(PHI2[0])[1]*(PSI2[0])[1]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2])), __Pyx_c_prod(((__pyx_v_PSI2[0])[0]), ((__pyx_v_PHI2[0])[0])));

    /* "Pythonreflectivity.pyx":3219
 *         b=(PHI2[0])[1]*(PSI2[0])[1]+(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":3220
 *         d=(PHI2[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]*(PHI2[0])[0]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":3223
 * 
 * 
 *         b=(PHI2[0])[1]*(PSI1[0])[1]+(PSI1[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[1]), ((__pyx_v_PSI1[0])[1])), ((__pyx_v_PSI1[0])[3]));

    /* "Pythonreflectivity.pyx":3224
 * 
 *         b=(PHI2[0])[1]*(PSI1[0])[1]+(PSI1[0])[3]
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI1[0])[2])), __Pyx_c_prod(((__pyx_v_PHI2[0])[0]), ((__pyx_v_PSI1[0])[0])));

    /* "Pythonreflectivity.pyx":3225
 *         b=(PHI2[0])[1]*(PSI1[0])[1]+(PSI1[0])[3]
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))             # <<<<<<<<<<<<<<
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 */
    ((__pyx_v_J[0])[1]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":3226
 *         d=(PHI2[0])[2]*(PSI1[0])[2]+(PHI2[0])[0]*(PSI1[0])[0]
 *         J[0][1]=(b+d)*exp(roughfac*cquadr(vz1-vz4))
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))             # <<<<<<<<<<<<<<
 * 
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]
 */
    ((__pyx_v_J[0])[3]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":3228
 *         J[0][3]=(b-d)*exp(roughfac*cquadr(vz1+vz4))
 * 
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 */
    __pyx_v_b = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[2]), ((__pyx_v_PSI2[0])[2])), ((__pyx_v_PSI2[0])[0]));

    /* "Pythonreflectivity.pyx":3229
 * 
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]             # <<<<<<<<<<<<<<
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 */
    __pyx_v_d = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_PHI1[0])[3]), ((__pyx_v_PSI2[0])[3])), __Pyx_c_prod(((__pyx_v_PHI1[0])[1]), ((__pyx_v_PSI2[0])[1])));

    /* "Pythonreflectivity.pyx":3230
 *         b=(PHI1[0])[2]*(PSI2[0])[2]+(PSI2[0])[0]
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))             # <<<<<<<<<<<<<<
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))
 * 
 */
    ((__pyx_v_J[1])[0]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz2, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":3231
 *         d=(PHI1[0])[3]*(PSI2[0])[3]+(PHI1[0])[1]*(PSI2[0])[1]
 *         J[1][0]=(b+d)*exp(roughfac*cquadr(vz2-vz3))
 *         J[1][2]=(b-d)*exp(roughfac*cquadr(vz2+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[1])[2]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz2, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":3234
 * 
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])             # <<<<<<<<<<<<<<
 * 
 * #        (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 */
    __pyx_v_div = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[0])), __Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[0])));

    /* "Pythonreflectivity.pyx":3241
 * #        (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 */
    __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[2])), __Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[2])));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3242
 * 
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 */
    __pyx_t_2 = __Pyx_c_neg(__Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[3])), __Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[3]))));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[0])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3243
 *         (r[0])[0][0]=(J[1][1]*J[0][2]-J[0][1]*J[1][2])/div # Incoming 1 reflected 1
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2
 * 
 */
    __pyx_t_2 = __Pyx_c_neg(__Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[2])), __Pyx_c_prod(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[2]))));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3243; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[1])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3244
 *         (r[0])[0][1]=-(J[1][1]*J[0][3]-J[0][1]*J[1][3])/div # Incoming 2 reflected 1
 *         (r[0])[1][0]=-(J[0][0]*J[1][2]-J[1][0]*J[0][2])/div # Incoming 1 reflected 2
 *         (r[0])[1][1]=(J[0][0]*J[1][3]-J[1][0]*J[0][3])/div # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[0]), ((__pyx_v_J[1])[3])), __Pyx_c_prod(((__pyx_v_J[1])[0]), ((__pyx_v_J[0])[3])));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3244; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3248
 * 
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3249
 * 
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[0])[1]));

    /* "Pythonreflectivity.pyx":3250
 *         (t[0])[0][0]=J[0][2]*(r[0])[0][0]+J[0][3]*(r[0])[1][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[0]))), ((__pyx_v_J[1])[0]));

    /* "Pythonreflectivity.pyx":3251
 *         (t[0])[0][1]=J[0][2]*(r[0])[0][1]+J[0][3]*(r[0])[1][1]+J[0][1] # Incoming 2 transmitted 1
 *         (t[0])[1][0]=J[1][2]*(r[0])[0][0]+J[1][3]*(r[0])[1][0]+J[1][0] # Incoming 1 transmitted 2
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum(__Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_r[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1]))), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3253
 *         (t[0])[1][1]=J[1][2]*(r[0])[0][1]+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         div=(J[0][1]*J[1][0]-J[1][1]*J[0][0])             # <<<<<<<<<<<<<<
 * 
 * #        (tprime[0])[0][0]=-J[1][1]/div
 */
    __pyx_v_div = __Pyx_c_diff(__Pyx_c_prod(((__pyx_v_J[0])[1]), ((__pyx_v_J[1])[0])), __Pyx_c_prod(((__pyx_v_J[1])[1]), ((__pyx_v_J[0])[0])));

    /* "Pythonreflectivity.pyx":3259
 * #        (tprime[0])[1][0]=J[1][0]/div
 * #        (tprime[0])[1][1]=-J[0][0]/div
 *         (tprime[0])[0][0]=-J[1][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=-J[0][1]/div
 *         (tprime[0])[1][0]=-J[1][0]/div
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[1])[1]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3260
 * #        (tprime[0])[1][1]=-J[0][0]/div
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=-J[0][1]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=-J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[0])[1]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[0])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3261
 *         (tprime[0])[0][0]=-J[1][1]/div
 *         (tprime[0])[0][1]=-J[0][1]/div
 *         (tprime[0])[1][0]=-J[1][0]/div             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[1])[0]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3261; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[1])[0]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3262
 *         (tprime[0])[0][1]=-J[0][1]/div
 *         (tprime[0])[1][0]=-J[1][0]/div
 *         (tprime[0])[1][1]=-J[0][0]/div             # <<<<<<<<<<<<<<
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[0])[0]));
    if (unlikely(__Pyx_c_is_zero(__pyx_v_div))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, __pyx_v_div);

    /* "Pythonreflectivity.pyx":3264
 *         (tprime[0])[1][1]=-J[0][0]/div
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":3265
 * 
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[0])[3]), (((__pyx_v_tprime[0])[1])[1])));

    /* "Pythonreflectivity.pyx":3266
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])+J[0][3]*((tprime[0])[1][0])
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[0])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[0])));

    /* "Pythonreflectivity.pyx":3267
 *         (rprime[0])[0][1]=J[0][2]*((tprime[0])[0][1])+J[0][3]*((tprime[0])[1][1])
 *         (rprime[0])[1][0]=J[1][2]*((tprime[0])[0][0])+J[1][3]*((tprime[0])[1][0])
 *         (rprime[0])[1][1]=J[1][2]*((tprime[0])[0][1])+J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[2]), (((__pyx_v_tprime[0])[0])[1])), __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1])));
    goto __pyx_L3;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":3272
 *     else:
 * 
 *         b=(PSI1[0])[0]             # <<<<<<<<<<<<<<
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 */
    __pyx_v_b = ((__pyx_v_PSI1[0])[0]);

    /* "Pythonreflectivity.pyx":3273
 * 
 *         b=(PSI1[0])[0]
 *         d=(PSI1[0])[1]*(PHI1[0])[1]             # <<<<<<<<<<<<<<
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 */
    __pyx_v_d = __Pyx_c_prod(((__pyx_v_PSI1[0])[1]), ((__pyx_v_PHI1[0])[1]));

    /* "Pythonreflectivity.pyx":3275
 *         d=(PSI1[0])[1]*(PHI1[0])[1]
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))             # <<<<<<<<<<<<<<
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))
 * 
 */
    ((__pyx_v_J[0])[0]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":3276
 * 
 *         J[0][0]=(b+d)*exp(roughfac*cquadr(vz1-vz3))
 *         J[0][2]=(b-d)*exp(roughfac*cquadr(vz1+vz3))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[0])[2]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz1, __pyx_v_vz3)))));

    /* "Pythonreflectivity.pyx":3279
 * 
 * 
 *         b=(PSI2[0])[3]             # <<<<<<<<<<<<<<
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 */
    __pyx_v_b = ((__pyx_v_PSI2[0])[3]);

    /* "Pythonreflectivity.pyx":3280
 * 
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]             # <<<<<<<<<<<<<<
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 */
    __pyx_v_d = __Pyx_c_prod(((__pyx_v_PHI2[0])[2]), ((__pyx_v_PSI2[0])[2]));

    /* "Pythonreflectivity.pyx":3281
 *         b=(PSI2[0])[3]
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))             # <<<<<<<<<<<<<<
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))
 * 
 */
    ((__pyx_v_J[1])[1]) = __Pyx_c_prod(__Pyx_c_sum(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_diff(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":3282
 *         d=(PHI2[0])[2]*(PSI2[0])[2]
 *         J[1][1]=(b+d)*exp(roughfac*cquadr(vz2-vz4))
 *         J[1][3]=(b-d)*exp(roughfac*cquadr(vz2+vz4))             # <<<<<<<<<<<<<<
 * 
 * 
 */
    ((__pyx_v_J[1])[3]) = __Pyx_c_prod(__Pyx_c_diff(__pyx_v_b, __pyx_v_d), exp(__Pyx_c_prod(__pyx_t_double_complex_from_parts(__pyx_v_roughfac, 0), __pyx_f_18Pythonreflectivity_cquadr(__Pyx_c_sum(__pyx_v_vz2, __pyx_v_vz4)))));

    /* "Pythonreflectivity.pyx":3285
 * 
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[0])[2]));
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[0])[0])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3286
 * 
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1             # <<<<<<<<<<<<<<
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 */
    (((__pyx_v_r[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3287
 *         (r[0])[0][0]=-J[0][2]/J[0][0] # Incoming 1 reflected 1
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2             # <<<<<<<<<<<<<<
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2
 * 
 */
    (((__pyx_v_r[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3288
 *         (r[0])[0][1]=0 # Incoming 2 reflected 1
 *         (r[0])[1][0]=0 #/ Incoming 1 reflected 2
 *         (r[0])[1][1]=-J[1][3]/J[1][1] # Incoming 2 reflected 2             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __Pyx_c_neg(((__pyx_v_J[1])[3]));
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[1])[1])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3288; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_r[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3291
 * 
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 */
    (((__pyx_v_t[0])[0])[0]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_r[0])[0])[0])), ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3292
 * 
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1             # <<<<<<<<<<<<<<
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 */
    (((__pyx_v_t[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3293
 *         (t[0])[0][0]=+J[0][2]*(r[0])[0][0]+J[0][0] # Incoming 1 transmitted 1
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2             # <<<<<<<<<<<<<<
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 */
    (((__pyx_v_t[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3294
 *         (t[0])[0][1]=0 # Incoming 2 transmitted 1
 *         (t[0])[1][0]=0 # Incoming 1 transmitted 2
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2             # <<<<<<<<<<<<<<
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 */
    (((__pyx_v_t[0])[1])[1]) = __Pyx_c_sum(__Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_r[0])[1])[1])), ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3296
 *         (t[0])[1][1]=+J[1][3]*(r[0])[1][1]+J[1][1] # Incoming 2 transmitted 2
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]             # <<<<<<<<<<<<<<
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[0])[0])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[0])[0]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[0])[0]));

    /* "Pythonreflectivity.pyx":3297
 * 
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 */
    (((__pyx_v_tprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3298
 *         (tprime[0])[0][0]=+1.0/J[0][0]
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (tprime[0])[1][1]=+1.0/J[1][1]
 * 
 */
    (((__pyx_v_tprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3299
 *         (tprime[0])[0][1]=0
 *         (tprime[0])[1][0]=0
 *         (tprime[0])[1][1]=+1.0/J[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_2 = __pyx_t_double_complex_from_parts(1.0, 0);
    if (unlikely(__Pyx_c_is_zero(((__pyx_v_J[1])[1])))) {
      #ifdef WITH_THREAD
      PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
      #endif
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      #ifdef WITH_THREAD
      PyGILState_Release(__pyx_gilstate_save);
      #endif
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3299; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((__pyx_v_tprime[0])[1])[1]) = __Pyx_c_quot(__pyx_t_2, ((__pyx_v_J[1])[1]));

    /* "Pythonreflectivity.pyx":3306
 * #        (rprime[0])[1][0]=0
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])             # <<<<<<<<<<<<<<
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 */
    (((__pyx_v_rprime[0])[0])[0]) = __Pyx_c_prod(((__pyx_v_J[0])[2]), (((__pyx_v_tprime[0])[0])[0]));

    /* "Pythonreflectivity.pyx":3307
 * #        (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 */
    (((__pyx_v_rprime[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3308
 *         (rprime[0])[0][0]=J[0][2]*((tprime[0])[0][0])
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0             # <<<<<<<<<<<<<<
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])
 * 
 */
    (((__pyx_v_rprime[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

    /* "Pythonreflectivity.pyx":3309
 *         (rprime[0])[0][1]=0
 *         (rprime[0])[1][0]=0
 *         (rprime[0])[1][1]=J[1][3]*((tprime[0])[1][1])             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (((__pyx_v_rprime[0])[1])[1]) = __Pyx_c_prod(((__pyx_v_J[1])[3]), (((__pyx_v_tprime[0])[1])[1]));
  }
  __pyx_L3:;

  /* "Pythonreflectivity.pyx":3199
 *         (PSI2[0])[0]=0
 * 
 * cdef void Calculate_rt_z(double complex (*PSI1)[4], double complex (*PHI1)[4], double complex (*PSI2)[4], double complex (*PHI2)[4], double complex (*r)[2][2], double complex (*rprime)[2][2], double complex (*t)[2][2], double complex (*tprime)[2][2], int Magnetic, \             # <<<<<<<<<<<<<<
 *                        double complex vz1, double complex vz2, double complex vz3, double complex vz4, double sigma, double k0):
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_WriteUnraisable("Pythonreflectivity.Calculate_rt_z", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3312
 * 
 * 
 * cdef void Paratt_magnetic_z(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  long __pyx_t_9;
  long __pyx_t_10;
  long __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_z", 0);

  /* "Pythonreflectivity.pyx":3315
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3316
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":3318
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":3319
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3321
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3322
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy);

  /* "Pythonreflectivity.pyx":3323
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":3324
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":3325
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":3326
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":3327
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":3330
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":3352
 * 
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3353
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *   #  cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3360
 * 
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":3361
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":3363
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3364
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3365
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3367
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":3369
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 1);

      /* "Pythonreflectivity.pyx":3372
 * 
 * 
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3373
 * 
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3374
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3375
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3376
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3377
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3378
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3379
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3381
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L5;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":3384
 *         else: # Not magnetic
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 */
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":3385
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 0);

      /* "Pythonreflectivity.pyx":3387
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3388
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3389
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3390
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3391
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3392
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3393
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3394
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     #    print vz1, vz2
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3395
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     #    print vz1, vz2
 *     else:
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
    }
    __pyx_L5:;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":3398
 *     #    print vz1, vz2
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 */
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3399
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":3400
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 */
    __pyx_t_1 = ((((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3)) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3401
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3403
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3404
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L7;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3407
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3408
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":3409
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==3):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":3411
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3413
 *             if(LR[Upper].magdir==3):
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3415
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3418
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3420
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":3422
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3423
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3427
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime,1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L6;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":3435
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
      __pyx_v_vz1 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex);

      /* "Pythonreflectivity.pyx":3436
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_v_vz2 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez);

      /* "Pythonreflectivity.pyx":3437
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_v_vz3 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex);

      /* "Pythonreflectivity.pyx":3438
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_v_vz4 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

      /* "Pythonreflectivity.pyx":3439
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3440
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3441
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3442
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3443
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3444
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3444; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":3445
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3446
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3448
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3449
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 *          #   print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *          #   print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3454
 *          #   print k0, "1", LR[1].Thickness, vz3, vz4
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_7 = __Pyx_c_diff(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_8 = __Pyx_c_sum(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));

      /* "Pythonreflectivity.pyx":3455
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3456
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3457
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":3460
 * 
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":3461
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":3463
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3465
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3466
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3468
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":3470
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3471
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3473
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3476
 *                   #  print "hallo"
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3477
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3478
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L13;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3482
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3484
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3485
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
            goto __pyx_L14;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3488
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":3489
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3492
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3493
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3494
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3495
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3496
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3497
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3498
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3499
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3500
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3501
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L15;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3504
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":3507
 * 
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3509
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3511
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3513
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":3515
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3516
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3517
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3518
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3521
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3522
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3523
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
        goto __pyx_L16;
      }
      __pyx_L16:;
      goto __pyx_L11;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":3531
 * 
 *           #  print "1"
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":3533
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":3534
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3535
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==3):
 *                 ML_is_diagonal=0
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3536
 *             vz1=vz3
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3537
 *             vz2=vz4
 *             if(LR[Upper].magdir==3):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":3539
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3541
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 * 
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

        /* "Pythonreflectivity.pyx":3542
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L17;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3546
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3548
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3549
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L18;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3552
 *                 else:
 *                #     print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 * 
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":3553
 *                #     print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":3555
 *                 previously_magnetic=0
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3556
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)
 *             Mult2x2_rightside(&p, &t_ML_in_1) # p(A) * t(AB)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1));

      /* "Pythonreflectivity.pyx":3559
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3560
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             j=1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3562
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":3563
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":3564
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
        __pyx_t_9 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_9, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":3565
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3566
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3567
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3570
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3572
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3573
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":3575
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3576
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L21;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3579
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3581
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3582
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
            goto __pyx_L22;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3585
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":3586
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":3588
 *                     previously_magnetic=0
 * 
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":3590
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":3592
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":3594
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":3597
 * 
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":3598
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":3599
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":3600
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &p)
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":3602
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":3603
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &p)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":3605
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_in_1), (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":3606
 * 
 *                 Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":3609
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *            #     if(j==1):
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3610
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *            #     if(j==1):
 *             #        print "p C components"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3615
 *             #        print Upper, LR[Upper].Thickness, vz3, vz4
 * 
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":3618
 * 
 * 
 *             if(ML_is_diagonal):             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 */
      __pyx_t_1 = (__pyx_v_ML_is_diagonal != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3619
 * 
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])             # <<<<<<<<<<<<<<
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 * 
 */
        __pyx_t_7 = __Pyx_c_prod(((__pyx_v_r_ML_in_1[0])[0]), __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])), ((__pyx_v_MLREP[__pyx_v_i]) - 1))));
        __pyx_t_8 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_t_ML_back_1[0])[0])));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        ((__pyx_v_r_ML_in_2[0])[0]) = __Pyx_c_quot(__pyx_t_7, __pyx_t_8);

        /* "Pythonreflectivity.pyx":3620
 *             if(ML_is_diagonal):
 *                 r_ML_in_2[0][0]=r_ML_in_1[0][0]*(1-ipow(t_ML_in_1[0][0]*t_ML_back_1[0][0], MLREP[i]-1))/(1-t_ML_in_1[0][0]*t_ML_back_1[0][0])
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])             # <<<<<<<<<<<<<<
 * 
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 */
        __pyx_t_8 = __Pyx_c_prod(((__pyx_v_r_ML_in_1[1])[1]), __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __pyx_f_18Pythonreflectivity_ipow(__Pyx_c_prod(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])), ((__pyx_v_MLREP[__pyx_v_i]) - 1))));
        __pyx_t_7 = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), __Pyx_c_prod(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_t_ML_back_1[1])[1])));
        if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        ((__pyx_v_r_ML_in_2[1])[1]) = __Pyx_c_quot(__pyx_t_8, __pyx_t_7);

        /* "Pythonreflectivity.pyx":3622
 *                 r_ML_in_2[1][1]=r_ML_in_1[1][1]*(1-ipow(t_ML_in_1[1][1]*t_ML_back_1[1][1], MLREP[i]-1))/(1-t_ML_in_1[1][1]*t_ML_back_1[1][1])
 * 
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 */
        ((__pyx_v_t_ML_in_1[0])[0]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":3623
 * 
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 */
        ((__pyx_v_t_ML_in_1[1])[1]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_in_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":3624
 *                 t_ML_in_1[0][0]=ipow(t_ML_in_1[0][0],  MLREP[i]-1)
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)
 * 
 */
        ((__pyx_v_t_ML_back_1[0])[0]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[0])[0]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

        /* "Pythonreflectivity.pyx":3625
 *                 t_ML_in_1[1][1]=ipow(t_ML_in_1[1][1],  MLREP[i]-1)
 *                 t_ML_back_1[0][0]=ipow(t_ML_back_1[0][0],  MLREP[i]-1)
 *                 t_ML_back_1[1][1]=ipow(t_ML_back_1[1][1],  MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        ((__pyx_v_t_ML_back_1[1])[1]) = __pyx_f_18Pythonreflectivity_ipow(((__pyx_v_t_ML_back_1[1])[1]), ((__pyx_v_MLREP[__pyx_v_i]) - 1));
        goto __pyx_L23;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3629
 *             else:
 * 
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 * 
 *             ML_is_diagonal=1
 */
        __pyx_f_18Pythonreflectivity_Calculate_Multilayer_equation((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_in_1), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));
      }
      __pyx_L23:;

      /* "Pythonreflectivity.pyx":3631
 *                 Calculate_Multilayer_equation(&t_ML_back_1, &t_ML_in_1, &r_ML_in_1, &r_ML_in_2, MLREP[i]-1)
 * 
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":3635
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_1), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3636
 * 
 *             Mult2x2_rightside(&t_ML_back_1, rtot)
 *             Mult2x2_leftside(rtot, &t_ML_in_1) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_1));

      /* "Pythonreflectivity.pyx":3640
 * 
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":3641
 * 
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":3642
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":3643
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":3646
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":3648
 *             j=1
 *          #   print "9"
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":3649
 *          #   print "9"
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":3650
 *             while j<MLLENGTH[i]:
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":3651
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":3652
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3654
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3656
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3659
 * 
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3660
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L26;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3663
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3665
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3666
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L27;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3669
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *               #  print "11"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L27:;

          /* "Pythonreflectivity.pyx":3670
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":3672
 *                     previously_magnetic=0
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":3673
 *               #  print "11"
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":3674
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":3675
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":3676
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":3677
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":3678
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":3679
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":3682
 * 
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3683
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *             vz1=vz3
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":3684
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":3685
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3686
 *                 j=j+1
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3687
 *             vz1=vz3
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
      __pyx_t_1 = ((__pyx_v_i == (__pyx_v_NLAYERS - 1)) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3688
 *             vz2=vz4
 *             if(i==(NLAYERS-1)):
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3692
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3693
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3694
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3695
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3696
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3697
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3698
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3699
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3700
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3701
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          goto __pyx_L29;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3703
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 *             else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
        }
        __pyx_L29:;
        goto __pyx_L28;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3706
 *               #  print "14"
 *             else:
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3707
 *             else:
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":3709
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3711
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3713
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3714
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L30;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3717
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3719
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3720
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L31;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3723
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "16"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L31:;

          /* "Pythonreflectivity.pyx":3724
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "16"
 *          #   print "17"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L30:;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":3727
 *              #   print "16"
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3728
 *          #   print "17"
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3729
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3730
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":3731
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3732
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3733
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3734
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3737
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *          #   print "18"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3738
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *          #   print "18"
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":3740
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *          #   print "18"
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * cdef void Paratt_magnetic_z_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":3312
 * 
 * 
 * cdef void Paratt_magnetic_z(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_z", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":3742
 *         i=i+1
 * 
 * cdef void Paratt_magnetic_z_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

static void __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_HS, double __pyx_v_th, double __pyx_v_wavelength, __pyx_t_double_complex (*__pyx_v_rtot)[2][2]) {
  double __pyx_v_k0;
  double __pyx_v_sintheta;
  double __pyx_v_vy;
  double __pyx_v_vyvy;
  int __pyx_v_NLAYERS;
  int *__pyx_v_MLLENGTH;
  int **__pyx_v_MLCOMP;
  int *__pyx_v_MLREP;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_LR;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_v_Lower;
  int __pyx_v_Upper;
  CYTHON_UNUSED int __pyx_v_ML_is_diagonal;
  __pyx_t_double_complex __pyx_v_PHI1[4];
  __pyx_t_double_complex __pyx_v_PSI1[4];
  __pyx_t_double_complex __pyx_v_PHI2[4];
  __pyx_t_double_complex __pyx_v_PSI2[4];
  __pyx_t_double_complex __pyx_v_vz1;
  __pyx_t_double_complex __pyx_v_vz2;
  __pyx_t_double_complex __pyx_v_vz3;
  __pyx_t_double_complex __pyx_v_vz4;
  __pyx_t_double_complex __pyx_v_r[2][2];
  __pyx_t_double_complex __pyx_v_rprime[2][2];
  __pyx_t_double_complex __pyx_v_t[2][2];
  __pyx_t_double_complex __pyx_v_tprime[2][2];
  __pyx_t_double_complex __pyx_v_p[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_t_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_in_2[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_1[2][2];
  __pyx_t_double_complex __pyx_v_r_ML_back_2[2][2];
  __pyx_t_double_complex __pyx_v_C0[2][2];
  __pyx_t_double_complex __pyx_v_C1[2][2];
  int __pyx_v_Cap;
  int __pyx_v_previously_magnetic;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int *__pyx_t_4;
  int **__pyx_t_5;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_t_6;
  __pyx_t_double_complex __pyx_t_7;
  __pyx_t_double_complex __pyx_t_8;
  long __pyx_t_9;
  long __pyx_t_10;
  long __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Paratt_magnetic_z_MS", 0);

  /* "Pythonreflectivity.pyx":3745
 * 
 * 
 *     if((th<=0)|(th>=90)):             # <<<<<<<<<<<<<<
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 */
  __pyx_t_1 = (((__pyx_v_th <= 0.0) | (__pyx_v_th >= 90.0)) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3746
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":3748
 *         raise Exception("Theta must be in the range 0<theta<90")
 * 
 *     cdef double k0=two_times_pi/wavelength             # <<<<<<<<<<<<<<
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 */
  if (unlikely(__pyx_v_wavelength == 0)) {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
    #endif
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    #ifdef WITH_THREAD
    PyGILState_Release(__pyx_gilstate_save);
    #endif
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3748; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_k0 = (__pyx_v_18Pythonreflectivity_two_times_pi / __pyx_v_wavelength);

  /* "Pythonreflectivity.pyx":3749
 * 
 *     cdef double k0=two_times_pi/wavelength
 *     cdef double sintheta=sin(deg_to_rad*th)             # <<<<<<<<<<<<<<
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 */
  __pyx_v_sintheta = sin((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3751
 *     cdef double sintheta=sin(deg_to_rad*th)
 * 
 *     cdef double vy=cos(deg_to_rad*th)             # <<<<<<<<<<<<<<
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 */
  __pyx_v_vy = cos((__pyx_v_18Pythonreflectivity_deg_to_rad * __pyx_v_th));

  /* "Pythonreflectivity.pyx":3752
 * 
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)             # <<<<<<<<<<<<<<
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 */
  __pyx_v_vyvy = __pyx_f_18Pythonreflectivity_quadr(__pyx_v_vy);

  /* "Pythonreflectivity.pyx":3753
 *     cdef double vy=cos(deg_to_rad*th)
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers             # <<<<<<<<<<<<<<
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 */
  __pyx_t_3 = (__pyx_v_HS[0]).NLayers;
  __pyx_v_NLAYERS = __pyx_t_3;

  /* "Pythonreflectivity.pyx":3754
 *     cdef double vyvy=quadr(vy)
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH             # <<<<<<<<<<<<<<
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLLENGTH;
  __pyx_v_MLLENGTH = __pyx_t_4;

  /* "Pythonreflectivity.pyx":3755
 *     cdef int NLAYERS=(HS[0]).NLayers
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP             # <<<<<<<<<<<<<<
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR
 */
  __pyx_t_5 = (__pyx_v_HS[0]).MLCOMP;
  __pyx_v_MLCOMP = __pyx_t_5;

  /* "Pythonreflectivity.pyx":3756
 *     cdef int* MLLENGTH=(HS[0]).MLLENGTH
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP             # <<<<<<<<<<<<<<
 *     cdef CLayer* LR=(HS[0]).LR
 *     cdef int i,j
 */
  __pyx_t_4 = (__pyx_v_HS[0]).MLREP;
  __pyx_v_MLREP = __pyx_t_4;

  /* "Pythonreflectivity.pyx":3757
 *     cdef int** MLCOMP=(HS[0]).MLCOMP
 *     cdef int* MLREP=(HS[0]).MLREP
 *     cdef CLayer* LR=(HS[0]).LR             # <<<<<<<<<<<<<<
 *     cdef int i,j
 *     cdef int Lower, Upper
 */
  __pyx_t_6 = (__pyx_v_HS[0]).LR;
  __pyx_v_LR = __pyx_t_6;

  /* "Pythonreflectivity.pyx":3760
 *     cdef int i,j
 *     cdef int Lower, Upper
 *     cdef int ML_is_diagonal=1             # <<<<<<<<<<<<<<
 *     cdef double complex PHI1[4]
 *     cdef double complex PSI1[4]
 */
  __pyx_v_ML_is_diagonal = 1;

  /* "Pythonreflectivity.pyx":3785
 *     cdef double complex C1[2][2]
 * 
 *     p[0][1]=0             # <<<<<<<<<<<<<<
 *     p[1][0]=0
 *    # print "0"
 */
  ((__pyx_v_p[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3786
 * 
 *     p[0][1]=0
 *     p[1][0]=0             # <<<<<<<<<<<<<<
 *    # print "0"
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 */
  ((__pyx_v_p[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

  /* "Pythonreflectivity.pyx":3790
 *    # cdef double complex test=LR[MLCOMP[0][0]].ey
 * 
 *     cdef int Cap=NLAYERS-1             # <<<<<<<<<<<<<<
 *     cdef int previously_magnetic=0
 *    # print "1"
 */
  __pyx_v_Cap = (__pyx_v_NLAYERS - 1);

  /* "Pythonreflectivity.pyx":3791
 * 
 *     cdef int Cap=NLAYERS-1
 *     cdef int previously_magnetic=0             # <<<<<<<<<<<<<<
 *    # print "1"
 *     if(NLAYERS==1):
 */
  __pyx_v_previously_magnetic = 0;

  /* "Pythonreflectivity.pyx":3793
 *     cdef int previously_magnetic=0
 *    # print "1"
 *     if(NLAYERS==1):             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic
 */
  __pyx_t_1 = ((__pyx_v_NLAYERS == 1) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":3794
 *    # print "1"
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3795
 *     if(NLAYERS==1):
 *         Upper=MLCOMP[0][0]
 *         if(LR[Upper].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
    __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3797
 *         if(LR[Upper].magdir==3): # magnetic
 * 
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)
 */
      __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":3799
 *             MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 * 
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 1);

      /* "Pythonreflectivity.pyx":3802
 * 
 * 
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3803
 * 
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3804
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3805
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3806
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3807
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3808
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             #Vacuum:
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3809
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3811
 *             PHI2[0]=0
 *             #Vacuum:
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         else: # Not magnetic
 * 
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L5;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":3814
 *         else: # Not magnetic
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 */
      __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

      /* "Pythonreflectivity.pyx":3815
 * 
 *             NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)             # <<<<<<<<<<<<<<
 *         #Vacuum:
 *             PHI1[0]=1
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), 0);

      /* "Pythonreflectivity.pyx":3817
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, 0)
 *         #Vacuum:
 *             PHI1[0]=1             # <<<<<<<<<<<<<<
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3818
 *         #Vacuum:
 *             PHI1[0]=1
 *             PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3819
 *             PHI1[0]=1
 *             PHI1[1]=sintheta
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3820
 *             PHI1[1]=sintheta
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3821
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1             # <<<<<<<<<<<<<<
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1, 0);

      /* "Pythonreflectivity.pyx":3822
 *             PHI1[3]=0
 *             PHI2[3]=1
 *             PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

      /* "Pythonreflectivity.pyx":3823
 *             PHI2[3]=1
 *             PHI2[2]=sintheta
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3824
 *             PHI2[2]=sintheta
 *             PHI2[1]=0
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)
 *     #    print vz1, vz2
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3825
 *             PHI2[1]=0
 *             PHI2[0]=0
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 0, vz1, vz2, sintheta,sintheta,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *     #    print vz1, vz2
 *     else:
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
    }
    __pyx_L5:;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":3828
 *     #    print vz1, vz2
 *     else:
 *         Lower=MLCOMP[0][0]             # <<<<<<<<<<<<<<
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 */
    __pyx_v_Lower = ((__pyx_v_MLCOMP[0])[0]);

    /* "Pythonreflectivity.pyx":3829
 *     else:
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]             # <<<<<<<<<<<<<<
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic
 */
    __pyx_v_Upper = ((__pyx_v_MLCOMP[1])[0]);

    /* "Pythonreflectivity.pyx":3830
 *         Lower=MLCOMP[0][0]
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):             # <<<<<<<<<<<<<<
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 */
    __pyx_t_1 = ((((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) | ((__pyx_v_LR[__pyx_v_Upper]).magdir == 3)) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3831
 *         Upper=MLCOMP[1][0]
 *         if((LR[Lower].magdir==3)|(LR[Upper].magdir==3)):
 *             if(LR[Lower].magdir==3): # magnetic             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3833
 *             if(LR[Lower].magdir==3): # magnetic
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=1
 *             else:
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3834
 * 
 *                 MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L7;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3837
 *             else:
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3838
 * 
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L7:;

      /* "Pythonreflectivity.pyx":3839
 *                 NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                 previously_magnetic=0
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==3):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":3841
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3843
 *             if(LR[Upper].magdir==3):
 * 
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3845
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "here are the phi"
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3848
 *             else:
 *               #  print "here are the phi"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3850
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L8:;

      /* "Pythonreflectivity.pyx":3852
 *                 previously_magnetic=0
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3853
 *            # p=tbtmatrix(exp(2j*k0*LR[1].Thickness*vz3),0,0,exp(2j*k0*LR[1].Thickness*vz4))
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * #            print "here p is calculated for the normal structure", p[0][0], p[1][1]
 * #            print "Components:"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3857
 * #            print "Components:"
 * #            print k0, Upper, LR[1].Thickness, vz3, vz4
 *             Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, rtot, &rprime, &t, &tprime, 1 , vz1, vz2, vz3,vz4,LR[MLCOMP[0][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *         #    print "here p is calculated for the normal structure", p[0][0], p[1][1]
 *        #     print "Components:"
 */
      __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_rtot, (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness, __pyx_v_k0);
      goto __pyx_L6;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":3865
 * 
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)             # <<<<<<<<<<<<<<
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 */
      __pyx_v_vz1 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ex);

      /* "Pythonreflectivity.pyx":3866
 *           #  print "lowest interface is not magnetic"
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)             # <<<<<<<<<<<<<<
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 */
      __pyx_v_vz2 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ez);

      /* "Pythonreflectivity.pyx":3867
 *             vz1=CalculateVZsigma(vyvy, LR[MLCOMP[0][0]].ex)
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)             # <<<<<<<<<<<<<<
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 */
      __pyx_v_vz3 = __pyx_f_18Pythonreflectivity_CalculateVZsigma(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ex);

      /* "Pythonreflectivity.pyx":3868
 *             vz2=CalculateVZpi(vyvy, LR[MLCOMP[0][0]].ey, LR[MLCOMP[0][0]].ez)
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)             # <<<<<<<<<<<<<<
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 */
      __pyx_v_vz4 = __pyx_f_18Pythonreflectivity_CalculateVZpi(__pyx_v_vyvy, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ez);

      /* "Pythonreflectivity.pyx":3869
 *             vz3=CalculateVZsigma(vyvy, LR[MLCOMP[1][0]].ex)
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.             # <<<<<<<<<<<<<<
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 */
      (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3870
 *             vz4=CalculateVZpi(vyvy, LR[MLCOMP[1][0]].ey, LR[MLCOMP[1][0]].ez)
 *             PHI1[0]=1.
 *             PHI1[1]=vz3             # <<<<<<<<<<<<<<
 *             PHI1[2]=0
 *             PHI1[3]=0
 */
      (__pyx_v_PHI1[1]) = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3871
 *             PHI1[0]=1.
 *             PHI1[1]=vz3
 *             PHI1[2]=0             # <<<<<<<<<<<<<<
 *             PHI1[3]=0
 *             PHI2[3]=1.
 */
      (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3872
 *             PHI1[1]=vz3
 *             PHI1[2]=0
 *             PHI1[3]=0             # <<<<<<<<<<<<<<
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 */
      (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3873
 *             PHI1[2]=0
 *             PHI1[3]=0
 *             PHI2[3]=1.             # <<<<<<<<<<<<<<
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 */
      (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

      /* "Pythonreflectivity.pyx":3874
 *             PHI1[3]=0
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey             # <<<<<<<<<<<<<<
 *             PHI2[0]=0
 *             PHI2[1]=0
 */
      if (unlikely(__Pyx_c_is_zero((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3874; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_PHI2[2]) = __Pyx_c_quot(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey);

      /* "Pythonreflectivity.pyx":3875
 *             PHI2[3]=1.
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0             # <<<<<<<<<<<<<<
 *             PHI2[1]=0
 * 
 */
      (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3876
 *             PHI2[2]=vz4/LR[MLCOMP[1][0]].ey
 *             PHI2[0]=0
 *             PHI2[1]=0             # <<<<<<<<<<<<<<
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 */
      (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3878
 *             PHI2[1]=0
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3879
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":3881
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[1][0]].Thickness*vz4)
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 */
      __pyx_t_7 = __Pyx_c_diff(__pyx_v_vz3, __pyx_v_vz1);
      __pyx_t_8 = __Pyx_c_sum(__pyx_v_vz3, __pyx_v_vz1);
      if (unlikely(__Pyx_c_is_zero(__pyx_t_8))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3881; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[0])[0]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_7, __pyx_t_8), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz1), __pyx_v_vz3), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));

      /* "Pythonreflectivity.pyx":3882
 * 
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 */
      (((__pyx_v_rtot[0])[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3883
 *             (rtot[0])[0][0]=((vz3-vz1)/(vz3+vz1))*exp(-2.0*quadr(k0)*vz1*vz3*quadr(LR[MLCOMP[0][0]].Roughness))
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 */
      (((__pyx_v_rtot[0])[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

      /* "Pythonreflectivity.pyx":3884
 *             (rtot[0])[1][0]=0
 *             (rtot[0])[0][1]=0
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))             # <<<<<<<<<<<<<<
 * 
 *     i=1
 */
      __pyx_t_8 = __Pyx_c_diff(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      __pyx_t_7 = __Pyx_c_sum(__Pyx_c_prod(__pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).ey), __Pyx_c_prod(__pyx_v_vz2, (__pyx_v_LR[((__pyx_v_MLCOMP[1])[0])]).ey));
      if (unlikely(__Pyx_c_is_zero(__pyx_t_7))) {
        #ifdef WITH_THREAD
        PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
        #endif
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        #ifdef WITH_THREAD
        PyGILState_Release(__pyx_gilstate_save);
        #endif
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3884; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (((__pyx_v_rtot[0])[1])[1]) = __Pyx_c_prod(__Pyx_c_quot(__pyx_t_8, __pyx_t_7), exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts((-2.0 * __pyx_f_18Pythonreflectivity_quadr(__pyx_v_k0)), 0), __pyx_v_vz2), __pyx_v_vz4), __pyx_t_double_complex_from_parts(__pyx_f_18Pythonreflectivity_quadr((__pyx_v_LR[((__pyx_v_MLCOMP[0])[0])]).Roughness), 0))));
    }
    __pyx_L6:;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":3886
 *             (rtot[0])[1][1]=((vz4*LR[MLCOMP[0][0]].ey-vz2*LR[MLCOMP[1][0]].ey)/(vz4*LR[MLCOMP[0][0]].ey+vz2*LR[MLCOMP[1][0]].ey))*exp(-2.0*quadr(k0)*vz2*vz4*quadr(LR[MLCOMP[0][0]].Roughness))
 * 
 *     i=1             # <<<<<<<<<<<<<<
 *     while i<NLAYERS:
 *        # print "loop start", i
 */
  __pyx_v_i = 1;

  /* "Pythonreflectivity.pyx":3887
 * 
 *     i=1
 *     while i<NLAYERS:             # <<<<<<<<<<<<<<
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):
 */
  while (1) {
    __pyx_t_1 = ((__pyx_v_i < __pyx_v_NLAYERS) != 0);
    if (!__pyx_t_1) break;

    /* "Pythonreflectivity.pyx":3889
 *     while i<NLAYERS:
 *        # print "loop start", i
 *         if(MLLENGTH[i]==1):             # <<<<<<<<<<<<<<
 * 
 *             vz1=vz3
 */
    __pyx_t_1 = (((__pyx_v_MLLENGTH[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":3891
 *         if(MLLENGTH[i]==1):
 * 
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3892
 * 
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3894
 *             vz2=vz4
 *              #Inversion of Eigenvectors
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *             if(i!=Cap):
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":3896
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3897
 * 
 *             if(i!=Cap):
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":3899
 *                 Upper=MLCOMP[i+1][0]
 *                # print "i, Upper", i, Upper
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 * 
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3902
 *                   #  print "hallo"
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3903
 * 
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":3904
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L13;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3908
 *                #     print "Hallo"
 *                  #   print "x"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                  #   print "y"
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":3910
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 *                  #   print "y"
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":3911
 *                  #   print "y"
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
            goto __pyx_L14;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":3914
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *             else:
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          }
          __pyx_L14:;

          /* "Pythonreflectivity.pyx":3915
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *             else:
 *               #  print "vacuum"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L13:;
        goto __pyx_L12;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3918
 *             else:
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3919
 *               #  print "vacuum"
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3920
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3921
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3922
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":3923
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":3924
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3925
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":3926
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3927
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                   #  print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L15;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3930
 *                 else:
 *                   #  print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *             FillC0(&C0, &rprime, rtot, &p)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L15:;
      }
      __pyx_L12:;

      /* "Pythonreflectivity.pyx":3932
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&p, rtot)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3934
 *             FillC0(&C0, &rprime, rtot, &p)
 * 
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3936
 *             Mult2x2_rightside(&p, rtot)
 * 
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3938
 *             Mult2x2_leftside(rtot, &p)
 * 
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 * 
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":3940
 *             Mult2x2_rightside(&tprime, rtot)
 * 
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":3943
 * 
 * 
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":3945
 *             Mult2x2_leftside(rtot, &t)
 * 
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":3946
 * 
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":3947
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * #            print "rtot ", i
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":3948
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * #            print "rtot ", i
 * #            print (rtot[0])[0][0]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":3956
 * 
 * 
 *             if(i!=Cap):             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
      __pyx_t_1 = ((__pyx_v_i != __pyx_v_Cap) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3957
 * 
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":3958
 *             if(i!=Cap):
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *         else:
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
        goto __pyx_L16;
      }
      __pyx_L16:;
      goto __pyx_L11;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":3960
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *         else:
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 */
      __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

      /* "Pythonreflectivity.pyx":3962
 *             PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *           #  print "2"
 *             Upper=MLCOMP[i][1]             # <<<<<<<<<<<<<<
 *             vz1=vz3
 *             vz2=vz4
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[1]);

      /* "Pythonreflectivity.pyx":3963
 *           #  print "2"
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3             # <<<<<<<<<<<<<<
 *             vz2=vz4
 * 
 */
      __pyx_v_vz1 = __pyx_v_vz3;

      /* "Pythonreflectivity.pyx":3964
 *             Upper=MLCOMP[i][1]
 *             vz1=vz3
 *             vz2=vz4             # <<<<<<<<<<<<<<
 * 
 *             if(LR[Upper].magdir==3):
 */
      __pyx_v_vz2 = __pyx_v_vz4;

      /* "Pythonreflectivity.pyx":3966
 *             vz2=vz4
 * 
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                 ML_is_diagonal=0
 *               #  print "x"
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":3967
 * 
 *             if(LR[Upper].magdir==3):
 *                 ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_v_ML_is_diagonal = 0;

        /* "Pythonreflectivity.pyx":3969
 *                 ML_is_diagonal=0
 *               #  print "x"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3971
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);

        /* "Pythonreflectivity.pyx":3973
 *                 Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 * 
 *             else:
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L17;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":3977
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 if(previously_magnetic):
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":3979
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":3980
 * 
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "else"
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
          goto __pyx_L18;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":3983
 *                 else:
 *                #     print "else"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_back_1), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[0])]).Roughness, __pyx_v_k0);
        }
        __pyx_L18:;

        /* "Pythonreflectivity.pyx":3985
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r_ML_in_1, &rprime, &t_ML_in_1, &t_ML_back_1, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][0]].Roughness, k0)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L17:;

      /* "Pythonreflectivity.pyx":3988
 * 
 * 
 *             Mult2x2_leftside(&t_ML_back_1, &p) # t'(AB)*p(A)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_t_ML_back_1), (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":3991
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":3992
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 * #            print "r_ML_in_1 0"
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

      /* "Pythonreflectivity.pyx":4002
 * 
 * 
 *             j=1             # <<<<<<<<<<<<<<
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":4003
 * 
 *             j=1
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":4004
 *             j=1
 *             while j<MLLENGTH[i]:
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]             # <<<<<<<<<<<<<<
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 */
        __pyx_t_9 = (__pyx_v_j + 1);
        if (unlikely((__pyx_v_MLLENGTH[__pyx_v_i]) == 0)) {
          #ifdef WITH_THREAD
          PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();
          #endif
          PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
          #ifdef WITH_THREAD
          PyGILState_Release(__pyx_gilstate_save);
          #endif
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4004; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__Pyx_mod_long(__pyx_t_9, (__pyx_v_MLLENGTH[__pyx_v_i]))]);

        /* "Pythonreflectivity.pyx":4006
 *                 Upper=MLCOMP[i][(j+1)%MLLENGTH[i]]
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4007
 *               #  print "j and Upper", j, (j+1)%MLLENGTH[i], Upper
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "5"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4008
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "5"
 *               #  Upper=MLCOMP[i][1]
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":4012
 *               #  Upper=MLCOMP[i][1]
 * 
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4014
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4015
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":4017
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":4018
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L21;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4021
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4023
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4024
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
            goto __pyx_L22;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":4027
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j])]).Roughness, __pyx_v_k0);
          }
          __pyx_L22:;

          /* "Pythonreflectivity.pyx":4028
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L21:;

        /* "Pythonreflectivity.pyx":4030
 *                     previously_magnetic=0
 * 
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), (&__pyx_v_r_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4031
 * 
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C1), (&__pyx_v_r_ML_in_1), (&__pyx_v_rprime), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4032
 *                 FillC0(&C0, &rprime, &r_ML_in_1, &p)
 *                 FillC0(&C1, &r_ML_in_1, &rprime, &p)
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":4034
 *                 Mult2x2_rightside(&p, &r_ML_in_1) #p_B r p_B and so on
 * 
 *                 Mult2x2_leftside(&r_ML_in_1, &p)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4036
 *                 Mult2x2_leftside(&r_ML_in_1, &p)
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_r_ML_in_1));

        /* "Pythonreflectivity.pyx":4037
 * 
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_C0));

        /* "Pythonreflectivity.pyx":4038
 *                 Mult2x2_rightside(&tprime, &r_ML_in_1) #t' p_B r p_b t and so on
 *                 Mult2x2_leftside(&r_ML_in_1, &C0)
 *                 Mult2x2_leftside(&r_ML_in_1, &t)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_in_1), (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":4040
 *                 Mult2x2_leftside(&r_ML_in_1, &t)
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":4041
 * 
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":4042
 *                 r_ML_in_1[0][0]+=r[0][0]
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_in_1[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":4043
 *                 r_ML_in_1[1][0]+=r[1][0]
 *                 r_ML_in_1[0][1]+=r[0][1]
 *                 r_ML_in_1[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_in_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":4047
 * 
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":4048
 * 
 *                 Mult2x2_rightside(&C1, &t_ML_back_1)
 *                 Mult2x2_rightside(&p, &t_ML_back_1)             # <<<<<<<<<<<<<<
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":4050
 *                 Mult2x2_rightside(&p, &t_ML_back_1)
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), (&__pyx_v_t_ML_back_1));

        /* "Pythonreflectivity.pyx":4051
 *                # Mult2x2_leftside(&t_ML_in_1, &t) # p(A) * t(AB) p_B t(BC) and so on #this comes later now
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":4052
 *                 Mult2x2_rightside(&tprime, &t_ML_back_1)# t'(BC) p_B t'(AB)*p(A) and so on
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *          #   print vz1, vz2, vz3, vz4
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":4053
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *          #   print vz1, vz2, vz3, vz4
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":4056
 *          #   print vz1, vz2, vz3, vz4
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)
 *          #   print "p C components"
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz1));

      /* "Pythonreflectivity.pyx":4057
 * 
 *             p[0][0]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz1)
 *             p[1][1]=exp(1j*k0*LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness*vz2)             # <<<<<<<<<<<<<<
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Thickness, 0)), __pyx_v_vz2));

      /* "Pythonreflectivity.pyx":4060
 *          #   print "p C components"
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 */
      ((__pyx_v_r_ML_back_1[0])[0]) = ((__pyx_v_rprime[0])[0]);

      /* "Pythonreflectivity.pyx":4061
 *          #   print MLLENGTH[i]-1, LR[MLCOMP[i][MLLENGTH[i]-1]].Thickness, vz1, vz2
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 */
      ((__pyx_v_r_ML_back_1[1])[0]) = ((__pyx_v_rprime[1])[0]);

      /* "Pythonreflectivity.pyx":4062
 *             r_ML_back_1[0][0]=rprime[0][0]
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]             # <<<<<<<<<<<<<<
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 */
      ((__pyx_v_r_ML_back_1[0])[1]) = ((__pyx_v_rprime[0])[1]);

      /* "Pythonreflectivity.pyx":4063
 *             r_ML_back_1[1][0]=rprime[1][0]
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 */
      ((__pyx_v_r_ML_back_1[1])[1]) = ((__pyx_v_rprime[1])[1]);

      /* "Pythonreflectivity.pyx":4064
 *             r_ML_back_1[0][1]=rprime[0][1]
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 */
      ((__pyx_v_t_ML_in_1[0])[0]) = ((__pyx_v_t[0])[0]);

      /* "Pythonreflectivity.pyx":4065
 *             r_ML_back_1[1][1]=rprime[1][1]
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 */
      ((__pyx_v_t_ML_in_1[0])[1]) = ((__pyx_v_t[0])[1]);

      /* "Pythonreflectivity.pyx":4066
 *             t_ML_in_1[0][0]=t[0][0]
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]             # <<<<<<<<<<<<<<
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 */
      ((__pyx_v_t_ML_in_1[1])[0]) = ((__pyx_v_t[1])[0]);

      /* "Pythonreflectivity.pyx":4067
 *             t_ML_in_1[0][1]=t[0][1]
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 */
      ((__pyx_v_t_ML_in_1[1])[1]) = ((__pyx_v_t[1])[1]);

      /* "Pythonreflectivity.pyx":4068
 *             t_ML_in_1[1][0]=t[1][0]
 *             t_ML_in_1[1][1]=t[1][1]
 *             Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1));

      /* "Pythonreflectivity.pyx":4070
 *             Mult2x2_rightside(&p, &t_ML_in_1)
 *          #   Mult2x2_leftside(&t_ML_in_1, &p)
 *             j=MLLENGTH[i]-1             # <<<<<<<<<<<<<<
 * 
 *             while j>0:
 */
      __pyx_v_j = ((__pyx_v_MLLENGTH[__pyx_v_i]) - 1);

      /* "Pythonreflectivity.pyx":4072
 *             j=MLLENGTH[i]-1
 * 
 *             while j>0:             # <<<<<<<<<<<<<<
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j > 0) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":4073
 * 
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 * 
 */
        __pyx_v_Lower = ((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)]);

        /* "Pythonreflectivity.pyx":4074
 *             while j>0:
 *                 Lower=MLCOMP[i][j-1]
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":4077
 * 
 * 
 *                 if(LR[Lower].magdir==3):             # <<<<<<<<<<<<<<
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Lower]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4078
 * 
 *                 if(LR[Lower].magdir==3):
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (__pyx_v_LR[__pyx_v_Lower]).eg, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4079
 *                 if(LR[Lower].magdir==3):
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":4080
 *                     MagneticPhi_z(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, LR[Lower].eg, &vz1, &vz2, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L25;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4082
 *                     previously_magnetic=1
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 * 
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Lower]).ex, (__pyx_v_LR[__pyx_v_Lower]).ey, (__pyx_v_LR[__pyx_v_Lower]).ez, (&__pyx_v_vz1), (&__pyx_v_vz2), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4083
 *                 else:
 *                     NormalPhi(LR[Lower].ex, LR[Lower].ey, LR[Lower].ez, &vz1, &vz2, &PHI1, &PHI2, vyvy)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L25:;

        /* "Pythonreflectivity.pyx":4086
 * 
 * 
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 * 
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":4088
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 * 
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4090
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 *                     ML_is_diagonal=0
 *                 #    print "y"
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4091
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 *                     ML_is_diagonal=0             # <<<<<<<<<<<<<<
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 */
          __pyx_v_ML_is_diagonal = 0;

          /* "Pythonreflectivity.pyx":4093
 *                     ML_is_diagonal=0
 *                 #    print "y"
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                   #  previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0);
          goto __pyx_L26;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4097
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4099
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4100
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0);
            goto __pyx_L27;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":4103
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[Lower].Roughness, k0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[__pyx_v_Lower]).Roughness, __pyx_v_k0);
          }
          __pyx_L27:;
        }
        __pyx_L26:;

        /* "Pythonreflectivity.pyx":4107
 * 
 * 
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_r), (&__pyx_v_r_ML_back_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4109
 *                 FillC0(&C0, &r, &r_ML_back_1, &p)
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 */
        ((__pyx_v_C1[0])[0]) = ((__pyx_v_p[0])[0]);

        /* "Pythonreflectivity.pyx":4110
 *                # FillC0(&C1, &r_ML_back_1, &r, &p)
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0             # <<<<<<<<<<<<<<
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4111
 *                 C1[0][0]=p[0][0]
 *                 C1[1][0]=0
 *                 C1[0][1]=0             # <<<<<<<<<<<<<<
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 */
        ((__pyx_v_C1[0])[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4112
 *                 C1[1][0]=0
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 */
        ((__pyx_v_C1[1])[1]) = ((__pyx_v_p[1])[1]);

        /* "Pythonreflectivity.pyx":4113
 *                 C1[0][1]=0
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r_ML_back_1));

        /* "Pythonreflectivity.pyx":4114
 *                 C1[1][1]=p[1][1]
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4115
 *                 Mult2x2_leftside(&C1, &r_ML_back_1)
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)             # <<<<<<<<<<<<<<
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_C1), (&__pyx_v_r));

        /* "Pythonreflectivity.pyx":4116
 *                 Mult2x2_leftside(&C1, &p)
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]             # <<<<<<<<<<<<<<
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 */
        ((__pyx_v_C1[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[0])[0]));

        /* "Pythonreflectivity.pyx":4117
 *                 Mult2x2_leftside(&C1, &r)
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]             # <<<<<<<<<<<<<<
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 */
        ((__pyx_v_C1[1])[0]) = __Pyx_c_neg(((__pyx_v_C1[1])[0]));

        /* "Pythonreflectivity.pyx":4118
 *                 C1[0][0]=1.-C1[0][0]
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]             # <<<<<<<<<<<<<<
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)
 */
        ((__pyx_v_C1[0])[1]) = __Pyx_c_neg(((__pyx_v_C1[0])[1]));

        /* "Pythonreflectivity.pyx":4119
 *                 C1[1][0]=-C1[1][0]
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]             # <<<<<<<<<<<<<<
 *                 Invert2x2(&C1)
 * 
 */
        ((__pyx_v_C1[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1., 0), ((__pyx_v_C1[1])[1]));

        /* "Pythonreflectivity.pyx":4120
 *                 C1[0][1]=-C1[0][1]
 *                 C1[1][1]=1.-C1[1][1]
 *                 Invert2x2(&C1)             # <<<<<<<<<<<<<<
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 */
        __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C1));

        /* "Pythonreflectivity.pyx":4122
 *                 Invert2x2(&C1)
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1));

        /* "Pythonreflectivity.pyx":4123
 * 
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4124
 *                 Mult2x2_rightside(&p, &r_ML_back_1) #p_B r p_B and so on
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_r_ML_back_1));

        /* "Pythonreflectivity.pyx":4125
 *                 Mult2x2_leftside(&r_ML_back_1, &p)
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_C0));

        /* "Pythonreflectivity.pyx":4126
 *                 Mult2x2_rightside(&t, &r_ML_back_1)
 *                 Mult2x2_leftside(&r_ML_back_1, &C0)
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)             # <<<<<<<<<<<<<<
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_tprime));

        /* "Pythonreflectivity.pyx":4128
 *                 Mult2x2_leftside(&r_ML_back_1, &tprime)
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[0])[0]));

        /* "Pythonreflectivity.pyx":4129
 * 
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 0;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[1])[0]));

        /* "Pythonreflectivity.pyx":4130
 *                 r_ML_back_1[0][0]+=rprime[0][0]
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]             # <<<<<<<<<<<<<<
 *                 r_ML_back_1[1][1]+=rprime[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[0])[1]));

        /* "Pythonreflectivity.pyx":4131
 *                 r_ML_back_1[1][0]+=rprime[1][0]
 *                 r_ML_back_1[0][1]+=rprime[0][1]
 *                 r_ML_back_1[1][1]+=rprime[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_9 = 1;
        __pyx_t_10 = 1;
        ((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]) = __Pyx_c_sum(((__pyx_v_r_ML_back_1[__pyx_t_9])[__pyx_t_10]), ((__pyx_v_rprime[1])[1]));

        /* "Pythonreflectivity.pyx":4136
 * 
 *                # Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_C1), (&__pyx_v_t_ML_in_1));

        /* "Pythonreflectivity.pyx":4138
 *                 Mult2x2_rightside(&C1, &t_ML_in_1)
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)             # <<<<<<<<<<<<<<
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t), (&__pyx_v_t_ML_in_1));

        /* "Pythonreflectivity.pyx":4139
 *              #   Mult2x2_rightside(&p, &t_ML_in_1)
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)
 * 
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz1));

        /* "Pythonreflectivity.pyx":4140
 *                 Mult2x2_rightside(&t, &t_ML_in_1)
 *                 p[0][0]=exp(1j*k0*LR[Lower].Thickness*vz1)
 *                 p[1][1]=exp(1j*k0*LR[Lower].Thickness*vz2)             # <<<<<<<<<<<<<<
 * 
 * #                if(j==2):
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Lower]).Thickness, 0)), __pyx_v_vz2));

        /* "Pythonreflectivity.pyx":4149
 * #                print p[1][1]
 * 
 *                 Mult2x2_rightside(&p, &t_ML_in_1)             # <<<<<<<<<<<<<<
 * 
 *                 j=j-1
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_t_ML_in_1));

        /* "Pythonreflectivity.pyx":4151
 *                 Mult2x2_rightside(&p, &t_ML_in_1)
 * 
 *                 j=j-1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j - 1);
      }

      /* "Pythonreflectivity.pyx":4154
 * 
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(&r_ML_back_1, &p)
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), (&__pyx_v_r_ML_back_1));

      /* "Pythonreflectivity.pyx":4155
 * 
 *             Mult2x2_rightside(&p, &r_ML_back_1)
 *             Mult2x2_leftside(&r_ML_back_1, &p)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside((&__pyx_v_r_ML_back_1), (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":4158
 * 
 * 
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)             # <<<<<<<<<<<<<<
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1
 */
      __pyx_f_18Pythonreflectivity_Calculate_Multilayer_with_Matrices((&__pyx_v_t_ML_back_1), (&__pyx_v_t_ML_back_2), (&__pyx_v_t_ML_in_1), (&__pyx_v_t_ML_in_2), (&__pyx_v_r_ML_in_1), (&__pyx_v_r_ML_in_2), (&__pyx_v_r_ML_back_1), (&__pyx_v_r_ML_back_2), ((__pyx_v_MLREP[__pyx_v_i]) - 1));

      /* "Pythonreflectivity.pyx":4160
 *             Calculate_Multilayer_with_Matrices(&t_ML_back_1, &t_ML_back_2,&t_ML_in_1, &t_ML_in_2, &r_ML_in_1, &r_ML_in_2, &r_ML_back_1, &r_ML_back_2, MLREP[i]-1)
 *           #  print t_ML_back_2[1][1], t_ML_in_2[1][1], r_ML_in_2[1][1], r_ML_back_2[1][1]
 *             ML_is_diagonal=1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_ML_is_diagonal = 1;

      /* "Pythonreflectivity.pyx":4163
 * 
 * 
 *             C0[0][0]=(rtot[0])[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 */
      ((__pyx_v_C0[0])[0]) = (((__pyx_v_rtot[0])[0])[0]);

      /* "Pythonreflectivity.pyx":4164
 * 
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 */
      ((__pyx_v_C0[0])[1]) = (((__pyx_v_rtot[0])[0])[1]);

      /* "Pythonreflectivity.pyx":4165
 *             C0[0][0]=(rtot[0])[0][0]
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 */
      ((__pyx_v_C0[1])[0]) = (((__pyx_v_rtot[0])[1])[0]);

      /* "Pythonreflectivity.pyx":4166
 *             C0[0][1]=(rtot[0])[0][1]
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 */
      ((__pyx_v_C0[1])[1]) = (((__pyx_v_rtot[0])[1])[1]);

      /* "Pythonreflectivity.pyx":4167
 *             C0[1][0]=(rtot[0])[1][0]
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)             # <<<<<<<<<<<<<<
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_r_ML_back_2), (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":4168
 *             C0[1][1]=(rtot[0])[1][1]
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]             # <<<<<<<<<<<<<<
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 */
      ((__pyx_v_C0[0])[0]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[0])[0]));

      /* "Pythonreflectivity.pyx":4169
 *             Mult2x2_rightside(&r_ML_back_2, &C0)
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]             # <<<<<<<<<<<<<<
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 */
      ((__pyx_v_C0[0])[1]) = __Pyx_c_neg(((__pyx_v_C0[0])[1]));

      /* "Pythonreflectivity.pyx":4170
 *             C0[0][0]=1-C0[0][0]
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]             # <<<<<<<<<<<<<<
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)
 */
      ((__pyx_v_C0[1])[0]) = __Pyx_c_neg(((__pyx_v_C0[1])[0]));

      /* "Pythonreflectivity.pyx":4171
 *             C0[0][1]=-C0[0][1]
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]             # <<<<<<<<<<<<<<
 *             Invert2x2(&C0)
 * 
 */
      ((__pyx_v_C0[1])[1]) = __Pyx_c_diff(__pyx_t_double_complex_from_parts(1, 0), ((__pyx_v_C0[1])[1]));

      /* "Pythonreflectivity.pyx":4172
 *             C0[1][0]=-C0[1][0]
 *             C0[1][1]=1-C0[1][1]
 *             Invert2x2(&C0)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_f_18Pythonreflectivity_Invert2x2((&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":4175
 * 
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_t_ML_back_2), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":4176
 * 
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":4177
 *             Mult2x2_rightside(&t_ML_back_2, rtot) #Here the ML part is missing
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t_ML_in_2));

      /* "Pythonreflectivity.pyx":4178
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[0]));

      /* "Pythonreflectivity.pyx":4179
 *             Mult2x2_leftside(rtot, &t_ML_in_2) # (t'(CA) p_C t'(BC) p_B t'(AB)*p(A))^N rtot (p(A) * t(AB) p_B t(BC) p_C t(CA))^N
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[0]));

      /* "Pythonreflectivity.pyx":4180
 *             (rtot[0])[0][0]+=r_ML_in_2[0][0]
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[0])[1]));

      /* "Pythonreflectivity.pyx":4181
 *             (rtot[0])[1][0]+=r_ML_in_2[1][0]
 *             (rtot[0])[0][1]+=r_ML_in_2[0][1]
 *             (rtot[0])[1][1]+=r_ML_in_2[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r_ML_in_2[1])[1]));

      /* "Pythonreflectivity.pyx":4185
 * 
 * 
 *             Upper=MLCOMP[i][0]             # <<<<<<<<<<<<<<
 *             if(LR[Upper].magdir==3):
 *               #  print "hallo"
 */
      __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[0]);

      /* "Pythonreflectivity.pyx":4186
 * 
 *             Upper=MLCOMP[i][0]
 *             if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *               #  print "hallo"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
      __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4188
 *             if(LR[Upper].magdir==3):
 *               #  print "hallo"
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=1
 */
        __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":4190
 *                 MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                 previously_magnetic=1             # <<<<<<<<<<<<<<
 *             else:
 *            #     print "Hallo"
 */
        __pyx_v_previously_magnetic = 1;
        goto __pyx_L28;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4193
 *             else:
 *            #     print "Hallo"
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                 previously_magnetic=0
 */
        __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

        /* "Pythonreflectivity.pyx":4195
 *                 NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                 previously_magnetic=0             # <<<<<<<<<<<<<<
 *             j=1
 * 
 */
        __pyx_v_previously_magnetic = 0;
      }
      __pyx_L28:;

      /* "Pythonreflectivity.pyx":4196
 * 
 *                 previously_magnetic=0
 *             j=1             # <<<<<<<<<<<<<<
 * 
 *             while j<MLLENGTH[i]:
 */
      __pyx_v_j = 1;

      /* "Pythonreflectivity.pyx":4198
 *             j=1
 * 
 *             while j<MLLENGTH[i]:             # <<<<<<<<<<<<<<
 * 
 *                 vz1=vz3
 */
      while (1) {
        __pyx_t_1 = ((__pyx_v_j < (__pyx_v_MLLENGTH[__pyx_v_i])) != 0);
        if (!__pyx_t_1) break;

        /* "Pythonreflectivity.pyx":4200
 *             while j<MLLENGTH[i]:
 * 
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4201
 * 
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4202
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[__pyx_v_i])[__pyx_v_j]);

        /* "Pythonreflectivity.pyx":4203
 *                 vz2=vz4
 *                 Upper=MLCOMP[i][j]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":4205
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "10"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4207
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4210
 * 
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":4211
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L31;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4214
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4216
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4217
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L32;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":4220
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *            #     print "4", vz1, vz2, vz3, vz4
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[(__pyx_v_j - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L32:;

          /* "Pythonreflectivity.pyx":4221
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][j-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L31:;

        /* "Pythonreflectivity.pyx":4224
 *            #     print "4", vz1, vz2, vz3, vz4
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 */
        __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4225
 *               #  print "11"
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":4226
 *                 FillC0(&C0, &rprime, rtot, &p)
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

        /* "Pythonreflectivity.pyx":4227
 *                 Mult2x2_rightside(&p, rtot)
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

        /* "Pythonreflectivity.pyx":4228
 *                 Mult2x2_leftside(rtot, &p)
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

        /* "Pythonreflectivity.pyx":4229
 *                 Mult2x2_rightside(&tprime, rtot)
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 */
        __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

        /* "Pythonreflectivity.pyx":4230
 *                 Mult2x2_leftside(rtot, &C0)
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

        /* "Pythonreflectivity.pyx":4231
 *                 Mult2x2_leftside(rtot, &t)
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 0;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

        /* "Pythonreflectivity.pyx":4232
 *                 (rtot[0])[0][0]+=r[0][0]
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 0;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

        /* "Pythonreflectivity.pyx":4233
 *                 (rtot[0])[1][0]+=r[1][0]
 *                 (rtot[0])[0][1]+=r[0][1]
 *                 (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 */
        __pyx_t_9 = 0;
        __pyx_t_10 = 1;
        __pyx_t_11 = 1;
        (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

        /* "Pythonreflectivity.pyx":4235
 *                 (rtot[0])[1][1]+=r[1][1]
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1
 */
        ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

        /* "Pythonreflectivity.pyx":4236
 * 
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 *                 j=j+1
 *               #  print "12"
 */
        ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));

        /* "Pythonreflectivity.pyx":4237
 *                 p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *                 p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 *                 j=j+1             # <<<<<<<<<<<<<<
 *               #  print "12"
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }

      /* "Pythonreflectivity.pyx":4240
 *               #  print "12"
 * 
 *             if(i==(NLAYERS-1)):             # <<<<<<<<<<<<<<
 *                 vz1=vz3
 *                 vz2=vz4
 */
      __pyx_t_1 = ((__pyx_v_i == (__pyx_v_NLAYERS - 1)) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4241
 * 
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4242
 *             if(i==(NLAYERS-1)):
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *               #  print "13"
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4243
 *                 vz1=vz3
 *                 vz2=vz4
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *               #  print "13"
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":4247
 *               #  vz3=CalculateVZsigma(vyvy, LR[Upper].ex)
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors             # <<<<<<<<<<<<<<
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 */
        (__pyx_v_PHI1[0]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":4248
 *               #  vz4=CalculateVZpi(vyvy, LR[Upper].ey, LR[Upper].ez)
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 */
        (__pyx_v_PHI1[1]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":4249
 *                 PHI1[0]=1. #Eigenvectors
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0             # <<<<<<<<<<<<<<
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 */
        (__pyx_v_PHI1[2]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4250
 *                 PHI1[1]=sintheta
 *                 PHI1[2]=0
 *                 PHI1[3]=0             # <<<<<<<<<<<<<<
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 */
        (__pyx_v_PHI1[3]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4251
 *                 PHI1[2]=0
 *                 PHI1[3]=0
 *                 PHI2[3]=1.             # <<<<<<<<<<<<<<
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 */
        (__pyx_v_PHI2[3]) = __pyx_t_double_complex_from_parts(1., 0);

        /* "Pythonreflectivity.pyx":4252
 *                 PHI1[3]=0
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta             # <<<<<<<<<<<<<<
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 */
        (__pyx_v_PHI2[2]) = __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0);

        /* "Pythonreflectivity.pyx":4253
 *                 PHI2[3]=1.
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0             # <<<<<<<<<<<<<<
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 */
        (__pyx_v_PHI2[0]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4254
 *                 PHI2[2]=sintheta
 *                 PHI2[0]=0
 *                 PHI2[1]=0             # <<<<<<<<<<<<<<
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
        (__pyx_v_PHI2[1]) = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4255
 *                 PHI2[0]=0
 *                 PHI2[1]=0
 *                 if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 */
        __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4256
 *                 PHI2[1]=0
 *                 if(previously_magnetic):
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          goto __pyx_L34;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4258
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                 else:
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, sintheta, sintheta, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *               #  print "14"
 * 
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), __pyx_t_double_complex_from_parts(__pyx_v_sintheta, 0), (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
        }
        __pyx_L34:;
        goto __pyx_L33;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4262
 * 
 *             else:
 *                 vz1=vz3             # <<<<<<<<<<<<<<
 *                 vz2=vz4
 *                 Upper=MLCOMP[i+1][0]
 */
        __pyx_v_vz1 = __pyx_v_vz3;

        /* "Pythonreflectivity.pyx":4263
 *             else:
 *                 vz1=vz3
 *                 vz2=vz4             # <<<<<<<<<<<<<<
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 */
        __pyx_v_vz2 = __pyx_v_vz4;

        /* "Pythonreflectivity.pyx":4264
 *                 vz1=vz3
 *                 vz2=vz4
 *                 Upper=MLCOMP[i+1][0]             # <<<<<<<<<<<<<<
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 */
        __pyx_v_Upper = ((__pyx_v_MLCOMP[(__pyx_v_i + 1)])[0]);

        /* "Pythonreflectivity.pyx":4265
 *                 vz2=vz4
 *                 Upper=MLCOMP[i+1][0]
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)             # <<<<<<<<<<<<<<
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):
 */
        __pyx_f_18Pythonreflectivity_PHI_to_PSI_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), __pyx_v_previously_magnetic);

        /* "Pythonreflectivity.pyx":4267
 *                 PHI_to_PSI_z(&PSI1, &PHI1, &PSI2, &PHI2, previously_magnetic)
 *             #    print "15"
 *                 if(LR[Upper].magdir==3):             # <<<<<<<<<<<<<<
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 */
        __pyx_t_1 = (((__pyx_v_LR[__pyx_v_Upper]).magdir == 3) != 0);
        if (__pyx_t_1) {

          /* "Pythonreflectivity.pyx":4269
 *                 if(LR[Upper].magdir==3):
 *                   #  print "hallo"
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 */
          __pyx_f_18Pythonreflectivity_MagneticPhi_z((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (__pyx_v_LR[__pyx_v_Upper]).eg, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vy, __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4271
 *                     MagneticPhi_z(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, LR[Upper].eg, &vz3, &vz4, &PHI1, &PHI2, vy, vyvy)
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=1
 *                 else:
 */
          __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);

          /* "Pythonreflectivity.pyx":4272
 * 
 *                     Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=1             # <<<<<<<<<<<<<<
 *                 else:
 *                #     print "Hallo"
 */
          __pyx_v_previously_magnetic = 1;
          goto __pyx_L35;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4275
 *                 else:
 *                #     print "Hallo"
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)             # <<<<<<<<<<<<<<
 * 
 *                     if(previously_magnetic):
 */
          __pyx_f_18Pythonreflectivity_NormalPhi((__pyx_v_LR[__pyx_v_Upper]).ex, (__pyx_v_LR[__pyx_v_Upper]).ey, (__pyx_v_LR[__pyx_v_Upper]).ez, (&__pyx_v_vz3), (&__pyx_v_vz4), (&__pyx_v_PHI1), (&__pyx_v_PHI2), __pyx_v_vyvy);

          /* "Pythonreflectivity.pyx":4277
 *                     NormalPhi(LR[Upper].ex, LR[Upper].ey, LR[Upper].ez, &vz3, &vz4, &PHI1, &PHI2, vyvy)
 * 
 *                     if(previously_magnetic):             # <<<<<<<<<<<<<<
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     else:
 */
          __pyx_t_1 = (__pyx_v_previously_magnetic != 0);
          if (__pyx_t_1) {

            /* "Pythonreflectivity.pyx":4278
 * 
 *                     if(previously_magnetic):
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 1, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     else:
 *                    #     print "else"
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 1, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
            goto __pyx_L36;
          }
          /*else*/ {

            /* "Pythonreflectivity.pyx":4281
 *                     else:
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)             # <<<<<<<<<<<<<<
 *                     previously_magnetic=0
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 */
            __pyx_f_18Pythonreflectivity_Calculate_rt_z((&__pyx_v_PSI1), (&__pyx_v_PHI1), (&__pyx_v_PSI2), (&__pyx_v_PHI2), (&__pyx_v_r), (&__pyx_v_rprime), (&__pyx_v_t), (&__pyx_v_tprime), 0, __pyx_v_vz1, __pyx_v_vz2, __pyx_v_vz3, __pyx_v_vz4, (__pyx_v_LR[((__pyx_v_MLCOMP[__pyx_v_i])[((__pyx_v_MLLENGTH[__pyx_v_i]) - 1)])]).Roughness, __pyx_v_k0);
          }
          __pyx_L36:;

          /* "Pythonreflectivity.pyx":4282
 *                    #     print "else"
 *                         Calculate_rt_z(&PSI1, &PHI1, &PSI2, &PHI2, &r, &rprime, &t, &tprime, 0, vz1, vz2, vz3, vz4, LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness, k0)
 *                     previously_magnetic=0             # <<<<<<<<<<<<<<
 *              #   print "5", LR[MLCOMP[i][MLLENGTH[i]-1]].Roughness
 *           #  print "5", vz1, vz2, vz3, vz4
 */
          __pyx_v_previously_magnetic = 0;
        }
        __pyx_L35:;
      }
      __pyx_L33:;

      /* "Pythonreflectivity.pyx":4286
 *           #  print "5", vz1, vz2, vz3, vz4
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 */
      __pyx_f_18Pythonreflectivity_FillC0((&__pyx_v_C0), (&__pyx_v_rprime), __pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":4287
 *          #   print "17"
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_p), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":4288
 *             FillC0(&C0, &rprime, rtot, &p)
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)             # <<<<<<<<<<<<<<
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_p));

      /* "Pythonreflectivity.pyx":4289
 *             Mult2x2_rightside(&p, rtot)
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_rightside((&__pyx_v_tprime), __pyx_v_rtot);

      /* "Pythonreflectivity.pyx":4290
 *             Mult2x2_leftside(rtot, &p)
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)             # <<<<<<<<<<<<<<
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_C0));

      /* "Pythonreflectivity.pyx":4291
 *             Mult2x2_rightside(&tprime, rtot)
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 */
      __pyx_f_18Pythonreflectivity_Mult2x2_leftside(__pyx_v_rtot, (&__pyx_v_t));

      /* "Pythonreflectivity.pyx":4292
 *             Mult2x2_leftside(rtot, &C0)
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[0]));

      /* "Pythonreflectivity.pyx":4293
 *             Mult2x2_leftside(rtot, &t)
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]             # <<<<<<<<<<<<<<
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 0;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[0]));

      /* "Pythonreflectivity.pyx":4294
 *             (rtot[0])[0][0]+=r[0][0]
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]             # <<<<<<<<<<<<<<
 *             (rtot[0])[1][1]+=r[1][1]
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 0;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[0])[1]));

      /* "Pythonreflectivity.pyx":4295
 *             (rtot[0])[1][0]+=r[1][0]
 *             (rtot[0])[0][1]+=r[0][1]
 *             (rtot[0])[1][1]+=r[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_9 = 0;
      __pyx_t_10 = 1;
      __pyx_t_11 = 1;
      (((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]) = __Pyx_c_sum((((__pyx_v_rtot[__pyx_t_9])[__pyx_t_10])[__pyx_t_11]), ((__pyx_v_r[1])[1]));

      /* "Pythonreflectivity.pyx":4298
 * 
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)             # <<<<<<<<<<<<<<
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 */
      ((__pyx_v_p[0])[0]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz3));

      /* "Pythonreflectivity.pyx":4299
 * 
 *             p[0][0]=exp(1j*k0*LR[Upper].Thickness*vz3)
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)             # <<<<<<<<<<<<<<
 * 
 *         i=i+1
 */
      ((__pyx_v_p[1])[1]) = exp(__Pyx_c_prod(__Pyx_c_prod(__Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), __pyx_t_double_complex_from_parts(__pyx_v_k0, 0)), __pyx_t_double_complex_from_parts((__pyx_v_LR[__pyx_v_Upper]).Thickness, 0)), __pyx_v_vz4));
    }
    __pyx_L11:;

    /* "Pythonreflectivity.pyx":4301
 *             p[1][1]=exp(1j*k0*LR[Upper].Thickness*vz4)
 * 
 *         i=i+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_i = (__pyx_v_i + 1);
  }

  /* "Pythonreflectivity.pyx":3742
 *         i=i+1
 * 
 * cdef void Paratt_magnetic_z_MS(Heterostructure* HS, double th, double wavelength, double complex (*rtot)[2][2]) except *:             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("Pythonreflectivity.Paratt_magnetic_z_MS", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "Pythonreflectivity.pyx":4308
 * 
 * 
 * cdef int FindLayerNumber(string, MaxLayer):             # <<<<<<<<<<<<<<
 * 
 *     if(string=="default"):
 */

static int __pyx_f_18Pythonreflectivity_FindLayerNumber(PyObject *__pyx_v_string, PyObject *__pyx_v_MaxLayer) {
  PyObject *__pyx_v_a = NULL;
  Py_ssize_t __pyx_v_N;
  PyObject *__pyx_v_j = NULL;
  int __pyx_v_IsInBracket;
  Py_ssize_t __pyx_v_i;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FindLayerNumber", 0);

  /* "Pythonreflectivity.pyx":4310
 * cdef int FindLayerNumber(string, MaxLayer):
 * 
 *     if(string=="default"):             # <<<<<<<<<<<<<<
 *         return MaxLayer
 * 
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_string, __pyx_n_s_default, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":4311
 * 
 *     if(string=="default"):
 *         return MaxLayer             # <<<<<<<<<<<<<<
 * 
 *     a=string.split(",")
 */
    __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_MaxLayer); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_r = __pyx_t_2;
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":4313
 *         return MaxLayer
 * 
 *     a=string.split(",")             # <<<<<<<<<<<<<<
 * 
 *     N=len(a)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_string, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_a = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Pythonreflectivity.pyx":4315
 *     a=string.split(",")
 * 
 *     N=len(a)             # <<<<<<<<<<<<<<
 *     j=0
 *     IsInBracket=False
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_a); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_N = __pyx_t_5;

  /* "Pythonreflectivity.pyx":4316
 * 
 *     N=len(a)
 *     j=0             # <<<<<<<<<<<<<<
 *     IsInBracket=False
 *     for i in range(N):
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_j = __pyx_int_0;

  /* "Pythonreflectivity.pyx":4317
 *     N=len(a)
 *     j=0
 *     IsInBracket=False             # <<<<<<<<<<<<<<
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 */
  __pyx_v_IsInBracket = 0;

  /* "Pythonreflectivity.pyx":4318
 *     j=0
 *     IsInBracket=False
 *     for i in range(N):             # <<<<<<<<<<<<<<
 *         if (a[i].find('(')!=-1):
 *             j=j+1
 */
  __pyx_t_5 = __pyx_v_N;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "Pythonreflectivity.pyx":4319
 *     IsInBracket=False
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             j=j+1
 *             IsInBracket=True
 */
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4319; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_find); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_4, __pyx_int_neg_1, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4320
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 *             j=j+1             # <<<<<<<<<<<<<<
 *             IsInBracket=True
 *     #        print a[i], "w", j
 */
      __pyx_t_3 = PyNumber_Add(__pyx_v_j, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Pythonreflectivity.pyx":4321
 *         if (a[i].find('(')!=-1):
 *             j=j+1
 *             IsInBracket=True             # <<<<<<<<<<<<<<
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):
 */
      __pyx_v_IsInBracket = 1;
      goto __pyx_L6;
    }

    /* "Pythonreflectivity.pyx":4323
 *             IsInBracket=True
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *    #         print a[i], "x", j
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4323; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_int_neg_1, Py_NE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4324
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):
 *             IsInBracket=False             # <<<<<<<<<<<<<<
 *    #         print a[i], "x", j
 *         else:
 */
      __pyx_v_IsInBracket = 0;
      goto __pyx_L6;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":4328
 *         else:
 * 
 *             if(IsInBracket==False):             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
      __pyx_t_1 = ((__pyx_v_IsInBracket == 0) != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4329
 * 
 *             if(IsInBracket==False):
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 *     return j
 */
        __pyx_t_4 = PyNumber_Add(__pyx_v_j, __pyx_int_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF_SET(__pyx_v_j, __pyx_t_4);
        __pyx_t_4 = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;
    }
    __pyx_L6:;
  }

  /* "Pythonreflectivity.pyx":4331
 *                 j=j+1
 * 
 *     return j             # <<<<<<<<<<<<<<
 * 
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):
 */
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_j); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_r = __pyx_t_2;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":4308
 * 
 * 
 * cdef int FindLayerNumber(string, MaxLayer):             # <<<<<<<<<<<<<<
 * 
 *     if(string=="default"):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_WriteUnraisable("Pythonreflectivity.FindLayerNumber", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4333
 *     return j
 * 
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):             # <<<<<<<<<<<<<<
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)
 */

static PyObject *__pyx_f_18Pythonreflectivity_MakeConsistencyCheck(PyObject *__pyx_v_string, struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_STR, PyObject *__pyx_v_MaxLayer) {
  Py_ssize_t __pyx_v_Ntot;
  int __pyx_v_IsInBracket;
  Py_ssize_t __pyx_v_i;
  int __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("MakeConsistencyCheck", 0);

  /* "Pythonreflectivity.pyx":4335
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)             # <<<<<<<<<<<<<<
 *     IsInBracket=False
 *     for i in range(Ntot):
 */
  __pyx_t_1 = PyObject_Length(__pyx_v_string); if (unlikely(__pyx_t_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4335; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_Ntot = __pyx_t_1;

  /* "Pythonreflectivity.pyx":4336
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)
 *     IsInBracket=False             # <<<<<<<<<<<<<<
 *     for i in range(Ntot):
 *         if(IsInBracket):
 */
  __pyx_v_IsInBracket = 0;

  /* "Pythonreflectivity.pyx":4337
 *     Ntot=len(string)
 *     IsInBracket=False
 *     for i in range(Ntot):             # <<<<<<<<<<<<<<
 *         if(IsInBracket):
 *             if(string[i]=='('):
 */
  __pyx_t_1 = __pyx_v_Ntot;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "Pythonreflectivity.pyx":4338
 *     IsInBracket=False
 *     for i in range(Ntot):
 *         if(IsInBracket):             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")
 */
    __pyx_t_3 = (__pyx_v_IsInBracket != 0);
    if (__pyx_t_3) {

      /* "Pythonreflectivity.pyx":4339
 *     for i in range(Ntot):
 *         if(IsInBracket):
 *             if(string[i]=='('):             # <<<<<<<<<<<<<<
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4339; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__3, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":4340
 *         if(IsInBracket):
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")             # <<<<<<<<<<<<<<
 *             if(string[i]==')'):
 *                 IsInBracket=False
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "Pythonreflectivity.pyx":4341
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):             # <<<<<<<<<<<<<<
 *                 IsInBracket=False
 *         else:
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4341; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__7, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4341; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":4342
 *                 raise Exception("Brackets inside Brackets are not supported.")
 *             if(string[i]==')'):
 *                 IsInBracket=False             # <<<<<<<<<<<<<<
 *         else:
 *             if(string[i]==')'):
 */
        __pyx_v_IsInBracket = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;
      goto __pyx_L5;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":4344
 *                 IsInBracket=False
 *         else:
 *             if(string[i]==')'):             # <<<<<<<<<<<<<<
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4344; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__7, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4344; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":4345
 *         else:
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 IsInBracket=True
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__32, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "Pythonreflectivity.pyx":4346
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):             # <<<<<<<<<<<<<<
 *                 IsInBracket=True
 *     if(IsInBracket):
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_string, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4346; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s__3, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4346; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":4347
 *                 raise Exception("Something is wrong with the Multilayer brackets")
 *             if(string[i]=='('):
 *                 IsInBracket=True             # <<<<<<<<<<<<<<
 *     if(IsInBracket):
 *         raise Exception("Something is wrong with the Multilayer brackets")
 */
        __pyx_v_IsInBracket = 1;
        goto __pyx_L9;
      }
      __pyx_L9:;
    }
    __pyx_L5:;
  }

  /* "Pythonreflectivity.pyx":4348
 *             if(string[i]=='('):
 *                 IsInBracket=True
 *     if(IsInBracket):             # <<<<<<<<<<<<<<
 *         raise Exception("Something is wrong with the Multilayer brackets")
 * 
 */
  __pyx_t_3 = (__pyx_v_IsInBracket != 0);
  if (__pyx_t_3) {

    /* "Pythonreflectivity.pyx":4349
 *                 IsInBracket=True
 *     if(IsInBracket):
 *         raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__33, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":4352
 * 
 * 
 *     for i in range((STR[0]).NLayers):             # <<<<<<<<<<<<<<
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):
 */
  __pyx_t_5 = (__pyx_v_STR[0]).NLayers;
  for (__pyx_t_1 = 0; __pyx_t_1 < __pyx_t_5; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "Pythonreflectivity.pyx":4353
 * 
 *     for i in range((STR[0]).NLayers):
 *         for j in range((STR[0]).MLLENGTH[i]):             # <<<<<<<<<<<<<<
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 */
    __pyx_t_6 = ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_i]);
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_j = __pyx_t_7;

      /* "Pythonreflectivity.pyx":4354
 *     for i in range((STR[0]).NLayers):
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):             # <<<<<<<<<<<<<<
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 * 
 */
      __pyx_t_4 = __Pyx_PyInt_From_int((((__pyx_v_STR[0]).MLCOMP[__pyx_v_i])[__pyx_v_j])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyObject_RichCompare(__pyx_t_4, __pyx_v_MaxLayer, Py_GE); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely(__pyx_t_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4354; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_3) {

        /* "Pythonreflectivity.pyx":4355
 *         for j in range((STR[0]).MLLENGTH[i]):
 *             if((STR[0]).MLCOMP[i][j]>=MaxLayer):
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")             # <<<<<<<<<<<<<<
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):
 */
        __pyx_t_8 = __Pyx_PyInt_From_int((((__pyx_v_STR[0]).MLCOMP[__pyx_v_i])[__pyx_v_j])); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_kp_s_Layer, __pyx_t_8); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __pyx_t_8 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_in_Multilayer_structure_string); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_8);
        __Pyx_GIVEREF(__pyx_t_8);
        __pyx_t_8 = 0;
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_t_4, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_8, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4355; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
  }

  /* "Pythonreflectivity.pyx":4357
 *                 raise Exception("Layer " + str((STR[0]).MLCOMP[i][j]) + " in Multilayer structure string is not defined")
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):             # <<<<<<<<<<<<<<
 *         raise Exception("Substrate as Multilayer is ill-defined")
 * 
 */
  __pyx_t_3 = ((((__pyx_v_STR[0]).MLLENGTH[0]) != 1) != 0);
  if (__pyx_t_3) {

    /* "Pythonreflectivity.pyx":4358
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):
 *         raise Exception("Substrate as Multilayer is ill-defined")             # <<<<<<<<<<<<<<
 * 
 *     return 0
 */
    __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_Raise(__pyx_t_8, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":4360
 *         raise Exception("Substrate as Multilayer is ill-defined")
 * 
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_int_0);
  __pyx_r = __pyx_int_0;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":4333
 *     return j
 * 
 * cdef MakeConsistencyCheck(string, Heterostructure *STR, MaxLayer):             # <<<<<<<<<<<<<<
 *     #Check for brackets, Maximum layer number and substrate
 *     Ntot=len(string)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("Pythonreflectivity.MakeConsistencyCheck", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4364
 * 
 * 
 * cdef int FindComposition(string, int MaxLayer, int LayerNumber, Heterostructure *STR):             # <<<<<<<<<<<<<<
 * 
 * 
 */

static int __pyx_f_18Pythonreflectivity_FindComposition(PyObject *__pyx_v_string, int __pyx_v_MaxLayer, int __pyx_v_LayerNumber, struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_STR) {
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_SaveNumbers = NULL;
  PyObject *__pyx_v_a = NULL;
  Py_ssize_t __pyx_v_N;
  int __pyx_v_j;
  int __pyx_v_IsInBracket;
  int __pyx_v_k;
  int __pyx_v_l;
  PyObject *__pyx_v_b = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  size_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("FindComposition", 0);

  /* "Pythonreflectivity.pyx":4368
 * 
 *   #  LayerNumber=FindLayerNumber(string, MaxLayer)
 *     (STR[0]).NLayers=LayerNumber             # <<<<<<<<<<<<<<
 * 
 *   #  print LayerNumber
 */
  (__pyx_v_STR[0]).NLayers = __pyx_v_LayerNumber;

  /* "Pythonreflectivity.pyx":4372
 *   #  print LayerNumber
 * 
 *     if(string=="default"):             # <<<<<<<<<<<<<<
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1
 */
  __pyx_t_1 = (__Pyx_PyString_Equals(__pyx_v_string, __pyx_n_s_default, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":4373
 * 
 *     if(string=="default"):
 *         for i in range(MaxLayer):             # <<<<<<<<<<<<<<
 *             (STR[0]).MLREP[i]=1
 *             (STR[0]).MLLENGTH[i]=1
 */
    __pyx_t_2 = __pyx_v_MaxLayer;
    for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
      __pyx_v_i = __pyx_t_3;

      /* "Pythonreflectivity.pyx":4374
 *     if(string=="default"):
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1             # <<<<<<<<<<<<<<
 *             (STR[0]).MLLENGTH[i]=1
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 */
      ((__pyx_v_STR[0]).MLREP[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":4375
 *         for i in range(MaxLayer):
 *             (STR[0]).MLREP[i]=1
 *             (STR[0]).MLLENGTH[i]=1             # <<<<<<<<<<<<<<
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 *             (STR[0]).MLCOMP[i][0]=i
 */
      ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_i]) = 1;

      /* "Pythonreflectivity.pyx":4376
 *             (STR[0]).MLREP[i]=1
 *             (STR[0]).MLLENGTH[i]=1
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *             (STR[0]).MLCOMP[i][0]=i
 *         return 0
 */
      ((__pyx_v_STR[0]).MLCOMP[__pyx_v_i]) = ((int *)malloc((sizeof(int))));

      /* "Pythonreflectivity.pyx":4377
 *             (STR[0]).MLLENGTH[i]=1
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 *             (STR[0]).MLCOMP[i][0]=i             # <<<<<<<<<<<<<<
 *         return 0
 * 
 */
      (((__pyx_v_STR[0]).MLCOMP[__pyx_v_i])[0]) = __pyx_v_i;
    }

    /* "Pythonreflectivity.pyx":4378
 *             (STR[0]).MLCOMP[i]= <int*>malloc(sizeof(int))
 *             (STR[0]).MLCOMP[i][0]=i
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     SaveNumbers=[]
 */
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "Pythonreflectivity.pyx":4380
 *         return 0
 * 
 *     SaveNumbers=[]             # <<<<<<<<<<<<<<
 * 
 *   #  print "not default"
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4380; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_SaveNumbers = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Pythonreflectivity.pyx":4383
 * 
 *   #  print "not default"
 *     a=string.split(",")             # <<<<<<<<<<<<<<
 * 
 *     N=len(a)
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_string, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_a = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Pythonreflectivity.pyx":4385
 *     a=string.split(",")
 * 
 *     N=len(a)             # <<<<<<<<<<<<<<
 *     cdef int j=0
 *     IsInBracket=False
 */
  __pyx_t_3 = PyObject_Length(__pyx_v_a); if (unlikely(__pyx_t_3 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_N = __pyx_t_3;

  /* "Pythonreflectivity.pyx":4386
 * 
 *     N=len(a)
 *     cdef int j=0             # <<<<<<<<<<<<<<
 *     IsInBracket=False
 *     cdef int k=0
 */
  __pyx_v_j = 0;

  /* "Pythonreflectivity.pyx":4387
 *     N=len(a)
 *     cdef int j=0
 *     IsInBracket=False             # <<<<<<<<<<<<<<
 *     cdef int k=0
 *     cdef int l
 */
  __pyx_v_IsInBracket = 0;

  /* "Pythonreflectivity.pyx":4388
 *     cdef int j=0
 *     IsInBracket=False
 *     cdef int k=0             # <<<<<<<<<<<<<<
 *     cdef int l
 * 
 */
  __pyx_v_k = 0;

  /* "Pythonreflectivity.pyx":4392
 * 
 * 
 *     for i in range(N):             # <<<<<<<<<<<<<<
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')
 */
  __pyx_t_3 = __pyx_v_N;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "Pythonreflectivity.pyx":4393
 * 
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split('*(')
 *             (STR[0]).MLREP[j]=int(b[0])
 */
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4393; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_find); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_RichCompare(__pyx_t_5, __pyx_int_neg_1, Py_NE); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4394
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')             # <<<<<<<<<<<<<<
 *             (STR[0]).MLREP[j]=int(b[0])
 *          #   print "j", j
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4394; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "Pythonreflectivity.pyx":4395
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')
 *             (STR[0]).MLREP[j]=int(b[0])             # <<<<<<<<<<<<<<
 *          #   print "j", j
 *             SaveNumbers=SaveNumbers+[int(b[1])]
 */
      __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4395; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4395; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      ((__pyx_v_STR[0]).MLREP[__pyx_v_j]) = __pyx_t_2;

      /* "Pythonreflectivity.pyx":4397
 *             (STR[0]).MLREP[j]=int(b[0])
 *          #   print "j", j
 *             SaveNumbers=SaveNumbers+[int(b[1])]             # <<<<<<<<<<<<<<
 *             IsInBracket=True
 *             k=1
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_b, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4397; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_4));
      __pyx_t_4 = 0;

      /* "Pythonreflectivity.pyx":4398
 *          #   print "j", j
 *             SaveNumbers=SaveNumbers+[int(b[1])]
 *             IsInBracket=True             # <<<<<<<<<<<<<<
 *             k=1
 *         elif (a[i].find(')')!=-1):
 */
      __pyx_v_IsInBracket = 1;

      /* "Pythonreflectivity.pyx":4399
 *             SaveNumbers=SaveNumbers+[int(b[1])]
 *             IsInBracket=True
 *             k=1             # <<<<<<<<<<<<<<
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')
 */
      __pyx_v_k = 1;
      goto __pyx_L8;
    }

    /* "Pythonreflectivity.pyx":4400
 *             IsInBracket=True
 *             k=1
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 */
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_4 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4400; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_find); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_4, __pyx_int_neg_1, Py_NE); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_1 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_1) {

      /* "Pythonreflectivity.pyx":4401
 *             k=1
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')             # <<<<<<<<<<<<<<
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4401; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF_SET(__pyx_v_b, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "Pythonreflectivity.pyx":4402
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *             k=k+1
 */
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_b, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4402; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_4));
      __pyx_t_4 = 0;

      /* "Pythonreflectivity.pyx":4403
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False             # <<<<<<<<<<<<<<
 *             k=k+1
 *             (STR[0]).MLLENGTH[j]=k
 */
      __pyx_v_IsInBracket = 0;

      /* "Pythonreflectivity.pyx":4404
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False
 *             k=k+1             # <<<<<<<<<<<<<<
 *             (STR[0]).MLLENGTH[j]=k
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))
 */
      __pyx_v_k = (__pyx_v_k + 1);

      /* "Pythonreflectivity.pyx":4405
 *             IsInBracket=False
 *             k=k+1
 *             (STR[0]).MLLENGTH[j]=k             # <<<<<<<<<<<<<<
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))
 *          #   print "j", j
 */
      ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j]) = __pyx_v_k;

      /* "Pythonreflectivity.pyx":4406
 *             k=k+1
 *             (STR[0]).MLLENGTH[j]=k
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))             # <<<<<<<<<<<<<<
 *          #   print "j", j
 *             for l in range((STR[0]).MLLENGTH[j]):
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyInt_FromSize_t((sizeof(int))); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyInt_As_size_t(__pyx_t_7); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4406; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      ((__pyx_v_STR[0]).MLCOMP[__pyx_v_j]) = ((int *)malloc(__pyx_t_8));

      /* "Pythonreflectivity.pyx":4408
 *             (STR[0]).MLCOMP[j]= <int*>malloc(int((STR[0]).MLLENGTH[j])*sizeof(int))
 *          #   print "j", j
 *             for l in range((STR[0]).MLLENGTH[j]):             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])
 *             SaveNumbers=[]
 */
      __pyx_t_2 = ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j]);
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_2; __pyx_t_9+=1) {
        __pyx_v_l = __pyx_t_9;

        /* "Pythonreflectivity.pyx":4409
 *          #   print "j", j
 *             for l in range((STR[0]).MLLENGTH[j]):
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])             # <<<<<<<<<<<<<<
 *             SaveNumbers=[]
 *             j=j+1
 */
        __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_v_SaveNumbers, __pyx_v_l, int, 1, __Pyx_PyInt_From_int, 1, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4409; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_5 = PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_10 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_10 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4409; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        (((__pyx_v_STR[0]).MLCOMP[__pyx_v_j])[__pyx_v_l]) = __pyx_t_10;
      }

      /* "Pythonreflectivity.pyx":4410
 *             for l in range((STR[0]).MLLENGTH[j]):
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])
 *             SaveNumbers=[]             # <<<<<<<<<<<<<<
 *             j=j+1
 *         #    print a[i], "x", j
 */
      __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_5));
      __pyx_t_5 = 0;

      /* "Pythonreflectivity.pyx":4411
 *                 (STR[0]).MLCOMP[j][l]=int(SaveNumbers[l])
 *             SaveNumbers=[]
 *             j=j+1             # <<<<<<<<<<<<<<
 *         #    print a[i], "x", j
 *         else:
 */
      __pyx_v_j = (__pyx_v_j + 1);
      goto __pyx_L8;
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":4414
 *         #    print a[i], "x", j
 *         else:
 *             if(IsInBracket):             # <<<<<<<<<<<<<<
 *                 k=k+1
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 */
      __pyx_t_1 = (__pyx_v_IsInBracket != 0);
      if (__pyx_t_1) {

        /* "Pythonreflectivity.pyx":4415
 *         else:
 *             if(IsInBracket):
 *                 k=k+1             # <<<<<<<<<<<<<<
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 *             else:
 */
        __pyx_v_k = (__pyx_v_k + 1);

        /* "Pythonreflectivity.pyx":4416
 *             if(IsInBracket):
 *                 k=k+1
 *                 SaveNumbers=SaveNumbers+[int(a[i])]             # <<<<<<<<<<<<<<
 *             else:
 *                 (STR[0]).MLREP[j]=1
 */
        __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_5 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4416; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_7 = PyNumber_Int(__pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyList_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyList_SET_ITEM(__pyx_t_5, 0, __pyx_t_7);
        __Pyx_GIVEREF(__pyx_t_7);
        __pyx_t_7 = 0;
        __pyx_t_7 = PyNumber_Add(__pyx_v_SaveNumbers, __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF_SET(__pyx_v_SaveNumbers, ((PyObject*)__pyx_t_7));
        __pyx_t_7 = 0;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4418
 *                 SaveNumbers=SaveNumbers+[int(a[i])]
 *             else:
 *                 (STR[0]).MLREP[j]=1             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLLENGTH[j]=1
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 */
        ((__pyx_v_STR[0]).MLREP[__pyx_v_j]) = 1;

        /* "Pythonreflectivity.pyx":4419
 *             else:
 *                 (STR[0]).MLREP[j]=1
 *                 (STR[0]).MLLENGTH[j]=1             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])
 */
        ((__pyx_v_STR[0]).MLLENGTH[__pyx_v_j]) = 1;

        /* "Pythonreflectivity.pyx":4420
 *                 (STR[0]).MLREP[j]=1
 *                 (STR[0]).MLLENGTH[j]=1
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))             # <<<<<<<<<<<<<<
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])
 *                 j=j+1
 */
        ((__pyx_v_STR[0]).MLCOMP[__pyx_v_j]) = ((int *)malloc((sizeof(int))));

        /* "Pythonreflectivity.pyx":4421
 *                 (STR[0]).MLLENGTH[j]=1
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])             # <<<<<<<<<<<<<<
 *                 j=j+1
 * 
 */
        __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_a, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4421; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_5 = PyNumber_Int(__pyx_t_7); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_t_5); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        (((__pyx_v_STR[0]).MLCOMP[__pyx_v_j])[0]) = __pyx_t_2;

        /* "Pythonreflectivity.pyx":4422
 *                 (STR[0]).MLCOMP[j]= <int*>malloc(sizeof(int))
 *                 (STR[0]).MLCOMP[j][0]=int(a[i])
 *                 j=j+1             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_v_j = (__pyx_v_j + 1);
      }
      __pyx_L11:;
    }
    __pyx_L8:;
  }

  /* "Pythonreflectivity.pyx":4427
 * 
 * 
 *     MakeConsistencyCheck(string, &(STR[0]), MaxLayer)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_MaxLayer); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __pyx_f_18Pythonreflectivity_MakeConsistencyCheck(__pyx_v_string, (&(__pyx_v_STR[0])), __pyx_t_5); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "Pythonreflectivity.pyx":4364
 * 
 * 
 * cdef int FindComposition(string, int MaxLayer, int LayerNumber, Heterostructure *STR):             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_WriteUnraisable("Pythonreflectivity.FindComposition", __pyx_clineno, __pyx_lineno, __pyx_filename, 0);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_SaveNumbers);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_b);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_1Generate_structure(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_1Generate_structure = {"Generate_structure", (PyCFunction)__pyx_pw_18Pythonreflectivity_1Generate_structure, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_1Generate_structure(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_NLayers_types;
  PyObject *__pyx_v_MLstructure = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Generate_structure (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_NLayers_types,&__pyx_n_s_MLstructure,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_n_s_default);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_NLayers_types)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_MLstructure);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Generate_structure") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_NLayers_types = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_NLayers_types == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_MLstructure = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Generate_structure", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Generate_structure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_Generate_structure(__pyx_self, __pyx_v_NLayers_types, __pyx_v_MLstructure);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_Generate_structure(CYTHON_UNUSED PyObject *__pyx_self, int __pyx_v_NLayers_types, PyObject *__pyx_v_MLstructure) {
  int __pyx_v_i;
  PyObject *__pyx_v_HS = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Generate_structure", 0);

  /* "Pythonreflectivity.pyx":4438
 * 
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):             # <<<<<<<<<<<<<<
 *         raise Exception("Please generate at least one layer!")
 * 
 */
  __pyx_t_1 = ((__pyx_v_NLayers_types <= 0) != 0);
  if (__pyx_t_1) {

    /* "Pythonreflectivity.pyx":4439
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):
 *         raise Exception("Please generate at least one layer!")             # <<<<<<<<<<<<<<
 * 
 *     cdef int i
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":4442
 * 
 *     cdef int i
 *     HS=[0 for i in range(NLayers_types)]             # <<<<<<<<<<<<<<
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):
 */
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __pyx_v_NLayers_types;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_int_0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_HS = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":4443
 *     cdef int i
 *     HS=[0 for i in range(NLayers_types)]
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)             # <<<<<<<<<<<<<<
 *     for i in range(1,NLayers_types):
 *         HS[i]=Layer(0,0)
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NLayers_types); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  __Pyx_INCREF(__pyx_v_MLstructure);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_MLstructure);
  __Pyx_GIVEREF(__pyx_v_MLstructure);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_18Pythonreflectivity_Lowestlayer)), __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(__Pyx_SetItemInt(__pyx_v_HS, 0, __pyx_t_2, long, 1, __Pyx_PyInt_From_long, 1, 0, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4443; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Pythonreflectivity.pyx":4444
 *     HS=[0 for i in range(NLayers_types)]
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):             # <<<<<<<<<<<<<<
 *         HS[i]=Layer(0,0)
 * 
 */
  __pyx_t_3 = __pyx_v_NLayers_types;
  for (__pyx_t_4 = 1; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "Pythonreflectivity.pyx":4445
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):
 *         HS[i]=Layer(0,0)             # <<<<<<<<<<<<<<
 * 
 *   #  HS[0].initstructure(MLstructure, NLayers_types)
 */
    __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)((PyObject*)__pyx_ptype_18Pythonreflectivity_Layer)), __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_HS, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 1, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }

  /* "Pythonreflectivity.pyx":4449
 *   #  HS[0].initstructure(MLstructure, NLayers_types)
 * 
 *     return HS             # <<<<<<<<<<<<<<
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_HS);
  __pyx_r = __pyx_v_HS;
  goto __pyx_L0;

  /* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("Pythonreflectivity.Generate_structure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_HS);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */

/* Python wrapper */
static PyObject *__pyx_pw_18Pythonreflectivity_3Reflectivity(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_18Pythonreflectivity_3Reflectivity = {"Reflectivity", (PyCFunction)__pyx_pw_18Pythonreflectivity_3Reflectivity, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_18Pythonreflectivity_3Reflectivity(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_HS = 0;
  PyObject *__pyx_v_th = 0;
  PyObject *__pyx_v_wavelength = 0;
  PyObject *__pyx_v_MultipleScattering = 0;
  PyObject *__pyx_v_MagneticCutoff = 0;
  PyObject *__pyx_v_Output = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("Reflectivity (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_HS,&__pyx_n_s_th,&__pyx_n_s_wavelength,&__pyx_n_s_MultipleScattering,&__pyx_n_s_MagneticCutoff,&__pyx_n_s_Output,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[3] = ((PyObject *)__pyx_int_1);
    values[4] = ((PyObject *)__pyx_float_1_0Eneg_6);
    values[5] = ((PyObject *)__pyx_n_s_T);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_HS)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_th)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Reflectivity", 0, 3, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("Reflectivity", 0, 3, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_MultipleScattering);
          if (value) { values[3] = value; kw_args--; }
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_MagneticCutoff);
          if (value) { values[4] = value; kw_args--; }
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s_Output);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "Reflectivity") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_HS = values[0];
    __pyx_v_th = values[1];
    __pyx_v_wavelength = values[2];
    __pyx_v_MultipleScattering = values[3];
    __pyx_v_MagneticCutoff = values[4];
    __pyx_v_Output = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("Reflectivity", 0, 3, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("Pythonreflectivity.Reflectivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_18Pythonreflectivity_2Reflectivity(__pyx_self, __pyx_v_HS, __pyx_v_th, __pyx_v_wavelength, __pyx_v_MultipleScattering, __pyx_v_MagneticCutoff, __pyx_v_Output);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_18Pythonreflectivity_2Reflectivity(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_HS, PyObject *__pyx_v_th, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_MultipleScattering, PyObject *__pyx_v_MagneticCutoff, PyObject *__pyx_v_Output) {
  int __pyx_v_NAngles;
  long __pyx_v_a;
  struct __pyx_t_18Pythonreflectivity_Heterostructure *__pyx_v_A;
  struct __pyx_t_18Pythonreflectivity_CLayer *__pyx_v_B;
  CYTHON_UNUSED int __pyx_v_NLayers;
  int __pyx_v_NLayers_types;
  int __pyx_v_i;
  int __pyx_v_allx;
  int __pyx_v_ally;
  int __pyx_v_allz;
  double __pyx_v_Cutoffquad;
  int __pyx_v_Setting1;
  int __pyx_v_Setting2;
  int __pyx_v_Setting3;
  __pyx_t_double_complex __pyx_v_rss;
  __pyx_t_double_complex __pyx_v_rpp;
  __pyx_t_double_complex __pyx_v_rmat[2][2];
  PyObject *__pyx_v_routs = NULL;
  PyObject *__pyx_v_routp = NULL;
  PyObject *__pyx_v_rempty = NULL;
  PyObject *__pyx_v_routl = NULL;
  PyObject *__pyx_v_routr = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  long __pyx_t_9;
  int __pyx_t_10;
  double __pyx_t_11;
  int __pyx_t_12;
  double __pyx_t_13;
  __pyx_t_double_complex __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("Reflectivity", 0);
  __Pyx_INCREF(__pyx_v_th);

  /* "Pythonreflectivity.pyx":4453
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):             # <<<<<<<<<<<<<<
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")
 * 
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_HS, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4453; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_isthisthelowestlayer); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_int_1, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "Pythonreflectivity.pyx":4454
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")             # <<<<<<<<<<<<<<
 * 
 *     if(hasattr(th, "__len__")==False):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":4456
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")
 * 
 *     if(hasattr(th, "__len__")==False):             # <<<<<<<<<<<<<<
 *         th=np.array([th])
 *     cdef int NAngles=len(th)
 */
  __pyx_t_4 = PyObject_HasAttr(__pyx_v_th, __pyx_n_s_len); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = ((__pyx_t_4 == 0) != 0);
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4457
 * 
 *     if(hasattr(th, "__len__")==False):
 *         th=np.array([th])             # <<<<<<<<<<<<<<
 *     cdef int NAngles=len(th)
 * 
 */
    __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_array); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_th);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_th);
    __Pyx_GIVEREF(__pyx_v_th);
    __pyx_t_6 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (!__pyx_t_6) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_3);
    } else {
      __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
      PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_th, __pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "Pythonreflectivity.pyx":4458
 *     if(hasattr(th, "__len__")==False):
 *         th=np.array([th])
 *     cdef int NAngles=len(th)             # <<<<<<<<<<<<<<
 * 
 *     cdef long a=(HS[0].motherpointer())
 */
  __pyx_t_8 = PyObject_Length(__pyx_v_th); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_NAngles = __pyx_t_8;

  /* "Pythonreflectivity.pyx":4460
 *     cdef int NAngles=len(th)
 * 
 *     cdef long a=(HS[0].motherpointer())             # <<<<<<<<<<<<<<
 *     cdef Heterostructure* A=<Heterostructure*>a #Recover the C storage of the structure
 *     cdef CLayer* B
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_HS, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4460; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_motherpointer); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  if (__pyx_t_2) {
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_9 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_9 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_a = __pyx_t_9;

  /* "Pythonreflectivity.pyx":4461
 * 
 *     cdef long a=(HS[0].motherpointer())
 *     cdef Heterostructure* A=<Heterostructure*>a #Recover the C storage of the structure             # <<<<<<<<<<<<<<
 *     cdef CLayer* B
 * 
 */
  __pyx_v_A = ((struct __pyx_t_18Pythonreflectivity_Heterostructure *)__pyx_v_a);

  /* "Pythonreflectivity.pyx":4464
 *     cdef CLayer* B
 * 
 *     cdef int NLayers=(A[0]).NLayers             # <<<<<<<<<<<<<<
 * 
 *     cdef int NLayers_types=(A[0]).NLayers_types
 */
  __pyx_t_10 = (__pyx_v_A[0]).NLayers;
  __pyx_v_NLayers = __pyx_t_10;

  /* "Pythonreflectivity.pyx":4466
 *     cdef int NLayers=(A[0]).NLayers
 * 
 *     cdef int NLayers_types=(A[0]).NLayers_types             # <<<<<<<<<<<<<<
 *     cdef int i
 * 
 */
  __pyx_t_10 = (__pyx_v_A[0]).NLayers_types;
  __pyx_v_NLayers_types = __pyx_t_10;

  /* "Pythonreflectivity.pyx":4470
 * 
 * 
 *     cdef int allx=0             # <<<<<<<<<<<<<<
 *     cdef int ally=0
 *     cdef int allz=0
 */
  __pyx_v_allx = 0;

  /* "Pythonreflectivity.pyx":4471
 * 
 *     cdef int allx=0
 *     cdef int ally=0             # <<<<<<<<<<<<<<
 *     cdef int allz=0
 * 
 */
  __pyx_v_ally = 0;

  /* "Pythonreflectivity.pyx":4472
 *     cdef int allx=0
 *     cdef int ally=0
 *     cdef int allz=0             # <<<<<<<<<<<<<<
 * 
 *     cdef double Cutoffquad=quadr(MagneticCutoff)
 */
  __pyx_v_allz = 0;

  /* "Pythonreflectivity.pyx":4474
 *     cdef int allz=0
 * 
 *     cdef double Cutoffquad=quadr(MagneticCutoff)             # <<<<<<<<<<<<<<
 * 
 *     cdef int Setting1
 */
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_MagneticCutoff); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_Cutoffquad = __pyx_f_18Pythonreflectivity_quadr(__pyx_t_11);

  /* "Pythonreflectivity.pyx":4478
 *     cdef int Setting1
 *     cdef int Setting2
 *     cdef int Setting3=0 #0 Means Heterostructure has no magnetic parts             # <<<<<<<<<<<<<<
 * 
 *     if(Output=="s"): #return complex rss
 */
  __pyx_v_Setting3 = 0;

  /* "Pythonreflectivity.pyx":4480
 *     cdef int Setting3=0 #0 Means Heterostructure has no magnetic parts
 * 
 *     if(Output=="s"): #return complex rss             # <<<<<<<<<<<<<<
 *         Setting1=1
 *         Setting2=0
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_s, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4481
 * 
 *     if(Output=="s"): #return complex rss
 *         Setting1=1             # <<<<<<<<<<<<<<
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss
 */
    __pyx_v_Setting1 = 1;

    /* "Pythonreflectivity.pyx":4482
 *     if(Output=="s"): #return complex rss
 *         Setting1=1
 *         Setting2=0             # <<<<<<<<<<<<<<
 *     elif(Output=="S"): #return real Rss
 *         Setting1=1
 */
    __pyx_v_Setting2 = 0;
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4483
 *         Setting1=1
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss             # <<<<<<<<<<<<<<
 *         Setting1=1
 *         Setting2=1
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_S, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4484
 *         Setting2=0
 *     elif(Output=="S"): #return real Rss
 *         Setting1=1             # <<<<<<<<<<<<<<
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp
 */
    __pyx_v_Setting1 = 1;

    /* "Pythonreflectivity.pyx":4485
 *     elif(Output=="S"): #return real Rss
 *         Setting1=1
 *         Setting2=1             # <<<<<<<<<<<<<<
 *     elif(Output=="p"): #return complex rpp
 *         Setting1=2
 */
    __pyx_v_Setting2 = 1;
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4486
 *         Setting1=1
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp             # <<<<<<<<<<<<<<
 *         Setting1=2
 *         Setting2=0
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_p, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4487
 *         Setting2=1
 *     elif(Output=="p"): #return complex rpp
 *         Setting1=2             # <<<<<<<<<<<<<<
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp
 */
    __pyx_v_Setting1 = 2;

    /* "Pythonreflectivity.pyx":4488
 *     elif(Output=="p"): #return complex rpp
 *         Setting1=2
 *         Setting2=0             # <<<<<<<<<<<<<<
 *     elif(Output=="P"): #return real Rpp
 *         Setting1=2
 */
    __pyx_v_Setting2 = 0;
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4489
 *         Setting1=2
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp             # <<<<<<<<<<<<<<
 *         Setting1=2
 *         Setting2=1
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_P, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4490
 *         Setting2=0
 *     elif(Output=="P"): #return real Rpp
 *         Setting1=2             # <<<<<<<<<<<<<<
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 */
    __pyx_v_Setting1 = 2;

    /* "Pythonreflectivity.pyx":4491
 *     elif(Output=="P"): #return real Rpp
 *         Setting1=2
 *         Setting2=1             # <<<<<<<<<<<<<<
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 *         Setting1=3
 */
    __pyx_v_Setting2 = 1;
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4492
 *         Setting1=2
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp             # <<<<<<<<<<<<<<
 *         Setting1=3
 *         Setting2=0
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_t, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4493
 *         Setting2=1
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 *         Setting1=3             # <<<<<<<<<<<<<<
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 */
    __pyx_v_Setting1 = 3;

    /* "Pythonreflectivity.pyx":4494
 *     elif(Output=="t"): #return complex rss,rsp,rps,rpp
 *         Setting1=3
 *         Setting2=0             # <<<<<<<<<<<<<<
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 *         Setting1=3
 */
    __pyx_v_Setting2 = 0;
    goto __pyx_L5;
  }

  /* "Pythonreflectivity.pyx":4495
 *         Setting1=3
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr             # <<<<<<<<<<<<<<
 *         Setting1=3
 *         Setting2=1
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_Output, __pyx_n_s_T, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4496
 *         Setting2=0
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 *         Setting1=3             # <<<<<<<<<<<<<<
 *         Setting2=1
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 */
    __pyx_v_Setting1 = 3;

    /* "Pythonreflectivity.pyx":4497
 *     elif(Output=="T"): #return real Rs, Rp, Rl, Rr
 *         Setting1=3
 *         Setting2=1             # <<<<<<<<<<<<<<
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 *         a=(HS[i]).layercontentpointer()
 */
    __pyx_v_Setting2 = 1;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "Pythonreflectivity.pyx":4498
 *         Setting1=3
 *         Setting2=1
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure             # <<<<<<<<<<<<<<
 *         a=(HS[i]).layercontentpointer()
 *         B=<CLayer*>a
 */
  __pyx_t_10 = __pyx_v_NLayers_types;
  for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
    __pyx_v_i = __pyx_t_12;

    /* "Pythonreflectivity.pyx":4499
 *         Setting2=1
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 *         a=(HS[i]).layercontentpointer()             # <<<<<<<<<<<<<<
 *         B=<CLayer*>a
 *        # LR[i]=B[0]
 */
    __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_HS, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4499; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_layercontentpointer); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_COMPILING_IN_CPYTHON && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    if (__pyx_t_7) {
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    } else {
      __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_9 = __Pyx_PyInt_As_long(__pyx_t_3); if (unlikely((__pyx_t_9 == (long)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_a = __pyx_t_9;

    /* "Pythonreflectivity.pyx":4500
 *     for i in range(NLayers_types):  #Download all layers that the user has filled into the Structure
 *         a=(HS[i]).layercontentpointer()
 *         B=<CLayer*>a             # <<<<<<<<<<<<<<
 *        # LR[i]=B[0]
 *         (A[0]).LR[i]=B[0]
 */
    __pyx_v_B = ((struct __pyx_t_18Pythonreflectivity_CLayer *)__pyx_v_a);

    /* "Pythonreflectivity.pyx":4502
 *         B=<CLayer*>a
 *        # LR[i]=B[0]
 *         (A[0]).LR[i]=B[0]             # <<<<<<<<<<<<<<
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):
 */
    ((__pyx_v_A[0]).LR[__pyx_v_i]) = (__pyx_v_B[0]);

    /* "Pythonreflectivity.pyx":4504
 *         (A[0]).LR[i]=B[0]
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):             # <<<<<<<<<<<<<<
 *             Setting3=1
 *             if(B[0].magdir==1):
 */
    __pyx_t_5 = (((__pyx_v_B[0]).type == 3) != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4505
 *        # print "content", (A[0]).LR[i].ex
 *         if(B[0].type==3):
 *             Setting3=1             # <<<<<<<<<<<<<<
 *             if(B[0].magdir==1):
 *                 allx=1
 */
      __pyx_v_Setting3 = 1;

      /* "Pythonreflectivity.pyx":4506
 *         if(B[0].type==3):
 *             Setting3=1
 *             if(B[0].magdir==1):             # <<<<<<<<<<<<<<
 *                 allx=1
 *             elif(B[0].magdir==2):
 */
      __pyx_t_5 = (((__pyx_v_B[0]).magdir == 1) != 0);
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4507
 *             Setting3=1
 *             if(B[0].magdir==1):
 *                 allx=1             # <<<<<<<<<<<<<<
 *             elif(B[0].magdir==2):
 *                 ally=1
 */
        __pyx_v_allx = 1;
        goto __pyx_L9;
      }

      /* "Pythonreflectivity.pyx":4508
 *             if(B[0].magdir==1):
 *                 allx=1
 *             elif(B[0].magdir==2):             # <<<<<<<<<<<<<<
 *                 ally=1
 *             elif(B[0].magdir==3):
 */
      __pyx_t_5 = (((__pyx_v_B[0]).magdir == 2) != 0);
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4509
 *                 allx=1
 *             elif(B[0].magdir==2):
 *                 ally=1             # <<<<<<<<<<<<<<
 *             elif(B[0].magdir==3):
 *                 allz=1
 */
        __pyx_v_ally = 1;
        goto __pyx_L9;
      }

      /* "Pythonreflectivity.pyx":4510
 *             elif(B[0].magdir==2):
 *                 ally=1
 *             elif(B[0].magdir==3):             # <<<<<<<<<<<<<<
 *                 allz=1
 *             if(Setting1!=3):
 */
      __pyx_t_5 = (((__pyx_v_B[0]).magdir == 3) != 0);
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4511
 *                 ally=1
 *             elif(B[0].magdir==3):
 *                 allz=1             # <<<<<<<<<<<<<<
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 */
        __pyx_v_allz = 1;
        goto __pyx_L9;
      }
      __pyx_L9:;

      /* "Pythonreflectivity.pyx":4512
 *             elif(B[0].magdir==3):
 *                 allz=1
 *             if(Setting1!=3):             # <<<<<<<<<<<<<<
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 */
      __pyx_t_5 = ((__pyx_v_Setting1 != 3) != 0);
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4513
 *                 allz=1
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')             # <<<<<<<<<<<<<<
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 * 
 */
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "Pythonreflectivity.pyx":4514
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff             # <<<<<<<<<<<<<<
 * 
 *                # HS[i].seteps([HS[i].epsxx(), HS[i].epsyy(), HS[i].epszz()])
 */
      __pyx_t_5 = ((__pyx_f_18Pythonreflectivity_cabsquadr((__pyx_v_B[0]).eg) < __pyx_v_Cutoffquad) != 0);
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4518
 *                # HS[i].seteps([HS[i].epsxx(), HS[i].epsyy(), HS[i].epszz()])
 * 
 *                 (A[0]).LR[i].eg=0             # <<<<<<<<<<<<<<
 *                 (A[0]).LR[i].type=2
 *                 (A[0]).LR[i].magdir=0
 */
        ((__pyx_v_A[0]).LR[__pyx_v_i]).eg = __pyx_t_double_complex_from_parts(0, 0);

        /* "Pythonreflectivity.pyx":4519
 * 
 *                 (A[0]).LR[i].eg=0
 *                 (A[0]).LR[i].type=2             # <<<<<<<<<<<<<<
 *                 (A[0]).LR[i].magdir=0
 * 
 */
        ((__pyx_v_A[0]).LR[__pyx_v_i]).type = 2;

        /* "Pythonreflectivity.pyx":4520
 *                 (A[0]).LR[i].eg=0
 *                 (A[0]).LR[i].type=2
 *                 (A[0]).LR[i].magdir=0             # <<<<<<<<<<<<<<
 * 
 * 
 */
        ((__pyx_v_A[0]).LR[__pyx_v_i]).magdir = 0;
        goto __pyx_L11;
      }
      __pyx_L11:;
      goto __pyx_L8;
    }
    __pyx_L8:;
  }

  /* "Pythonreflectivity.pyx":4525
 * 
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):             # <<<<<<<<<<<<<<
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')
 * 
 */
  __pyx_t_5 = ((((__pyx_v_ally & __pyx_v_allz) | (__pyx_v_ally & __pyx_v_allx)) | (__pyx_v_allx & __pyx_v_allz)) != 0);
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4526
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_Exception, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "Pythonreflectivity.pyx":4537
 *     cdef double complex rmat[2][2]
 * 
 *     if(Setting3==0):#Not magnetic             # <<<<<<<<<<<<<<
 * 
 *         if(Setting1!=2): #2 means only pi
 */
  __pyx_t_5 = ((__pyx_v_Setting3 == 0) != 0);
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4539
 *     if(Setting3==0):#Not magnetic
 * 
 *         if(Setting1!=2): #2 means only pi             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_5 = ((__pyx_v_Setting1 != 2) != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4542
 * 
 * 
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 * 
 *                 if(Setting2): #means absquadr
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4544
 *             if(MultipleScattering):
 * 
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4545
 * 
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_1) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4546
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4547
 *                     routs=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4547; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4548
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_3 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          goto __pyx_L16;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4550
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routs = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4551
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=rss
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4552
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *             else:
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4552; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4553
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *             else:
 * 
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
        }
        __pyx_L16:;
        goto __pyx_L15;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4556
 *             else:
 * 
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 * 
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4557
 * 
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 * 
 *                     for i in range(NAngles):
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else {
            __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4559
 *                     routs=np.zeros(NAngles)
 * 
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4560
 * 
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4560; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4561
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_2 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          goto __pyx_L21;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4563
 *                         routs[i]=cabsquadr(rss)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4564
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4565
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4565; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4566
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L21:;
      }
      __pyx_L15:;
      goto __pyx_L14;
    }
    __pyx_L14:;

    /* "Pythonreflectivity.pyx":4567
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_5 = ((__pyx_v_Setting1 != 1) != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4568
 *                         routs[i]=rss
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4569
 *         if(Setting1!=1): #1 means only sigma
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4570
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4571
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4572
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4572; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4573
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_3 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          goto __pyx_L28;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4575
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4576
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=rpp
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4577
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *             else:
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4577; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_MS(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4578
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi_MS(A, th[i], wavelength)
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
        }
        __pyx_L28:;
        goto __pyx_L27;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4580
 *                         routp[i]=rpp
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4581
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_1) {
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4582
 *                 if(Setting2): #means absquadr
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4583
 *                     routp=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4583; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4584
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_2 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4584; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          goto __pyx_L33;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4586
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4587
 *                 else:
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=rpp
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4588
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *     else:#Magnetic
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4588; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4589
 *                     for i in range(NAngles):
 *                         rpp=LinDicParatt_Pi(A, th[i], wavelength)
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *     else:#Magnetic
 *         if(allx):
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L33:;
      }
      __pyx_L27:;
      goto __pyx_L26;
    }
    __pyx_L26:;
    goto __pyx_L13;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":4591
 *                         routp[i]=rpp
 *     else:#Magnetic
 *         if(allx):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_5 = (__pyx_v_allx != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4592
 *     else:#Magnetic
 *         if(allx):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4593
 *         if(allx):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4594
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4595
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          if (!__pyx_t_2) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
            PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4595; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4596
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_1);
            __pyx_t_1 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_rempty = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4597
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4598
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4598; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4599
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4600
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_3 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4601
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_3 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          goto __pyx_L40;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4603
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4604
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routp = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4605
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          if (!__pyx_t_3) {
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_1);
            __pyx_t_1 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4605; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_rempty = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4606
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4607
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=rss
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4607; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma_MS(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4608
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *                         routp[i]=rpp
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4608; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag_MS(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4609
 *                         rss=LinDicParatt_Sigma_MS(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *             else:
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4610
 *                         rpp=LinDicParatt_Pi_xmag_MS(A, th[i], wavelength)
 *                         routs[i]=rss
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_7 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
        }
        __pyx_L40:;
        goto __pyx_L39;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4612
 *                         routp[i]=rpp
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4613
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_1) {
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else {
            __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
            PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4614
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          if (!__pyx_t_2) {
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else {
            __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
            PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4615
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_7);
          } else {
            __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_rempty = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "Pythonreflectivity.pyx":4616
 *                     routp=np.zeros(NAngles)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4617
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4617; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4618
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)
 */
            __pyx_t_7 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4618; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4619
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 */
            __pyx_t_7 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rss)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "Pythonreflectivity.pyx":4620
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=cabsquadr(rss)
 *                         routp[i]=cabsquadr(rpp)             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_7 = PyFloat_FromDouble(__pyx_f_18Pythonreflectivity_cabsquadr(__pyx_v_rpp)); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_7, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4620; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          goto __pyx_L45;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4622
 *                         routp[i]=cabsquadr(rpp)
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 */
          __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_7);
          __Pyx_GIVEREF(__pyx_t_7);
          __pyx_t_7 = 0;
          __pyx_t_7 = PyDict_New(); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4623
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4623; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4624
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_rempty = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4625
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4626
 *                     rempty=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=rss
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4626; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Sigma(__pyx_v_A, __pyx_t_11, __pyx_t_13); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rss = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4627
 *                     for i in range(NAngles):
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)             # <<<<<<<<<<<<<<
 *                         routs[i]=rss
 *                         routp[i]=rpp
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4627; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_t_14 = __pyx_f_18Pythonreflectivity_LinDicParatt_Pi_xmag(__pyx_v_A, __pyx_t_13, __pyx_t_11); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_v_rpp = __pyx_t_14;

            /* "Pythonreflectivity.pyx":4628
 *                         rss=LinDicParatt_Sigma(A, th[i], wavelength)
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=rss             # <<<<<<<<<<<<<<
 *                         routp[i]=rpp
 *         elif(ally):
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_rss); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4629
 *                         rpp=LinDicParatt_Pi_xmag(A, th[i], wavelength)
 *                         routs[i]=rss
 *                         routp[i]=rpp             # <<<<<<<<<<<<<<
 *         elif(ally):
 *             if(MultipleScattering):
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(__pyx_v_rpp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
        }
        __pyx_L45:;
      }
      __pyx_L39:;
      goto __pyx_L38;
    }

    /* "Pythonreflectivity.pyx":4630
 *                         routs[i]=rss
 *                         routp[i]=rpp
 *         elif(ally):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_5 = (__pyx_v_ally != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4631
 *                         routp[i]=rpp
 *         elif(ally):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4632
 *         elif(ally):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4633
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_3) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
            PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4634
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_2) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
            PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4635
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_7);
            __Pyx_GIVEREF(__pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routl = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4636
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routr = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4637
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4638
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4638; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(__pyx_v_A, __pyx_t_11, __pyx_t_13, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4638; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4639
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_1 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4640
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_1 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4641
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_1 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4641; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4642
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_1 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          goto __pyx_L51;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4644
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4645
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4646
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routl = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4647
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routr = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4648
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4649
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4649; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y_MS(__pyx_v_A, __pyx_t_13, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4650
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4651
 *                         Paratt_magnetic_y_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4651; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4652
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 *             else:
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4653
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L51:;
        goto __pyx_L50;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4655
 *                         routr[i]=rmat[1][1]
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4656
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_2) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
            PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_1);
            __pyx_t_1 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4657
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_1 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_1) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
            PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4658
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_7);
            __Pyx_GIVEREF(__pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4658; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routl = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4659
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_3);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4659; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routr = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4660
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4661
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4661; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(__pyx_v_A, __pyx_t_11, __pyx_t_13, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4662
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_3 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4663
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_3 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4664
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_3 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4665
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_3 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          goto __pyx_L56;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4667
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routs = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4668
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routp = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4669
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routl = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4670
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4670; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routr = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4671
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4672
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4672; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_y(__pyx_v_A, __pyx_t_13, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4673
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4674
 *                         Paratt_magnetic_y(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4674; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4675
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 *         elif(allz):
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4676
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 *         elif(allz):
 *             if(MultipleScattering):
 */
            __pyx_t_2 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
        }
        __pyx_L56:;
      }
      __pyx_L50:;
      goto __pyx_L38;
    }

    /* "Pythonreflectivity.pyx":4677
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 *         elif(allz):             # <<<<<<<<<<<<<<
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 */
    __pyx_t_5 = (__pyx_v_allz != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4678
 *                         routr[i]=rmat[1][1]
 *         elif(allz):
 *             if(MultipleScattering):             # <<<<<<<<<<<<<<
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 */
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_MultipleScattering); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4678; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4679
 *         elif(allz):
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4680
 *             if(MultipleScattering):
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_1) {
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else {
            __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_1); __Pyx_GIVEREF(__pyx_t_1); __pyx_t_1 = NULL;
            PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4681
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_3) {
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else {
            __pyx_t_1 = PyTuple_New(1+1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
            PyTuple_SET_ITEM(__pyx_t_1, 0+1, __pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4682
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_7); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else {
            __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_7);
            __Pyx_GIVEREF(__pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routl = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4683
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_GOTREF(__pyx_t_2);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_1);
            __pyx_t_1 = 0;
            __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4683; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routr = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4684
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4685
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_2 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4685; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(__pyx_v_A, __pyx_t_11, __pyx_t_13, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4686
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_2 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4687
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_2 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4688
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_2 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4688; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

            /* "Pythonreflectivity.pyx":4689
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_2 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_2, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          goto __pyx_L62;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4691
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4692
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routp = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4693
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routl = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4694
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4694; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routr = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4695
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4696
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4696; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4696; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4696; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z_MS(__pyx_v_A, __pyx_t_13, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4696; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4697
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4698
 *                         Paratt_magnetic_z_MS(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4699
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 *             else:
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4700
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 *             else:
 *                 if(Setting2): #means absquadr
 */
            __pyx_t_1 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
        }
        __pyx_L62:;
        goto __pyx_L61;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4702
 *                         routr[i]=rmat[1][1]
 *             else:
 *                 if(Setting2): #means absquadr             # <<<<<<<<<<<<<<
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 */
        __pyx_t_5 = (__pyx_v_Setting2 != 0);
        if (__pyx_t_5) {

          /* "Pythonreflectivity.pyx":4703
 *             else:
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_6))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_6, function);
            }
          }
          if (!__pyx_t_3) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_7 = PyTuple_New(1+1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_7);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_3); __Pyx_GIVEREF(__pyx_t_3); __pyx_t_3 = NULL;
            PyTuple_SET_ITEM(__pyx_t_7, 0+1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_7, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_v_routs = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4704
 *                 if(Setting2): #means absquadr
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 */
          __pyx_t_6 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_2 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
            }
          }
          if (!__pyx_t_2) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_3 = PyTuple_New(1+1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2); __Pyx_GIVEREF(__pyx_t_2); __pyx_t_2 = NULL;
            PyTuple_SET_ITEM(__pyx_t_3, 0+1, __pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            __pyx_t_6 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_3, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_routp = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4705
 *                     routs=np.zeros(NAngles)
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 */
          __pyx_t_7 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_6 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          if (!__pyx_t_6) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_2 = PyTuple_New(1+1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_2);
            PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6); __Pyx_GIVEREF(__pyx_t_6); __pyx_t_6 = NULL;
            PyTuple_SET_ITEM(__pyx_t_2, 0+1, __pyx_t_7);
            __Pyx_GIVEREF(__pyx_t_7);
            __pyx_t_7 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routl = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4706
 *                     routp=np.zeros(NAngles)
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_7 = NULL;
          if (CYTHON_COMPILING_IN_CPYTHON && unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
            }
          }
          if (!__pyx_t_7) {
            __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_GOTREF(__pyx_t_1);
          } else {
            __pyx_t_6 = PyTuple_New(1+1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_7); __Pyx_GIVEREF(__pyx_t_7); __pyx_t_7 = NULL;
            PyTuple_SET_ITEM(__pyx_t_6, 0+1, __pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_3);
            __pyx_t_3 = 0;
            __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routr = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4707
 *                     routl=np.zeros(NAngles)
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4708
 *                     routr=np.zeros(NAngles)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 */
            __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_1 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4708; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(__pyx_v_A, __pyx_t_11, __pyx_t_13, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4709
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])             # <<<<<<<<<<<<<<
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 */
            __pyx_t_1 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[0])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4710
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])             # <<<<<<<<<<<<<<
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 */
            __pyx_t_1 = PyFloat_FromDouble((__pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[0])) + __pyx_f_18Pythonreflectivity_cabsquadr(((__pyx_v_rmat[1])[1])))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4711
 *                         routs[i]=cabsquadr(rmat[0][0])+cabsquadr(rmat[1][0])
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 */
            __pyx_t_1 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_diff(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4711; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

            /* "Pythonreflectivity.pyx":4712
 *                         routp[i]=cabsquadr(rmat[1][0])+cabsquadr(rmat[1][1])
 *                         routl[i]=0.5*(cabsquadr(rmat[0][0]-1j*rmat[0][1])+cabsquadr(rmat[1][0]-1j*rmat[1][1]) )
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )             # <<<<<<<<<<<<<<
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 */
            __pyx_t_1 = PyFloat_FromDouble((0.5 * (__pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[0])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[0])[1])))) + __pyx_f_18Pythonreflectivity_cabsquadr(__Pyx_c_sum(((__pyx_v_rmat[1])[0]), __Pyx_c_prod(__pyx_t_double_complex_from_parts(0, 1.0), ((__pyx_v_rmat[1])[1]))))))); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_1);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          goto __pyx_L67;
        }
        /*else*/ {

          /* "Pythonreflectivity.pyx":4714
 *                         routr[i]=0.5*(cabsquadr(rmat[0][0]+1j*rmat[0][1])+cabsquadr(rmat[1][0]+1j*rmat[1][1]) )
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routs = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4715
 *                 else:
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 */
          __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_3 = PyDict_New(); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, __pyx_t_3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_routp = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "Pythonreflectivity.pyx":4716
 *                     routs=np.zeros(NAngles, dtype=complex)
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 */
          __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_2 = 0;
          __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_routl = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "Pythonreflectivity.pyx":4717
 *                     routp=np.zeros(NAngles, dtype=complex)
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)             # <<<<<<<<<<<<<<
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 */
          __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s_np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_NAngles); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_6);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_dtype, ((PyObject *)((PyObject*)(&PyComplex_Type)))) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_routr = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "Pythonreflectivity.pyx":4718
 *                     routl=np.zeros(NAngles, dtype=complex)
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):             # <<<<<<<<<<<<<<
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 */
          __pyx_t_10 = __pyx_v_NAngles;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_10; __pyx_t_12+=1) {
            __pyx_v_i = __pyx_t_12;

            /* "Pythonreflectivity.pyx":4719
 *                     routr=np.zeros(NAngles, dtype=complex)
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)             # <<<<<<<<<<<<<<
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 */
            __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_th, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4719; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_13 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_13 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_wavelength); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __pyx_f_18Pythonreflectivity_Paratt_magnetic_z(__pyx_v_A, __pyx_t_13, __pyx_t_11, (&__pyx_v_rmat)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

            /* "Pythonreflectivity.pyx":4720
 *                     for i in range(NAngles):
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]             # <<<<<<<<<<<<<<
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routs, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4721
 *                         Paratt_magnetic_z(A, th[i], wavelength, &rmat)
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]             # <<<<<<<<<<<<<<
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[0])[1])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routp, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4722
 *                         routs[i]=rmat[0][0]
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]             # <<<<<<<<<<<<<<
 *                         routr[i]=rmat[1][1]
 * 
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routl, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

            /* "Pythonreflectivity.pyx":4723
 *                         routp[i]=rmat[0][1]
 *                         routl[i]=rmat[1][0]
 *                         routr[i]=rmat[1][1]             # <<<<<<<<<<<<<<
 * 
 * 
 */
            __pyx_t_3 = __pyx_PyComplex_FromComplex(((__pyx_v_rmat[1])[1])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_GOTREF(__pyx_t_3);
            if (unlikely(__Pyx_SetItemInt(__pyx_v_routr, __pyx_v_i, __pyx_t_3, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          }
        }
        __pyx_L67:;
      }
      __pyx_L61:;
      goto __pyx_L38;
    }
    __pyx_L38:;
  }
  __pyx_L13:;

  /* "Pythonreflectivity.pyx":4726
 * 
 * 
 *     if(allx):             # <<<<<<<<<<<<<<
 *         if(Setting2):
 *             rempty=0.5*(routp+routs)
 */
  __pyx_t_5 = (__pyx_v_allx != 0);
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4727
 * 
 *     if(allx):
 *         if(Setting2):             # <<<<<<<<<<<<<<
 *             rempty=0.5*(routp+routs)
 * 
 */
    __pyx_t_5 = (__pyx_v_Setting2 != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4728
 *     if(allx):
 *         if(Setting2):
 *             rempty=0.5*(routp+routs)             # <<<<<<<<<<<<<<
 * 
 *     if(Setting3==0):
 */
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4728; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4728; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      __pyx_t_3 = PyNumber_Add(__pyx_v_routp, __pyx_v_routs); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = PyNumber_Multiply(__pyx_float_0_5, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4728; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_rempty, __pyx_t_1);
      __pyx_t_1 = 0;
      goto __pyx_L73;
    }
    __pyx_L73:;
    goto __pyx_L72;
  }
  __pyx_L72:;

  /* "Pythonreflectivity.pyx":4730
 *             rempty=0.5*(routp+routs)
 * 
 *     if(Setting3==0):             # <<<<<<<<<<<<<<
 *         if(Setting1==1):
 *             return routs
 */
  __pyx_t_5 = ((__pyx_v_Setting3 == 0) != 0);
  if (__pyx_t_5) {

    /* "Pythonreflectivity.pyx":4735
 *         elif(Setting1==2):
 *             return routp
 *         elif(Setting1==3):             # <<<<<<<<<<<<<<
 *             return [routs, routp]
 *     else:
 */
    switch (__pyx_v_Setting1) {

      /* "Pythonreflectivity.pyx":4731
 * 
 *     if(Setting3==0):
 *         if(Setting1==1):             # <<<<<<<<<<<<<<
 *             return routs
 *         elif(Setting1==2):
 */
      case 1:

      /* "Pythonreflectivity.pyx":4732
 *     if(Setting3==0):
 *         if(Setting1==1):
 *             return routs             # <<<<<<<<<<<<<<
 *         elif(Setting1==2):
 *             return routp
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      __Pyx_INCREF(__pyx_v_routs);
      __pyx_r = __pyx_v_routs;
      goto __pyx_L0;
      break;

      /* "Pythonreflectivity.pyx":4733
 *         if(Setting1==1):
 *             return routs
 *         elif(Setting1==2):             # <<<<<<<<<<<<<<
 *             return routp
 *         elif(Setting1==3):
 */
      case 2:

      /* "Pythonreflectivity.pyx":4734
 *             return routs
 *         elif(Setting1==2):
 *             return routp             # <<<<<<<<<<<<<<
 *         elif(Setting1==3):
 *             return [routs, routp]
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4734; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      __Pyx_INCREF(__pyx_v_routp);
      __pyx_r = __pyx_v_routp;
      goto __pyx_L0;
      break;

      /* "Pythonreflectivity.pyx":4735
 *         elif(Setting1==2):
 *             return routp
 *         elif(Setting1==3):             # <<<<<<<<<<<<<<
 *             return [routs, routp]
 *     else:
 */
      case 3:

      /* "Pythonreflectivity.pyx":4736
 *             return routp
 *         elif(Setting1==3):
 *             return [routs, routp]             # <<<<<<<<<<<<<<
 *     else:
 *         if(allx):
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4736; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4736; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_routs);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_routs);
      __Pyx_GIVEREF(__pyx_v_routs);
      __Pyx_INCREF(__pyx_v_routp);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_routp);
      __Pyx_GIVEREF(__pyx_v_routp);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L0;
      break;
      default: break;
    }
    goto __pyx_L74;
  }
  /*else*/ {

    /* "Pythonreflectivity.pyx":4738
 *             return [routs, routp]
 *     else:
 *         if(allx):             # <<<<<<<<<<<<<<
 *             if(Setting2):
 *                 return [routs, routp, rempty, rempty]
 */
    __pyx_t_5 = (__pyx_v_allx != 0);
    if (__pyx_t_5) {

      /* "Pythonreflectivity.pyx":4739
 *     else:
 *         if(allx):
 *             if(Setting2):             # <<<<<<<<<<<<<<
 *                 return [routs, routp, rempty, rempty]
 *             else:
 */
      __pyx_t_5 = (__pyx_v_Setting2 != 0);
      if (__pyx_t_5) {

        /* "Pythonreflectivity.pyx":4740
 *         if(allx):
 *             if(Setting2):
 *                 return [routs, routp, rempty, rempty]             # <<<<<<<<<<<<<<
 *             else:
 *                 return [routs, rempty, rempty, routp]
 */
        __Pyx_XDECREF(__pyx_r);
        if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4740; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4740; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4740; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4740; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_INCREF(__pyx_v_routs);
        PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_routs);
        __Pyx_GIVEREF(__pyx_v_routs);
        __Pyx_INCREF(__pyx_v_routp);
        PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_routp);
        __Pyx_GIVEREF(__pyx_v_routp);
        __Pyx_INCREF(__pyx_v_rempty);
        PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        __Pyx_INCREF(__pyx_v_rempty);
        PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      /*else*/ {

        /* "Pythonreflectivity.pyx":4742
 *                 return [routs, routp, rempty, rempty]
 *             else:
 *                 return [routs, rempty, rempty, routp]             # <<<<<<<<<<<<<<
 *         else:
 *             return [routs, routp, routl, routr]
 */
        __Pyx_XDECREF(__pyx_r);
        if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4742; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4742; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        if (unlikely(!__pyx_v_rempty)) { __Pyx_RaiseUnboundLocalError("rempty"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4742; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4742; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
        __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_INCREF(__pyx_v_routs);
        PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_routs);
        __Pyx_GIVEREF(__pyx_v_routs);
        __Pyx_INCREF(__pyx_v_rempty);
        PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        __Pyx_INCREF(__pyx_v_rempty);
        PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_rempty);
        __Pyx_GIVEREF(__pyx_v_rempty);
        __Pyx_INCREF(__pyx_v_routp);
        PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_routp);
        __Pyx_GIVEREF(__pyx_v_routp);
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        goto __pyx_L0;
      }
    }
    /*else*/ {

      /* "Pythonreflectivity.pyx":4744
 *                 return [routs, rempty, rempty, routp]
 *         else:
 *             return [routs, routp, routl, routr]             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __Pyx_XDECREF(__pyx_r);
      if (unlikely(!__pyx_v_routs)) { __Pyx_RaiseUnboundLocalError("routs"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4744; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      if (unlikely(!__pyx_v_routp)) { __Pyx_RaiseUnboundLocalError("routp"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4744; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      if (unlikely(!__pyx_v_routl)) { __Pyx_RaiseUnboundLocalError("routl"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4744; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      if (unlikely(!__pyx_v_routr)) { __Pyx_RaiseUnboundLocalError("routr"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4744; __pyx_clineno = __LINE__; goto __pyx_L1_error;} }
      __pyx_t_1 = PyList_New(4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_routs);
      PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_routs);
      __Pyx_GIVEREF(__pyx_v_routs);
      __Pyx_INCREF(__pyx_v_routp);
      PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_routp);
      __Pyx_GIVEREF(__pyx_v_routp);
      __Pyx_INCREF(__pyx_v_routl);
      PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_routl);
      __Pyx_GIVEREF(__pyx_v_routl);
      __Pyx_INCREF(__pyx_v_routr);
      PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_routr);
      __Pyx_GIVEREF(__pyx_v_routr);
      __pyx_r = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L0;
    }
  }
  __pyx_L74:;

  /* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("Pythonreflectivity.Reflectivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_routs);
  __Pyx_XDECREF(__pyx_v_routp);
  __Pyx_XDECREF(__pyx_v_rempty);
  __Pyx_XDECREF(__pyx_v_routl);
  __Pyx_XDECREF(__pyx_v_routr);
  __Pyx_XDECREF(__pyx_v_th);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":203
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = ((__pyx_v_info == NULL) != 0);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":206
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":207
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":209
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":211
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":212
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":214
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":216
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L6_bool_binop_done;
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":217
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":220
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_2 = (((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L9_bool_binop_done;
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":221
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
  __pyx_t_2 = ((!(PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS) != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L9_bool_binop_done:;
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":224
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":225
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":226
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  __pyx_t_1 = (__pyx_v_copy_shape != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":229
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":230
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":231
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_4 = __pyx_v_ndim;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":232
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":233
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }
    goto __pyx_L11;
  }
  /*else*/ {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":235
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":236
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L11:;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":237
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":238
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":239
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!(PyArray_ISWRITEABLE(__pyx_v_self) != 0));

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":242
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":243
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":247
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":249
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L15_bool_binop_done;
  }
  __pyx_t_2 = ((!(__pyx_v_copy_shape != 0)) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L15_bool_binop_done:;
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":251
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L14;
  }
  /*else*/ {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":254
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L14:;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":256
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = ((!(__pyx_v_hasfields != 0)) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":257
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_4 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_4;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":258
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '>') != 0);
    if (!__pyx_t_2) {
      goto __pyx_L20_next_or;
    } else {
    }
    __pyx_t_2 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_L20_next_or:;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":259
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
    __pyx_t_2 = ((__pyx_v_descr->byteorder == '<') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L19_bool_binop_done;
    }
    __pyx_t_2 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L19_bool_binop_done:;
    if (__pyx_t_1) {

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":260
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":277
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    switch (__pyx_v_t) {

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":261
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
      case NPY_BYTE:
      __pyx_v_f = __pyx_k_b;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":262
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
      case NPY_UBYTE:
      __pyx_v_f = __pyx_k_B;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":263
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
      case NPY_SHORT:
      __pyx_v_f = __pyx_k_h;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":264
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
      case NPY_USHORT:
      __pyx_v_f = __pyx_k_H;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":265
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
      case NPY_INT:
      __pyx_v_f = __pyx_k_i;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":266
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
      case NPY_UINT:
      __pyx_v_f = __pyx_k_I;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":267
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
      case NPY_LONG:
      __pyx_v_f = __pyx_k_l;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":268
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
      case NPY_ULONG:
      __pyx_v_f = __pyx_k_L;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":269
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
      case NPY_LONGLONG:
      __pyx_v_f = __pyx_k_q;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":270
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
      case NPY_ULONGLONG:
      __pyx_v_f = __pyx_k_Q;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":271
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
      case NPY_FLOAT:
      __pyx_v_f = __pyx_k_f;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":272
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
      case NPY_DOUBLE:
      __pyx_v_f = __pyx_k_d;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":273
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
      case NPY_LONGDOUBLE:
      __pyx_v_f = __pyx_k_g;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":274
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
      case NPY_CFLOAT:
      __pyx_v_f = __pyx_k_Zf;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":275
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
      case NPY_CDOUBLE:
      __pyx_v_f = __pyx_k_Zd;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":276
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
      case NPY_CLONGDOUBLE:
      __pyx_v_f = __pyx_k_Zg;
      break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":277
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      case NPY_OBJECT:
      __pyx_v_f = __pyx_k_O;
      break;
      default:

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":279
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_t_3); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 279; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      break;
    }

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":280
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":281
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":283
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":284
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":285
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":286
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,             # <<<<<<<<<<<<<<
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 */
    __pyx_t_7 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_7 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_7;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":289
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":197
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":291
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":292
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = (PyArray_HASFIELDS(__pyx_v_self) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":293
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":294
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = (((sizeof(npy_intp)) != (sizeof(Py_ssize_t))) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":295
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":291
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":771
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":772
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":771
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":774
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":775
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":774
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":777
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":777
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":780
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":780
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":783
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":784
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":783
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":786
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":793
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":794
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":797
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(__pyx_v_descr->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = __pyx_v_descr->names; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #endif
    __Pyx_XDECREF_SET(__pyx_v_childname, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":798
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    if (unlikely(__pyx_v_descr->fields == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_3 = __Pyx_PyDict_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (unlikely(__pyx_t_3 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_fields, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":799
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 */
    if (likely(__pyx_v_fields != Py_None)) {
      PyObject* sequence = __pyx_v_fields;
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      #endif
    } else {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF_SET(__pyx_v_child, ((PyArray_Descr *)__pyx_t_3));
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_new_offset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":801
 *         child, new_offset = fields
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_4); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = ((((__pyx_v_end - __pyx_v_f) - ((int)__pyx_t_5)) < 15) != 0);
    if (__pyx_t_6) {

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":802
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":804
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '>') != 0);
    if (!__pyx_t_7) {
      goto __pyx_L8_next_or;
    } else {
    }
    __pyx_t_7 = (__pyx_v_little_endian != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_L8_next_or:;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":805
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
    __pyx_t_7 = ((__pyx_v_child->byteorder == '<') != 0);
    if (__pyx_t_7) {
    } else {
      __pyx_t_6 = __pyx_t_7;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_7 = ((!(__pyx_v_little_endian != 0)) != 0);
    __pyx_t_6 = __pyx_t_7;
    __pyx_L7_bool_binop_done:;
    if (__pyx_t_6) {

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":806
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":816
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_3 = __Pyx_PyInt_From_int((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (!__pyx_t_6) break;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":817
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":818
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":819
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_8 = 0;
      (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + 1);
    }

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":821
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_8 = 0;
    (__pyx_v_offset[__pyx_t_8]) = ((__pyx_v_offset[__pyx_t_8]) + __pyx_v_child->elsize);

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":823
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = ((!(PyDataType_HASFIELDS(__pyx_v_child) != 0)) != 0);
    if (__pyx_t_6) {

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":824
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_child->type_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
      __pyx_t_4 = 0;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":825
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = (((__pyx_v_end - __pyx_v_f) < 5) != 0);
      if (__pyx_t_6) {

        /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":826
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_RuntimeError, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_Raise(__pyx_t_4, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":829
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":830
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":831
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":832
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":833
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":834
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":835
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":836
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":837
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":838
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":839
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":840
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":841
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_4 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":842
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":843
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_4 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":844
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L15;
      }

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":845
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_4 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 845; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L15;
      }
      /*else*/ {

        /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":847
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_3);
        __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L15:;

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":848
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L13;
    }
    /*else*/ {

      /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":852
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_9;
    }
    __pyx_L13:;

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":797
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":853
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":786
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":969
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":971
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":972
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":974
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":975
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":976
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":977
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":969
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":980
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arr->base == NULL) != 0);
  if (__pyx_t_1) {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":981
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
  }
  /*else*/ {

    /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":983
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_18Pythonreflectivity_Lowestlayer __pyx_vtable_18Pythonreflectivity_Lowestlayer;

static PyObject *__pyx_tp_new_18Pythonreflectivity_Lowestlayer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_18Pythonreflectivity_Lowestlayer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_18Pythonreflectivity_Lowestlayer *)o);
  p->__pyx_vtab = __pyx_vtabptr_18Pythonreflectivity_Lowestlayer;
  if (unlikely(__pyx_pw_18Pythonreflectivity_11Lowestlayer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_18Pythonreflectivity_Lowestlayer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_18Pythonreflectivity_11Lowestlayer_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_18Pythonreflectivity_Lowestlayer[] = {
  {"isthisthelowestlayer", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_5isthisthelowestlayer, METH_NOARGS, 0},
  {"layercontentpointer", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_7layercontentpointer, METH_NOARGS, 0},
  {"motherpointer", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_9motherpointer, METH_NOARGS, 0},
  {"d", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_11d, METH_NOARGS, 0},
  {"setd", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_13setd, METH_O, 0},
  {"sigma", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_15sigma, METH_NOARGS, 0},
  {"setsigma", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_17setsigma, METH_O, 0},
  {"seteps", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_19seteps, METH_O, 0},
  {"eps", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_21eps, METH_VARARGS|METH_KEYWORDS, 0},
  {"epsxx", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_23epsxx, METH_NOARGS, 0},
  {"epsyy", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_25epsyy, METH_NOARGS, 0},
  {"epszz", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_27epszz, METH_NOARGS, 0},
  {"eg", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_29eg, METH_NOARGS, 0},
  {"setmag", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_31setmag, METH_O, 0},
  {"mag", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_33mag, METH_NOARGS, 0},
  {"setepsxx", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_35setepsxx, METH_O, 0},
  {"setepsyy", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_37setepsyy, METH_O, 0},
  {"setepszz", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_39setepszz, METH_O, 0},
  {"setepsg", (PyCFunction)__pyx_pw_18Pythonreflectivity_11Lowestlayer_41setepsg, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_18Pythonreflectivity_Lowestlayer = {
  PyVarObject_HEAD_INIT(0, 0)
  "Pythonreflectivity.Lowestlayer", /*tp_name*/
  sizeof(struct __pyx_obj_18Pythonreflectivity_Lowestlayer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_18Pythonreflectivity_Lowestlayer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_18Pythonreflectivity_Lowestlayer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_18Pythonreflectivity_Lowestlayer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};
static struct __pyx_vtabstruct_18Pythonreflectivity_Layer __pyx_vtable_18Pythonreflectivity_Layer;

static PyObject *__pyx_tp_new_18Pythonreflectivity_Layer(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_18Pythonreflectivity_Layer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_18Pythonreflectivity_Layer *)o);
  p->__pyx_vtab = __pyx_vtabptr_18Pythonreflectivity_Layer;
  if (unlikely(__pyx_pw_18Pythonreflectivity_5Layer_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_18Pythonreflectivity_Layer(PyObject *o) {
  #if PY_VERSION_HEX >= 0x030400a1
  if (unlikely(Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_18Pythonreflectivity_Layer[] = {
  {"isthisthelowestlayer", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_3isthisthelowestlayer, METH_NOARGS, 0},
  {"layercontentpointer", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_5layercontentpointer, METH_NOARGS, 0},
  {"d", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_7d, METH_NOARGS, 0},
  {"setd", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_9setd, METH_O, 0},
  {"sigma", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_11sigma, METH_NOARGS, 0},
  {"setsigma", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_13setsigma, METH_O, 0},
  {"seteps", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_15seteps, METH_O, 0},
  {"eps", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_17eps, METH_NOARGS, 0},
  {"epsxx", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_19epsxx, METH_NOARGS, 0},
  {"epsyy", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_21epsyy, METH_NOARGS, 0},
  {"epszz", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_23epszz, METH_NOARGS, 0},
  {"epsg", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_25epsg, METH_NOARGS, 0},
  {"setmag", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_27setmag, METH_O, 0},
  {"mag", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_29mag, METH_NOARGS, 0},
  {"setepsxx", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_31setepsxx, METH_O, 0},
  {"setepsyy", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_33setepsyy, METH_O, 0},
  {"setepszz", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_35setepszz, METH_O, 0},
  {"setepsg", (PyCFunction)__pyx_pw_18Pythonreflectivity_5Layer_37setepsg, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_18Pythonreflectivity_Layer = {
  PyVarObject_HEAD_INIT(0, 0)
  "Pythonreflectivity.Layer", /*tp_name*/
  sizeof(struct __pyx_obj_18Pythonreflectivity_Layer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_18Pythonreflectivity_Layer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_18Pythonreflectivity_Layer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_18Pythonreflectivity_Layer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    "Pythonreflectivity",
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 0},
  {&__pyx_kp_s_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 0, 1, 0},
  {&__pyx_n_s_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 0, 1, 1},
  {&__pyx_kp_s_Allowed_input_for_setmag_is_x_y, __pyx_k_Allowed_input_for_setmag_is_x_y, sizeof(__pyx_k_Allowed_input_for_setmag_is_x_y), 0, 0, 1, 0},
  {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},
  {&__pyx_kp_s_Brackets_inside_Brackets_are_not, __pyx_k_Brackets_inside_Brackets_are_not, sizeof(__pyx_k_Brackets_inside_Brackets_are_not), 0, 0, 1, 0},
  {&__pyx_n_s_Cutoffquad, __pyx_k_Cutoffquad, sizeof(__pyx_k_Cutoffquad), 0, 0, 1, 1},
  {&__pyx_kp_s_D_Cygwin_home_mz5_Pythonreflecti, __pyx_k_D_Cygwin_home_mz5_Pythonreflecti, sizeof(__pyx_k_D_Cygwin_home_mz5_Pythonreflecti), 0, 0, 1, 0},
  {&__pyx_kp_s_Epsilon_must_be_a_number_or_an_a, __pyx_k_Epsilon_must_be_a_number_or_an_a, sizeof(__pyx_k_Epsilon_must_be_a_number_or_an_a), 0, 0, 1, 0},
  {&__pyx_n_s_Exception, __pyx_k_Exception, sizeof(__pyx_k_Exception), 0, 0, 1, 1},
  {&__pyx_kp_s_Exception_Magnetic_heterostructu, __pyx_k_Exception_Magnetic_heterostructu, sizeof(__pyx_k_Exception_Magnetic_heterostructu), 0, 0, 1, 0},
  {&__pyx_kp_s_Exception_Multiple_magnetization, __pyx_k_Exception_Multiple_magnetization, sizeof(__pyx_k_Exception_Multiple_magnetization), 0, 0, 1, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor, __pyx_k_Format_string_allocated_too_shor, sizeof(__pyx_k_Format_string_allocated_too_shor), 0, 1, 0, 0},
  {&__pyx_kp_u_Format_string_allocated_too_shor_2, __pyx_k_Format_string_allocated_too_shor_2, sizeof(__pyx_k_Format_string_allocated_too_shor_2), 0, 1, 0, 0},
  {&__pyx_n_s_Generate_structure, __pyx_k_Generate_structure, sizeof(__pyx_k_Generate_structure), 0, 0, 1, 1},
  {&__pyx_n_s_HS, __pyx_k_HS, sizeof(__pyx_k_HS), 0, 0, 1, 1},
  {&__pyx_kp_s_Layer, __pyx_k_Layer, sizeof(__pyx_k_Layer), 0, 0, 1, 0},
  {&__pyx_n_s_MLstructure, __pyx_k_MLstructure, sizeof(__pyx_k_MLstructure), 0, 0, 1, 1},
  {&__pyx_n_s_MagneticCutoff, __pyx_k_MagneticCutoff, sizeof(__pyx_k_MagneticCutoff), 0, 0, 1, 1},
  {&__pyx_kp_s_Magnetized_along_the_x_direction, __pyx_k_Magnetized_along_the_x_direction, sizeof(__pyx_k_Magnetized_along_the_x_direction), 0, 0, 1, 0},
  {&__pyx_kp_s_Magnetized_along_the_y_direction, __pyx_k_Magnetized_along_the_y_direction, sizeof(__pyx_k_Magnetized_along_the_y_direction), 0, 0, 1, 0},
  {&__pyx_kp_s_Magnetized_along_the_z_direction, __pyx_k_Magnetized_along_the_z_direction, sizeof(__pyx_k_Magnetized_along_the_z_direction), 0, 0, 1, 0},
  {&__pyx_n_s_MultipleScattering, __pyx_k_MultipleScattering, sizeof(__pyx_k_MultipleScattering), 0, 0, 1, 1},
  {&__pyx_n_s_NAngles, __pyx_k_NAngles, sizeof(__pyx_k_NAngles), 0, 0, 1, 1},
  {&__pyx_n_s_NL_types, __pyx_k_NL_types, sizeof(__pyx_k_NL_types), 0, 0, 1, 1},
  {&__pyx_n_s_NLayers, __pyx_k_NLayers, sizeof(__pyx_k_NLayers), 0, 0, 1, 1},
  {&__pyx_n_s_NLayers_types, __pyx_k_NLayers_types, sizeof(__pyx_k_NLayers_types), 0, 0, 1, 1},
  {&__pyx_kp_s_No_magnetization_has_been_set, __pyx_k_No_magnetization_has_been_set, sizeof(__pyx_k_No_magnetization_has_been_set), 0, 0, 1, 0},
  {&__pyx_kp_u_Non_native_byte_order_not_suppor, __pyx_k_Non_native_byte_order_not_suppor, sizeof(__pyx_k_Non_native_byte_order_not_suppor), 0, 1, 0, 0},
  {&__pyx_n_s_Output, __pyx_k_Output, sizeof(__pyx_k_Output), 0, 0, 1, 1},
  {&__pyx_n_s_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 1, 1},
  {&__pyx_kp_s_Please_generate_at_least_one_lay, __pyx_k_Please_generate_at_least_one_lay, sizeof(__pyx_k_Please_generate_at_least_one_lay), 0, 0, 1, 0},
  {&__pyx_kp_s_Please_use_setmag_to_set_a_magne, __pyx_k_Please_use_setmag_to_set_a_magne, sizeof(__pyx_k_Please_use_setmag_to_set_a_magne), 0, 0, 1, 0},
  {&__pyx_n_s_Pythonreflectivity, __pyx_k_Pythonreflectivity, sizeof(__pyx_k_Pythonreflectivity), 0, 0, 1, 1},
  {&__pyx_n_s_Reflectivity, __pyx_k_Reflectivity, sizeof(__pyx_k_Reflectivity), 0, 0, 1, 1},
  {&__pyx_n_s_RuntimeError, __pyx_k_RuntimeError, sizeof(__pyx_k_RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},
  {&__pyx_n_s_Setting1, __pyx_k_Setting1, sizeof(__pyx_k_Setting1), 0, 0, 1, 1},
  {&__pyx_n_s_Setting2, __pyx_k_Setting2, sizeof(__pyx_k_Setting2), 0, 0, 1, 1},
  {&__pyx_n_s_Setting3, __pyx_k_Setting3, sizeof(__pyx_k_Setting3), 0, 0, 1, 1},
  {&__pyx_kp_s_Something_is_wrong_with_the_Mult, __pyx_k_Something_is_wrong_with_the_Mult, sizeof(__pyx_k_Something_is_wrong_with_the_Mult), 0, 0, 1, 0},
  {&__pyx_kp_s_Substrate_as_Multilayer_is_ill_d, __pyx_k_Substrate_as_Multilayer_is_ill_d, sizeof(__pyx_k_Substrate_as_Multilayer_is_ill_d), 0, 0, 1, 0},
  {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
  {&__pyx_kp_s_Theta_must_be_in_the_range_0_the, __pyx_k_Theta_must_be_in_the_range_0_the, sizeof(__pyx_k_Theta_must_be_in_the_range_0_the), 0, 0, 1, 0},
  {&__pyx_kp_s_Theta_must_be_in_the_range_0_the_2, __pyx_k_Theta_must_be_in_the_range_0_the_2, sizeof(__pyx_k_Theta_must_be_in_the_range_0_the_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Theta_must_be_in_the_range_0_the_3, __pyx_k_Theta_must_be_in_the_range_0_the_3, sizeof(__pyx_k_Theta_must_be_in_the_range_0_the_3), 0, 0, 1, 0},
  {&__pyx_kp_s_This_layer_is_not_magnetic, __pyx_k_This_layer_is_not_magnetic, sizeof(__pyx_k_This_layer_is_not_magnetic), 0, 0, 1, 0},
  {&__pyx_kp_s_Underlying_structure_not_initial, __pyx_k_Underlying_structure_not_initial, sizeof(__pyx_k_Underlying_structure_not_initial), 0, 0, 1, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_s__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 0, 1, 0},
  {&__pyx_kp_s__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 0, 1, 0},
  {&__pyx_kp_s__7, __pyx_k__7, sizeof(__pyx_k__7), 0, 0, 1, 0},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_allx, __pyx_k_allx, sizeof(__pyx_k_allx), 0, 0, 1, 1},
  {&__pyx_n_s_ally, __pyx_k_ally, sizeof(__pyx_k_ally), 0, 0, 1, 1},
  {&__pyx_n_s_allz, __pyx_k_allz, sizeof(__pyx_k_allz), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_ctypes, __pyx_k_ctypes, sizeof(__pyx_k_ctypes), 0, 0, 1, 1},
  {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
  {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_eg, __pyx_k_eg, sizeof(__pyx_k_eg), 0, 0, 1, 1},
  {&__pyx_n_s_epsg, __pyx_k_epsg, sizeof(__pyx_k_epsg), 0, 0, 1, 1},
  {&__pyx_n_s_epsxx, __pyx_k_epsxx, sizeof(__pyx_k_epsxx), 0, 0, 1, 1},
  {&__pyx_n_s_epsyy, __pyx_k_epsyy, sizeof(__pyx_k_epsyy), 0, 0, 1, 1},
  {&__pyx_n_s_epszz, __pyx_k_epszz, sizeof(__pyx_k_epszz), 0, 0, 1, 1},
  {&__pyx_n_s_find, __pyx_k_find, sizeof(__pyx_k_find), 0, 0, 1, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_kp_s_in_Multilayer_structure_string, __pyx_k_in_Multilayer_structure_string, sizeof(__pyx_k_in_Multilayer_structure_string), 0, 0, 1, 0},
  {&__pyx_n_s_isthisthelowestlayer, __pyx_k_isthisthelowestlayer, sizeof(__pyx_k_isthisthelowestlayer), 0, 0, 1, 1},
  {&__pyx_n_s_layercontentpointer, __pyx_k_layercontentpointer, sizeof(__pyx_k_layercontentpointer), 0, 0, 1, 1},
  {&__pyx_n_s_len, __pyx_k_len, sizeof(__pyx_k_len), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_motherpointer, __pyx_k_motherpointer, sizeof(__pyx_k_motherpointer), 0, 0, 1, 1},
  {&__pyx_kp_u_ndarray_is_not_C_contiguous, __pyx_k_ndarray_is_not_C_contiguous, sizeof(__pyx_k_ndarray_is_not_C_contiguous), 0, 1, 0, 0},
  {&__pyx_kp_u_ndarray_is_not_Fortran_contiguou, __pyx_k_ndarray_is_not_Fortran_contiguou, sizeof(__pyx_k_ndarray_is_not_Fortran_contiguou), 0, 1, 0, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rempty, __pyx_k_rempty, sizeof(__pyx_k_rempty), 0, 0, 1, 1},
  {&__pyx_n_s_rmat, __pyx_k_rmat, sizeof(__pyx_k_rmat), 0, 0, 1, 1},
  {&__pyx_n_s_routl, __pyx_k_routl, sizeof(__pyx_k_routl), 0, 0, 1, 1},
  {&__pyx_n_s_routp, __pyx_k_routp, sizeof(__pyx_k_routp), 0, 0, 1, 1},
  {&__pyx_n_s_routr, __pyx_k_routr, sizeof(__pyx_k_routr), 0, 0, 1, 1},
  {&__pyx_n_s_routs, __pyx_k_routs, sizeof(__pyx_k_routs), 0, 0, 1, 1},
  {&__pyx_n_s_rpp, __pyx_k_rpp, sizeof(__pyx_k_rpp), 0, 0, 1, 1},
  {&__pyx_n_s_rss, __pyx_k_rss, sizeof(__pyx_k_rss), 0, 0, 1, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_n_s_setd, __pyx_k_setd, sizeof(__pyx_k_setd), 0, 0, 1, 1},
  {&__pyx_n_s_setsigma, __pyx_k_setsigma, sizeof(__pyx_k_setsigma), 0, 0, 1, 1},
  {&__pyx_n_s_sigma, __pyx_k_sigma, sizeof(__pyx_k_sigma), 0, 0, 1, 1},
  {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
  {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_th, __pyx_k_th, sizeof(__pyx_k_th), 0, 0, 1, 1},
  {&__pyx_kp_u_unknown_dtype_code_in_numpy_pxd, __pyx_k_unknown_dtype_code_in_numpy_pxd, sizeof(__pyx_k_unknown_dtype_code_in_numpy_pxd), 0, 1, 0, 0},
  {&__pyx_n_s_wavelength, __pyx_k_wavelength, sizeof(__pyx_k_wavelength), 0, 0, 1, 1},
  {&__pyx_n_s_wl, __pyx_k_wl, sizeof(__pyx_k_wl), 0, 0, 1, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 64; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_Exception = __Pyx_GetBuiltinName(__pyx_n_s_Exception); if (!__pyx_builtin_Exception) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetBuiltinName(__pyx_n_s_RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "Pythonreflectivity.pyx":72
 *             SaveNumbers=[]
 * 
 *             a=MLstructure.split(",")             # <<<<<<<<<<<<<<
 * 
 *             N=len(a)
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_); if (unlikely(!__pyx_tuple__2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "Pythonreflectivity.pyx":79
 *             k=0
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split('*(')
 *                     MLREP[j]=int(b[0])
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_s__3); if (unlikely(!__pyx_tuple__4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 79; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "Pythonreflectivity.pyx":80
 *             for i in range(N):
 *                 if (a[i].find('(')!=-1):
 *                     b=a[i].split('*(')             # <<<<<<<<<<<<<<
 *                     MLREP[j]=int(b[0])
 *                     SaveNumbers=SaveNumbers+[int(b[1])]
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s__5); if (unlikely(!__pyx_tuple__6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 80; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "Pythonreflectivity.pyx":85
 *                     IsInBracket=True
 *                     k=1
 *                 elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *                     b=a[i].split(')')
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s__7); if (unlikely(!__pyx_tuple__8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 85; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "Pythonreflectivity.pyx":86
 *                     k=1
 *                 elif (a[i].find(')')!=-1):
 *                     b=a[i].split(')')             # <<<<<<<<<<<<<<
 *                     SaveNumbers=SaveNumbers+[int(b[0])]
 *                     IsInBracket=False
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s__7); if (unlikely(!__pyx_tuple__9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 86; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "Pythonreflectivity.pyx":168
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *                     self.Layercontent.eg=epsilon[3]
 * 
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_Please_use_setmag_to_set_a_magne); if (unlikely(!__pyx_tuple__10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "Pythonreflectivity.pyx":174
 * 
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_Epsilon_must_be_a_number_or_an_a); if (unlikely(!__pyx_tuple__11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "Pythonreflectivity.pyx":209
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_s_Allowed_input_for_setmag_is_x_y); if (unlikely(!__pyx_tuple__12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 209; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "Pythonreflectivity.pyx":237
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=x
 * #    def __getstate__(self):
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_Please_use_setmag_to_set_a_magne); if (unlikely(!__pyx_tuple__13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "Pythonreflectivity.pyx":313
 *                         self.Layercontent.type=2
 *                     elif(self.Layercontent.magdir==0):
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_Please_use_setmag_to_set_a_magne); if (unlikely(!__pyx_tuple__14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "Pythonreflectivity.pyx":315
 *                         raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")
 *             else:
 *                 raise Exception('Epsilon must be a number or an array of length 1, 3 or 4')             # <<<<<<<<<<<<<<
 *         else:
 *             self.Layercontent.type=1
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_Epsilon_must_be_a_number_or_an_a); if (unlikely(!__pyx_tuple__15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "Pythonreflectivity.pyx":347
 *             self.Layercontent.magdir=0
 *         else:
 *             raise Exception("Allowed input for setmag is 'x', 'y', 'z' or '0'")             # <<<<<<<<<<<<<<
 *     def mag(self):
 *         if(self.Layercontent.type==3):
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_Allowed_input_for_setmag_is_x_y); if (unlikely(!__pyx_tuple__16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "Pythonreflectivity.pyx":375
 *             self.Layercontent.type=2
 *         elif(self.Layercontent.magdir==0):
 *             raise Exception("Please use setmag to set a magnetization direction for this layer before you set a gyrotropy")             # <<<<<<<<<<<<<<
 *         self.Layercontent.eg=x
 * 
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_Please_use_setmag_to_set_a_magne); if (unlikely(!__pyx_tuple__17)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "Pythonreflectivity.pyx":461
 * cdef double complex LinDicParatt_Sigma(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the); if (unlikely(!__pyx_tuple__18)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "Pythonreflectivity.pyx":615
 * cdef double complex LinDicParatt_Pi(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the); if (unlikely(!__pyx_tuple__19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "Pythonreflectivity.pyx":762
 * cdef double complex LinDicParatt_Sigma_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_2); if (unlikely(!__pyx_tuple__20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "Pythonreflectivity.pyx":926
 * cdef double complex LinDicParatt_Pi_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<=theta<=90")             # <<<<<<<<<<<<<<
 *     if(th==0):
 *         return 1.0
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_2); if (unlikely(!__pyx_tuple__21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 926; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "Pythonreflectivity.pyx":1134
 * cdef double complex LinDicParatt_Pi_xmag(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>90)):
 *         raise Exception("Theta must be in the range 0<theta<=90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the); if (unlikely(!__pyx_tuple__22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1134; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "Pythonreflectivity.pyx":1327
 * cdef double complex LinDicParatt_Pi_xmag_MS(Heterostructure* HS, double th, double wavelength) except *:
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_3); if (unlikely(!__pyx_tuple__23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "Pythonreflectivity.pyx":1862
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_3); if (unlikely(!__pyx_tuple__24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "Pythonreflectivity.pyx":2586
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_3); if (unlikely(!__pyx_tuple__25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2586; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "Pythonreflectivity.pyx":3316
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_3); if (unlikely(!__pyx_tuple__26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "Pythonreflectivity.pyx":3746
 * 
 *     if((th<=0)|(th>=90)):
 *         raise Exception("Theta must be in the range 0<theta<90")             # <<<<<<<<<<<<<<
 * 
 *     cdef double k0=two_times_pi/wavelength
 */
  __pyx_tuple__27 = PyTuple_Pack(1, __pyx_kp_s_Theta_must_be_in_the_range_0_the_3); if (unlikely(!__pyx_tuple__27)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3746; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "Pythonreflectivity.pyx":4313
 *         return MaxLayer
 * 
 *     a=string.split(",")             # <<<<<<<<<<<<<<
 * 
 *     N=len(a)
 */
  __pyx_tuple__28 = PyTuple_Pack(1, __pyx_kp_s_); if (unlikely(!__pyx_tuple__28)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "Pythonreflectivity.pyx":4319
 *     IsInBracket=False
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             j=j+1
 *             IsInBracket=True
 */
  __pyx_tuple__29 = PyTuple_Pack(1, __pyx_kp_s__3); if (unlikely(!__pyx_tuple__29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "Pythonreflectivity.pyx":4323
 *             IsInBracket=True
 *     #        print a[i], "w", j
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             IsInBracket=False
 *    #         print a[i], "x", j
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_s__7); if (unlikely(!__pyx_tuple__30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "Pythonreflectivity.pyx":4340
 *         if(IsInBracket):
 *             if(string[i]=='('):
 *                 raise Exception("Brackets inside Brackets are not supported.")             # <<<<<<<<<<<<<<
 *             if(string[i]==')'):
 *                 IsInBracket=False
 */
  __pyx_tuple__31 = PyTuple_Pack(1, __pyx_kp_s_Brackets_inside_Brackets_are_not); if (unlikely(!__pyx_tuple__31)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "Pythonreflectivity.pyx":4345
 *         else:
 *             if(string[i]==')'):
 *                 raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 *             if(string[i]=='('):
 *                 IsInBracket=True
 */
  __pyx_tuple__32 = PyTuple_Pack(1, __pyx_kp_s_Something_is_wrong_with_the_Mult); if (unlikely(!__pyx_tuple__32)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4345; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "Pythonreflectivity.pyx":4349
 *                 IsInBracket=True
 *     if(IsInBracket):
 *         raise Exception("Something is wrong with the Multilayer brackets")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__33 = PyTuple_Pack(1, __pyx_kp_s_Something_is_wrong_with_the_Mult); if (unlikely(!__pyx_tuple__33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__33);
  __Pyx_GIVEREF(__pyx_tuple__33);

  /* "Pythonreflectivity.pyx":4358
 * 
 *     if((STR[0]).MLLENGTH[0]!=1):
 *         raise Exception("Substrate as Multilayer is ill-defined")             # <<<<<<<<<<<<<<
 * 
 *     return 0
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_s_Substrate_as_Multilayer_is_ill_d); if (unlikely(!__pyx_tuple__34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "Pythonreflectivity.pyx":4383
 * 
 *   #  print "not default"
 *     a=string.split(",")             # <<<<<<<<<<<<<<
 * 
 *     N=len(a)
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_s_); if (unlikely(!__pyx_tuple__35)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "Pythonreflectivity.pyx":4393
 * 
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split('*(')
 *             (STR[0]).MLREP[j]=int(b[0])
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s__3); if (unlikely(!__pyx_tuple__36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "Pythonreflectivity.pyx":4394
 *     for i in range(N):
 *         if (a[i].find('(')!=-1):
 *             b=a[i].split('*(')             # <<<<<<<<<<<<<<
 *             (STR[0]).MLREP[j]=int(b[0])
 *          #   print "j", j
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_s__5); if (unlikely(!__pyx_tuple__37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "Pythonreflectivity.pyx":4400
 *             IsInBracket=True
 *             k=1
 *         elif (a[i].find(')')!=-1):             # <<<<<<<<<<<<<<
 *             b=a[i].split(')')
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_s__7); if (unlikely(!__pyx_tuple__38)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4400; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "Pythonreflectivity.pyx":4401
 *             k=1
 *         elif (a[i].find(')')!=-1):
 *             b=a[i].split(')')             # <<<<<<<<<<<<<<
 *             SaveNumbers=SaveNumbers+[int(b[0])]
 *             IsInBracket=False
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s__7); if (unlikely(!__pyx_tuple__39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "Pythonreflectivity.pyx":4439
 * #    cdef Heterostructure STR
 *     if(NLayers_types<=0):
 *         raise Exception("Please generate at least one layer!")             # <<<<<<<<<<<<<<
 * 
 *     cdef int i
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_s_Please_generate_at_least_one_lay); if (unlikely(!__pyx_tuple__40)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "Pythonreflectivity.pyx":4445
 *     HS[0]=Lowestlayer(0,0,MLstructure, NLayers_types)
 *     for i in range(1,NLayers_types):
 *         HS[i]=Layer(0,0)             # <<<<<<<<<<<<<<
 * 
 *   #  HS[0].initstructure(MLstructure, NLayers_types)
 */
  __pyx_tuple__41 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_0); if (unlikely(!__pyx_tuple__41)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4445; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "Pythonreflectivity.pyx":4454
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 *         raise Exception("Underlying structure not initialized. Please generate the layer list with Generate_Structure!")             # <<<<<<<<<<<<<<
 * 
 *     if(hasattr(th, "__len__")==False):
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_kp_s_Underlying_structure_not_initial); if (unlikely(!__pyx_tuple__42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4454; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "Pythonreflectivity.pyx":4513
 *                 allz=1
 *             if(Setting1!=3):
 *                 raise Exception('Exception! Magnetic heterostructures must have "t" or "T" as an output parameter')             # <<<<<<<<<<<<<<
 *             if(cabsquadr(B[0].eg)<Cutoffquad):#Apply the magnetic cutoff
 * 
 */
  __pyx_tuple__43 = PyTuple_Pack(1, __pyx_kp_s_Exception_Magnetic_heterostructu); if (unlikely(!__pyx_tuple__43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "Pythonreflectivity.pyx":4526
 * 
 *     if((ally&allz)|(ally&allx)|(allx&allz)):
 *         raise Exception('Exception! Multiple magnetization directions are so far not supported!')             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_kp_s_Exception_Multiple_magnetization); if (unlikely(!__pyx_tuple__44)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4526; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":218
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_tuple__45 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_C_contiguous); if (unlikely(!__pyx_tuple__45)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 218; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":222
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_tuple__46 = PyTuple_Pack(1, __pyx_kp_u_ndarray_is_not_Fortran_contiguou); if (unlikely(!__pyx_tuple__46)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":260
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__47)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":802
 * 
 *         if (end - f) - <int>(new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor); if (unlikely(!__pyx_tuple__48)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":806
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_u_Non_native_byte_order_not_suppor); if (unlikely(!__pyx_tuple__49)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 806; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":826
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_u_Format_string_allocated_too_shor_2); if (unlikely(!__pyx_tuple__50)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__51 = PyTuple_Pack(4, __pyx_n_s_NLayers_types, __pyx_n_s_MLstructure, __pyx_n_s_i, __pyx_n_s_HS); if (unlikely(!__pyx_tuple__51)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_D_Cygwin_home_mz5_Pythonreflecti, __pyx_n_s_Generate_structure, 4432, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */
  __pyx_tuple__53 = PyTuple_Pack(28, __pyx_n_s_HS, __pyx_n_s_th, __pyx_n_s_wavelength, __pyx_n_s_MultipleScattering, __pyx_n_s_MagneticCutoff, __pyx_n_s_Output, __pyx_n_s_NAngles, __pyx_n_s_a, __pyx_n_s_A, __pyx_n_s_B, __pyx_n_s_NLayers, __pyx_n_s_NLayers_types, __pyx_n_s_i, __pyx_n_s_allx, __pyx_n_s_ally, __pyx_n_s_allz, __pyx_n_s_Cutoffquad, __pyx_n_s_Setting1, __pyx_n_s_Setting2, __pyx_n_s_Setting3, __pyx_n_s_rss, __pyx_n_s_rpp, __pyx_n_s_rmat, __pyx_n_s_routs, __pyx_n_s_routp, __pyx_n_s_rempty, __pyx_n_s_routl, __pyx_n_s_routr); if (unlikely(!__pyx_tuple__53)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(6, 0, 28, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_D_Cygwin_home_mz5_Pythonreflecti, __pyx_n_s_Reflectivity, 4451, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_float_0_5 = PyFloat_FromDouble(0.5); if (unlikely(!__pyx_float_0_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_float_1_0Eneg_6 = PyFloat_FromDouble(1.0E-6); if (unlikely(!__pyx_float_1_0Eneg_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initPythonreflectivity(void); /*proto*/
PyMODINIT_FUNC initPythonreflectivity(void)
#else
PyMODINIT_FUNC PyInit_Pythonreflectivity(void); /*proto*/
PyMODINIT_FUNC PyInit_Pythonreflectivity(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_Pythonreflectivity(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("Pythonreflectivity", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_Pythonreflectivity) {
    if (PyObject_SetAttrString(__pyx_m, "__name__", __pyx_n_s_main) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "Pythonreflectivity")) {
      if (unlikely(PyDict_SetItemString(modules, "Pythonreflectivity", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_18Pythonreflectivity_Lowestlayer = &__pyx_vtable_18Pythonreflectivity_Lowestlayer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.isthisthelowestlayer = (int (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_isthisthelowestlayer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.layercontentpointer = (long (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_layercontentpointer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.motherpointer = (long (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_motherpointer;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.d = (double (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_d;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.setd = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_setd;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.sigma = (double (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_sigma;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.setsigma = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_setsigma;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.epsxx = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_epsxx;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.epsyy = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_epsyy;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.epszz = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_epszz;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.eg = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_11Lowestlayer_eg;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.GetType = (int (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *))__pyx_f_18Pythonreflectivity_11Lowestlayer_GetType;
  __pyx_vtable_18Pythonreflectivity_Lowestlayer.dir = (int (*)(struct __pyx_obj_18Pythonreflectivity_Lowestlayer *))__pyx_f_18Pythonreflectivity_11Lowestlayer_dir;
  if (PyType_Ready(&__pyx_type_18Pythonreflectivity_Lowestlayer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_18Pythonreflectivity_Lowestlayer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_18Pythonreflectivity_Lowestlayer.tp_dict, __pyx_vtabptr_18Pythonreflectivity_Lowestlayer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Lowestlayer", (PyObject *)&__pyx_type_18Pythonreflectivity_Lowestlayer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_18Pythonreflectivity_Lowestlayer = &__pyx_type_18Pythonreflectivity_Lowestlayer;
  __pyx_vtabptr_18Pythonreflectivity_Layer = &__pyx_vtable_18Pythonreflectivity_Layer;
  __pyx_vtable_18Pythonreflectivity_Layer.isthisthelowestlayer = (int (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_isthisthelowestlayer;
  __pyx_vtable_18Pythonreflectivity_Layer.layercontentpointer = (long (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_layercontentpointer;
  __pyx_vtable_18Pythonreflectivity_Layer.d = (double (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_d;
  __pyx_vtable_18Pythonreflectivity_Layer.setd = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_setd;
  __pyx_vtable_18Pythonreflectivity_Layer.sigma = (double (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_sigma;
  __pyx_vtable_18Pythonreflectivity_Layer.setsigma = (PyObject *(*)(struct __pyx_obj_18Pythonreflectivity_Layer *, double, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_setsigma;
  __pyx_vtable_18Pythonreflectivity_Layer.epsxx = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epsxx;
  __pyx_vtable_18Pythonreflectivity_Layer.epsyy = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epsyy;
  __pyx_vtable_18Pythonreflectivity_Layer.epszz = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epszz;
  __pyx_vtable_18Pythonreflectivity_Layer.epsg = (__pyx_t_double_complex (*)(struct __pyx_obj_18Pythonreflectivity_Layer *, int __pyx_skip_dispatch))__pyx_f_18Pythonreflectivity_5Layer_epsg;
  __pyx_vtable_18Pythonreflectivity_Layer.GetType = (int (*)(struct __pyx_obj_18Pythonreflectivity_Layer *))__pyx_f_18Pythonreflectivity_5Layer_GetType;
  __pyx_vtable_18Pythonreflectivity_Layer.dir = (int (*)(struct __pyx_obj_18Pythonreflectivity_Layer *))__pyx_f_18Pythonreflectivity_5Layer_dir;
  if (PyType_Ready(&__pyx_type_18Pythonreflectivity_Layer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_type_18Pythonreflectivity_Layer.tp_print = 0;
  if (__Pyx_SetVtable(__pyx_type_18Pythonreflectivity_Layer.tp_dict, __pyx_vtabptr_18Pythonreflectivity_Layer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyObject_SetAttrString(__pyx_m, "Layer", (PyObject *)&__pyx_type_18Pythonreflectivity_Layer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_18Pythonreflectivity_Layer = &__pyx_type_18Pythonreflectivity_Layer;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 864; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "Pythonreflectivity.pyx":4
 * from libc.stdlib cimport malloc, free
 * cimport numpy as np
 * import numpy as np             # <<<<<<<<<<<<<<
 * np.import_array()
 * import ctypes
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":5
 * cimport numpy as np
 * import numpy as np
 * np.import_array()             # <<<<<<<<<<<<<<
 * import ctypes
 * from numpy cimport ndarray
 */
  import_array();

  /* "Pythonreflectivity.pyx":6
 * import numpy as np
 * np.import_array()
 * import ctypes             # <<<<<<<<<<<<<<
 * from numpy cimport ndarray
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_ctypes, 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ctypes, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 6; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":24
 * 
 * 
 * cdef double two_times_pi=6.283185307179586             # <<<<<<<<<<<<<<
 * cdef double deg_to_rad=0.017453292522222223
 * 
 */
  __pyx_v_18Pythonreflectivity_two_times_pi = 6.283185307179586;

  /* "Pythonreflectivity.pyx":25
 * 
 * cdef double two_times_pi=6.283185307179586
 * cdef double deg_to_rad=0.017453292522222223             # <<<<<<<<<<<<<<
 * 
 * cdef struct Heterostructure:
 */
  __pyx_v_18Pythonreflectivity_deg_to_rad = 0.017453292522222223;

  /* "Pythonreflectivity.pyx":4432
 * 
 * 
 * def Generate_structure(int NLayers_types, MLstructure="default"):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_18Pythonreflectivity_1Generate_structure, NULL, __pyx_n_s_Pythonreflectivity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Generate_structure, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":4451
 *     return HS
 * 
 * def Reflectivity(HS, th, wavelength, MultipleScattering=1, MagneticCutoff=1.0E-6, Output="T"):             # <<<<<<<<<<<<<<
 * 
 *     if( HS[0].isthisthelowestlayer()!=1   ):
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_18Pythonreflectivity_3Reflectivity, NULL, __pyx_n_s_Pythonreflectivity); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Reflectivity, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Pythonreflectivity.pyx":1
 * import cython             # <<<<<<<<<<<<<<
 * from libc.stdlib cimport malloc, free
 * cimport numpy as np
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "..\..\..\..\Python_Anaconda\lib\site-packages\Cython\Includes\numpy\__init__.pxd":979
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init Pythonreflectivity", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init Pythonreflectivity");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* --- Runtime support code --- */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyList_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (wraparound & unlikely(i < 0)) i += PyTuple_GET_SIZE(o);
    if ((!boundscheck) || likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely((n >= 0) & (n < PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return NULL;
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject* args = PyTuple_Pack(1, arg);
    return (likely(args)) ? __Pyx_PyObject_Call(func, args, NULL) : NULL;
}
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || PyObject_TypeCheck(func, __pyx_CyFunctionType))) {
#else
    if (likely(PyCFunction_Check(func))) {
#endif
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                if (PyObject_IsSubclass(instance_class, type)) {
                    type = instance_class;
                } else {
                    instance_class = NULL;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(tmp_type, tmp_value, tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (likely(result)) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static CYTHON_INLINE long __Pyx_mod_long(long a, long b) {
    long r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

static CYTHON_INLINE long __Pyx_div_long(long a, long b) {
    long q = a / b;
    long r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (PyErr_ExceptionMatches(PyExc_OverflowError))
                        PyErr_Clear();
                    else
                        return -1;
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o))) {
#else
    if (is_list || PySequence_Check(o)) {
#endif
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        __pyx_d,      /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)       \
    {                                                                     \
        func_type value = func_value;                                     \
        if (sizeof(target_type) < sizeof(func_type)) {                    \
            if (unlikely(value != (func_type) (target_type) value)) {     \
                func_type zero = 0;                                       \
                if (is_unsigned && unlikely(value < zero))                \
                    goto raise_neg_overflow;                              \
                else                                                      \
                    goto raise_overflow;                                  \
            }                                                             \
        }                                                                 \
        return (target_type) value;                                       \
    }

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
 #endif
#endif

static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(int) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(int, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(int, long, PyLong_AsLong(x))
            } else if (sizeof(int) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(int, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(int) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
        } else if (sizeof(long) <= sizeof(unsigned long long)) {
            return PyLong_FromUnsignedLongLong((unsigned long long) value);
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(long long)) {
            return PyLong_FromLongLong((long long) value);
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
    const size_t neg_one = (size_t) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(size_t) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long, PyLong_AsLong(x))
            } else if (sizeof(size_t) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(size_t, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) -1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long, PyLong_AsUnsignedLong(x))
            } else if (sizeof(long) <= sizeof(unsigned long long)) {
                __PYX_VERIFY_RETURN_INT(long, unsigned long long, PyLong_AsUnsignedLongLong(x))
            }
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
 #if CYTHON_USE_PYLONG_INTERNALS
            switch (Py_SIZE(x)) {
                case  0: return 0;
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +(((PyLongObject*)x)->ob_digit[0]));
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, -(sdigit) ((PyLongObject*)x)->ob_digit[0]);
            }
 #endif
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT(long, long, PyLong_AsLong(x))
            } else if (sizeof(long) <= sizeof(long long)) {
                __PYX_VERIFY_RETURN_INT(long, long long, PyLong_AsLongLong(x))
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_Int(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

static __pyx_t_double_complex __Pyx_PyComplex_As___pyx_t_double_complex(PyObject* o) {
    Py_complex cval;
#if CYTHON_COMPILING_IN_CPYTHON
    if (PyComplex_CheckExact(o))
        cval = ((PyComplexObject *)o)->cval;
    else
#endif
        cval = PyComplex_AsCComplex(o);
    return __pyx_t_double_complex_from_parts(
               (double)cval.real,
               (double)cval.imag);
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else
        if (__Pyx_PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_LENGTH(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else
        return PyUnicode_AsUTF8AndSize(o, length);
#endif
#endif
    } else
#endif
#if !CYTHON_COMPILING_IN_PYPY
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%.4s__ returned non-%.4s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b)))
      return PyInt_AS_LONG(b);
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
     #if CYTHON_USE_PYLONG_INTERNALS
       switch (Py_SIZE(b)) {
       case -1: return -(sdigit)((PyLongObject*)b)->ob_digit[0];
       case  0: return 0;
       case  1: return ((PyLongObject*)b)->ob_digit[0];
       }
     #endif
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */

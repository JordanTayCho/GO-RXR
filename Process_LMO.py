from SpecFileProcessing import *
from data_structure import *

sample = slab(2)
sample.addlayer(0,"SrTiO3", 50, roughness=2)
sample.addlayer(1, "LaMnO3", 30, roughness=2, linked_roughness=[False, 0.5, 2.5])
sample.polymorphous(1,'Mn', ['Mn2+', 'Mn3+'], [1,0], sf = ['Mn', 'Fe'])
sample.magnetization(1,['Mn2+', 'Mn3+'], [0.1,0], ['Co', 'Ni'])

def GetSampleInfo(sample):

    if(sample == "Pim10uc"):
        EScansList = [ [59,0,0], [60,0,0], [47,0,0], [48,0,0],
                       [35,0,0], [36,0,0], [25,0,0], [26,0,0],
                       [15,0,0], [16,0,0], [10,0,0], [11,0,0],
                       [20,0,0], [21,0,0], [30,0,0], [31,0,0],
                       [41,0,0], [42,0,0], [53,0,0], [54,0,0],
                       [65,0,0], [66,0,0], [61,0,0], [62,0,0],
                       [49,0,0], [50,0,0], [37,0,0], [38,0,0],
                       [27,0,0], [28,0,0], [17,0,0], [18,0,0],
                       [12,0,0], [13,0,0], [22,0,0], [23,0,0],
                       [32,0,0], [33,0,0], [43,0,0], [44,0,0],
                       [55,0,0], [56,0,0], [67,0,0], [68,0,0],
                       [95,0,0], [96,0,0], [93,0,0], [94,0,0],
                       [89,0,0], [90,0,0], [83,0,0], [84,0,0],
                       [77,0,0], [78,0,0], [75,0,0], [76,0,0],
                       [81,0,0], [82,0,0], [87,0,0], [88,0,0],
                       [91,0,0], [92,0,0], [127,0,0], [128,0,0],
                       [125,0,0], [126,0,0], [121,0,0], [122,0,0],
                       [115,0,0], [116,0,0], [109,0,0], [110,0,0],
                       [107,0,0], [108,0,0], [113,0,0], [114,0,0],
                       [119,0,0], [120,0,0], [123,0,0], [124,0,0],
                       [69,0,0], [70,0,0], [71,0,0], [72,0,0],
                       [73,0,0], [74,0,0] ]

        AScansList = [ [  9,4,0], [ 14,4,0], [ 19,4,0], [ 24,4,0],
                       [ 29,4,0], [ 34,4,0], [106,4,0], [129,4,0],
                       [ 39,4,0], [ 40,4,0], [ 45,4,0], [ 46,4,0],
                       [ 51,4,0], [ 52,4,0], [ 57,4,0], [ 58,4,0],
                       [ 63,4,0], [ 64,4,0], [ 79,4,0], [ 80,4,0],
                       [ 85,4,0], [ 86,4,0], [111,4,0], [112,4,0],
                       [117,4,0], [118,4,0]]

        ECalList = GetECalList([[458.21,457.95],[640.8,641],[835.91,835.55]])
        #ECalList = [0, 1, 0, 0, 0 ] #coefficients for polynomial scaling applied to energy (offset, linear, quadratic, etc)
        GeometryList = [0.3,5.0,10.0,300.0,0.0,0.0,0.0,0.0,0.0] #parameters for the geometry correction
        CorrectionInfo = [ "Data/Jaap17.spc", [94,"LV"], [95,"LH"], [96,"CL"], [97,"CR"]]

    elif (sample == "Pim7uc"):
        EScansList = [[54, 0, 0], [55, 0, 0], [44, 0, 0], [45, 0, 0],
                      [34, 0, 0], [35, 0, 0], [24, 0, 0], [25, 0, 0],
                      [14, 0, 0], [15, 0, 0], [9, 0, 0], [10, 0, 0],
                      [19, 0, 0], [20, 0, 0], [29, 0, 0], [30, 0, 0],
                      [40, 0, 0], [50, 0, 0], [60, 0, 0], [56, 0, 0],
                      [57, 0, 0], [46, 0, 0], [47, 0, 0], [36, 0, 0],
                      [37, 0, 0], [26, 0, 0], [27, 0, 0], [16, 0, 0],
                      [17, 0, 0], [11, 0, 0], [12, 0, 0], [21, 0, 0],
                      [22, 0, 0], [31, 0, 0], [32, 0, 0], [41, 0, 0],
                      [51, 0, 0], [61, 0, 0], [88, 0, 0], [89, 0, 0],
                      [86, 0, 0], [87, 0, 0], [82, 0, 0], [83, 0, 0],
                      [76, 0, 0], [77, 0, 0], [70, 0, 0], [71, 0, 0],
                      [68, 0, 0], [69, 0, 0], [74, 0, 0], [75, 0, 0],
                      [80, 0, 0], [81, 0, 0], [84, 0, 0], [85, 0, 0],
                      [120, 0, 0], [121, 0, 0], [118, 0, 0], [119, 0, 0],
                      [114, 0, 0], [115, 0, 0], [108, 0, 0], [109, 0, 0],
                      [102, 0, 0], [103, 0, 0], [100, 0, 0], [101, 0, 0],
                      [106, 0, 0], [107, 0, 0], [112, 0, 0], [113, 0, 0],
                      [116, 0, 0], [117, 0, 0], [62, 0, 0], [63, 0, 0],
                      [64, 0, 0], [65, 0, 0], [66, 0, 0], [67, 0, 0]]

        AScansList = [[8, 4, 0], [13, 4, 0], [18, 4, 0], [23, 4, 0],
                      [28, 4, 0], [33, 4, 0],[99, 4, 0], [38, 4, 0],
                      [39, 4, 0], [42, 4, 0], [43, 4, 0], [48, 4, 0],
                      [49, 4, 0], [52, 4, 0], [53, 4, 0], [58, 4, 0],
                      [59, 4, 0], [72, 4, 0], [73, 4, 0], [78, 4, 0],
                      [79, 4, 0], [104, 4, 0], [105, 4, 0], [110, 4, 0],
                      [111, 4, 0]]

        ECalList = GetECalList([[458.21, 457.95], [640.8, 641], [835.91, 835.55]])
        # ECalList = [0, 1, 0, 0, 0 ] #coefficients for polynomial scaling applied to energy (offset, linear, quadratic, etc)
        GeometryList = [0.3, 5.0, 10.0, 300.0, 0.0, 0.0, 0.0, 0.0, 0.0]  # parameters for the geometry correction
        CorrectionInfo = ["Data/Jaap17.spc", [94, "LV"], [95, "LH"], [96, "CL"], [97, "CR"]]

    elif (sample == "Pim4uc"):
        EScansList = [[59, 0, 0], [60, 0, 0], [47, 0, 0], [48, 0, 0],
                      [35, 0, 0], [36, 0, 0], [25, 0, 0], [26, 0, 0],
                      [15, 0, 0], [16, 0, 0], [10, 0, 0], [11, 0, 0],
                      [20, 0, 0], [21, 0, 0], [30, 0, 0], [31, 0, 0],
                      [41, 0, 0], [42, 0, 0], [53, 0, 0], [54, 0, 0],
                      [65, 0, 0], [66, 0, 0], [61, 0, 0], [62, 0, 0],
                      [49, 0, 0], [50, 0, 0], [37, 0, 0], [38, 0, 0],
                      [27, 0, 0], [28, 0, 0], [17, 0, 0], [18, 0, 0],
                      [12, 0, 0], [13, 0, 0], [22, 0, 0], [23, 0, 0],
                      [32, 0, 0], [33, 0, 0], [43, 0, 0], [44, 0, 0],
                      [55, 0, 0], [56, 0, 0], [67, 0, 0], [68, 0, 0],
                      [96, 0, 0], [97, 0, 0], [94, 0, 0], [95, 0, 0],
                      [90, 0, 0], [91, 0, 0], [84, 0, 0], [85, 0, 0],
                      [78, 0, 0], [79, 0, 0], [76, 0, 0], [77, 0, 0],
                      [82, 0, 0], [83, 0, 0], [88, 0, 0], [89, 0, 0],
                      [92, 0, 0], [93, 0, 0], [128, 0, 0], [129, 0, 0],
                      [126, 0, 0], [127, 0, 0], [122, 0, 0], [123, 0, 0],
                      [116, 0, 0], [117, 0, 0], [110, 0, 0], [111, 0, 0],
                      [108, 0, 0], [109, 0, 0], [114, 0, 0], [115, 0, 0],
                      [120, 0, 0], [121, 0, 0], [124, 0, 0], [125, 0, 0],
                      [69, 0, 0], [70, 0, 0], [71, 0, 0], [72, 0, 0],
                      [74, 0, 0], [75, 0, 0]]

        AScansList = [[9, 4, 0], [14, 4, 0], [19, 4, 0], [24, 4, 0],
                      [29, 4, 0], [34, 4, 0], [106, 4, 0], [129, 4, 0],
                      [39, 4, 0], [40, 4, 0], [45, 4, 0], [46, 4, 0],
                      [51, 4, 0], [52, 4, 0], [57, 4, 0], [58, 4, 0],
                      [63, 4, 0], [64, 4, 0], [79, 4, 0], [80, 4, 0],
                      [85, 4, 0], [86, 4, 0], [111, 4, 0], [112, 4, 0],
                      [117, 4, 0], [118, 4, 0]]

        ECalList = GetECalList([[458.21, 457.95], [640.8, 641], [835.91, 835.55]])
        # ECalList = [0, 1, 0, 0, 0 ] #coefficients for polynomial scaling applied to energy (offset, linear, quadratic, etc)
        GeometryList = [0.3, 5.0, 10.0, 300.0, 0.0, 0.0, 0.0, 0.0, 0.0]  # parameters for the geometry correction
        CorrectionInfo = ["Data/Jaap17.spc", [94, "LV"], [95, "LH"], [96, "CL"], [97, "CR"]]
    else:
        print("Unkown sample ", sample)
        exit()

    return np.array(EScansList),np.array(AScansList),np.array(ECalList),np.array(GeometryList),CorrectionInfo
  



samples = ["Pim10uc", "Pim7uc"]
#samples = ["Pim4uc"]

for sam in [0, 1]:
    EScan,AScan,ECal,Geo,Corr = GetSampleInfo(samples[sam])
    AsData,AsInfo = ProcessRXR("Data/" + samples[sam]+".spc", AScan,ECal,Geo,Corr,"A")
    EsData,EsInfo = ProcessRXR("Data/" + samples[sam]+".spc", EScan,ECal,Geo,Corr,"E")

    start = time()
    WriteDataHDF5(samples[sam] + ".h5",AsData,AsInfo,EsData,EsInfo, sample)
    #WriteDataASCII(samples[sam] + ".all",AsData,AsInfo,EsData,EsInfo, sample)
    end = time()
    print(end-start)





exit()




